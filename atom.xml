<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Secret</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://secretlin.github.io/blog/"/>
  <updated>2022-02-23T07:13:48.000Z</updated>
  <id>https://secretlin.github.io/blog/</id>
  
  <author>
    <name>Secret</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RecyclerView缓存机制和刷新原理</title>
    <link href="https://secretlin.github.io/blog//posts/88b62890/"/>
    <id>https://secretlin.github.io/blog//posts/88b62890/</id>
    <published>2022-02-20T12:21:40.266Z</published>
    <updated>2022-02-23T07:13:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>RecyclerView&#x7F13;&#x5B58;&#x673A;&#x5236;&#x548C;&#x5237;&#x65B0;&#x539F;&#x7406;<br><a id="more"></a><br>&#x6700;&#x8FD1;&#x521A;&#x597D;&#x5728;&#x770B;RecyclerView&#x6E90;&#x7801;&#x65B9;&#x9762;&#x77E5;&#x8BC6;&#xFF0C;&#x5305;&#x62EC;&#x7F13;&#x5B58;&#x673A;&#x5236;&#x548C;&#x5237;&#x65B0;&#x539F;&#x7406;&#xFF0C;&#x6240;&#x4EE5;&#x6253;&#x7B97;&#x5199;&#x4E0B;&#x6765;&#xFF0C;&#x5C31;&#x5F53;&#x590D;&#x4E60;&#x6574;&#x7406;&#x4E86;&#x3002;<br>&#x4F7F;&#x7528;RecyclerView&#x65F6;&#x4F1A;&#x4F7F;&#x7528;adapter&#x548C;viewHolder&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x4E14;viewHolder&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x8DDF;itemView&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5F53;&#x6211;&#x4EEC;&#x8BF4;&#x7F13;&#x5B58;view&#x65F6;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x7F13;&#x5B58;viewHolder&#x3002;</p><p><b>&#x4E00;.&#x7F13;&#x5B58;&#x673A;&#x5236;</b><br>RecyclerView&#x6709;&#x56DB;&#x4E2A;&#x7F13;&#x5B58;&#x673A;&#x5236;&#xFF1A;</p><p><font color="#4682B4">1.scrap&#xFF1A;&#x7F13;&#x5B58;&#x5F53;&#x524D;&#x5C4F;&#x5E55;&#x5185;&#x7684;viewHolder&#x3002;</font><br>scrap&#x5C42;&#x7684;&#x7F13;&#x5B58;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x7528;mAttachedScrap&#x548C;mChangedScrap&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002;<br><b>mAttachedScrap</b>&#xFF1A;&#x7F13;&#x5B58;&#x5C4F;&#x5E55;&#x5185;&#x7684;viewHolder&#x3002;&#x4ECE;RecyclerView&#x7684;onLayout&#x5F00;&#x59CB;&#xFF0C;&#x8C03;&#x7528;&#x4E86;onLayoutChildren&#x628A;&#x6240;&#x6709;&#x7684;view&#x90FD;&#x5B58;&#x5728;&#x8FD9;&#x91CC;&#x3002;&#x901A;&#x8FC7;item&#x7684;position&#x6216;&#x8005;itemid&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;viewHolder&#xFF0C;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;viewHolder&#x5E76;&#x4E0D;&#x4F1A;&#x8D70;onBindViewHolder&#x65B9;&#x6CD5;&#x3002;<br><b>mChangedScrap</b>&#xFF1A;&#x540C;&#x6837;&#x4E5F;&#x662F;&#x7F13;&#x5B58;&#x5C4F;&#x5E55;&#x5185;&#x7684;viewHolder&#x3002;&#x4ECE;&#x540D;&#x5B57;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x8FD9;&#x662F;&#x7F13;&#x5B58;&#x4E86;&#x6709;&#x53D8;&#x5316;&#x7684;viewHolder&#x3002;&#x4F7F;&#x7528;&#x573A;&#x666F;&#x662F;&#x5F53;&#x8C03;&#x7528;&#x4E86;notifyItemChanged&#x7B49;&#x65F6;&#x624D;&#x4F1A;&#x4F7F;&#x7528;mChangedScrap&#x6765;&#x7F13;&#x5B58;viewHolder&#x3002;&#x4F46;&#x662F;&#x53EA;&#x6709;&#x5728;&#x9884;&#x5E03;&#x5C40;&#x7684;&#x65F6;&#x5019;&#x624D;&#x4F1A;&#x7528;&#x5230;&#xFF0C;&#x771F;&#x6B63;&#x5E03;&#x5C40;&#x65F6;&#x53EA;&#x4F1A;&#x521B;&#x5EFA;&#x65B0;&#x7684;viewHolder&#x3002;</p><p><font color="#4682B4">2.cache&#xFF1A;&#x4F7F;&#x7528;<b>mCachedViews</b>&#x6765;&#x7F13;&#x5B58;&#x6ED1;&#x52A8;&#x65F6;&#x5373;&#x5C06;&#x4E0E;RecyclerView&#x5206;&#x79BB;&#x7684;ViewHolder&#xFF0C;&#x6309;&#x5B50;View&#x7684;position&#x6216;id&#x7F13;&#x5B58;&#x3002;</font><br>&#x51FA;&#x73B0;&#x573A;&#x666F;&#x662F;&#x6ED1;&#x52A8;RecyclerView&#x6216;&#x8005;&#x8C03;&#x7528;notify&#x3002;&#x9ED8;&#x8BA4;&#x6700;&#x591A;&#x5B58;&#x653E;2&#x4E2A;&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x53EF;&#x4EE5;&#x8C03;&#x7528;setItemViewCacheSize(int size)&#x6765;&#x589E;&#x5927;&#x7F13;&#x5B58;&#x91CF;&#x3002;&#x4ECE;&#x6E90;&#x7801;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x5F53;&#x8D85;&#x51FA;&#x4E86;&#x9650;&#x5236;&#x540E;&#xFF0C;&#x4F1A;&#x6839;&#x636E;FIFO&#x539F;&#x5219;&#x628A;viewHolder&#x62FF;&#x51FA;&#x6765;&#x5E76;&#x5B58;&#x653E;&#x5230;&#x4E0B;&#x4E00;&#x7EA7;&#x7F13;&#x5B58;&#x4E2D;&#xFF08;&#x5267;&#x900F;&#x4E00;&#x4E0B;&#xFF1A;RecyclerViewPool&#xFF09;</p><p><font color="#4682B4">3.ViewCacheExtension&#xFF1A;&#x8FD9;&#x662F;&#x9700;&#x8981;&#x5F00;&#x53D1;&#x8005;&#x53BB;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x7F13;&#x5B58;&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x9875;&#x9762;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x90FD;&#x53EF;&#x4EE5;&#x7F13;&#x5B58;&#x5230;&#x8FD9;&#x91CC;&#x3002;</font><br>&#x4F7F;&#x7528;&#x573A;&#x666F;&#x5F85;&#x4F1A;&#x518D;&#x8BB2;&#x3002;&#x867D;&#x7136;&#x81EA;&#x5B9A;&#x4E49;&#x7F13;&#x5B58;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x81EA;&#x7531;&#x5EA6;&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x662F;&#x56E0;&#x4E3A;&#x5B8C;&#x5168;&#x7531;&#x5F00;&#x53D1;&#x8005;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x7F13;&#x5B58;&#xFF0C;&#x4E5F;&#x5C31;&#x4F1A;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x614E;&#x7528;&#xFF01;</p><p><font color="#4682B4">4.RecycledViewPool&#xFF1A;ViewHolder&#x7F13;&#x5B58;&#x6C60;&#x3002;</font><br>&#x5982;&#x4E0A;&#x6240;&#x8BF4;&#xFF0C;&#x5728;&#x6709;&#x9650;&#x7684;mCachedViews&#x4E2D;&#x5982;&#x679C;&#x5B58;&#x4E0D;&#x4E0B;ViewHolder&#x65F6;&#xFF0C;&#x5C31;&#x4F1A;&#x628A;ViewHolder&#x5B58;&#x5165;<b>mRecyclerViewPool</b>&#x4E2D;&#x3002;&#x4ECE;&#x8FD9;&#x91CC;&#x62FF;&#x51FA;&#x6765;&#x7684;viewHolder&#x662F;&#x6839;&#x636E;viewType&#x800C;&#x4E0D;&#x662F;position&#x6216;itemid&#xFF0C;&#x800C;&#x4E14;&#x4F1A;&#x91CD;&#x7F6E;&#x6E05;&#x7A7A;viewHolder&#x3002;</p><p>&#x4EE5;&#x4E0A;&#x5C31;&#x662F;RecyclerView&#x7684;&#x56DB;&#x7EA7;&#x7F13;&#x5B58;&#x673A;&#x5236;&#x3002;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#x56FE;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1.png" alt="RecyclerView &#x56DB;&#x7EA7;&#x7F13;&#x5B58;&#x5173;&#x7CFB;" title="">                </div>                <div class="image-caption">RecyclerView &#x56DB;&#x7EA7;&#x7F13;&#x5B58;&#x5173;&#x7CFB;</div>            </figure><p></p><p>&#x8BA9;&#x6211;&#x4EEC;&#x518D;&#x770B;&#x4E00;&#x4E0B;&#x7B2C;&#x4E09;&#x7EA7;&#x7F13;&#x5B58;ViewCacheExtension&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;&#x8FD9;&#x4E2A;&#x5462;&#xFF1F;<br>&#x53EF;&#x4EE5;&#x5047;&#x8BBE;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#xFF1A;&#x5F53;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;itemView&#xFF08;&#x6216;&#x8005;&#x8BF4;viewHolder&#xFF09;&#x5B83;&#x88AB;&#x79FB;&#x51FA;&#x4E86;&#x5C4F;&#x5E55;&#x5916;&#xFF0C;&#x8FD9;&#x65F6;&#x8FDB;&#x5165;&#x4E86;mCacheViews&#x91CC;&#x9762;&#xFF0C;&#x5982;&#x679C;&#x8D85;&#x51FA;&#x4E86;&#x9650;&#x5236;&#x53C8;&#x4F1A;&#x8FDB;&#x5165;&#x5230;mRecyclerViewPool&#x91CC;&#x9762;&#x3002;&#x6839;&#x636E;&#x524D;&#x9762;&#x6211;&#x4EEC;&#x5F97;&#x77E5;&#x4ECE;mRecyclerViewPool&#x91CC;&#x9762;&#x51FA;&#x6765;&#x7684;viewHolder&#x6570;&#x636E;&#x4F1A;&#x88AB;&#x6E05;&#x7A7A;&#xFF0C;&#x90A3;&#x4E48;&#x52BF;&#x5FC5;&#x4F1A;&#x91CD;&#x65B0;&#x7ED1;&#x5B9A;adapter&#x3002;&#x5982;&#x679C;&#x53EA;&#x662F;&#x666E;&#x901A;&#x7684;itemView&#x5E76;&#x4E14;&#x6570;&#x636E;&#x4F1A;&#x4E00;&#x76F4;&#x53D8;&#x5316;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x6709;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x65E0;&#x6240;&#x8C13;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x7279;&#x5B9A;&#x7684;itemView&#x6BD4;&#x5982;&#x8BF4;position&#x4E3A;0&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x5B83;&#x4E00;&#x76F4;&#x5C31;&#x662F;&#x4FDD;&#x6301;position&#x4E3A;0&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;ViewCacheExtension&#x6765;&#x7F13;&#x5B58;&#x5B83;&#xFF0C;&#x4F7F;&#x5B83;&#x4E0D;&#x4F1A;&#x8FDB;&#x5165;mRecyclerViewPool&#x91CC;&#x9762;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8282;&#x7701;&#x5185;&#x5B58;&#x63D0;&#x9AD8;&#x6548;&#x7387;&#x4E86;&#x3002;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class MyViewCacheExtension : RecyclerView.ViewCacheExtension() {</span><br><span class="line">    <span class="keyword">private</span> val mAdapter: RecyclerView.Adapter&lt;*&gt;? = <span class="keyword">null</span></span><br><span class="line">    <span class="function">override fun <span class="title">getViewForPositionAndType</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        recycler: RecyclerView.Recycler,</span></span></span><br><span class="line"><span class="function"><span class="params">        position: Int,</span></span></span><br><span class="line"><span class="function"><span class="params">        type: Int</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span>: View? </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">if</span>(type == TYPE_SPECIAL) mAdapter.data(position) <span class="keyword">else</span> <span class="keyword">null</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5728;activity&#x8C03;&#x7528;mRecyclerView.setViewCacheExtension(mExtensionCache); &#x5C31;&#x884C;&#x4E86;<br></p><blockquote><p>&#x7F51;&#x4E0A;&#x6709;&#x4E2A;&#x5177;&#x4F53;&#x4F7F;&#x7528;&#x4F8B;&#x5B50;&#xFF1A;<a href="https://github.com/shineM/RecyclerViewCacheDemo" target="_blank" rel="noopener">https://github.com/shineM/RecyclerViewCacheDemo</a></p></blockquote><br><b>&#x4E8C;&#x3001;&#x5927;&#x81F4;&#x7684;&#x6E90;&#x7801;&#x89E3;&#x6790;</b><p></p><p>1.&#x521D;&#x59CB;&#x5316;&#x8C03;&#x7528;<br>View&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;&#x662F;&#x4ECE;onMeasure&#x5F00;&#x59CB;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5148;&#x4ECE;RecyclerView&#x7684;onMeasure&#x5165;&#x624B;&#x3002;&#x6BD4;&#x8F83;&#x6838;&#x5FC3;&#x7684;&#x662F;onMeasure&#x91CC;&#x9762;&#x7684;dispatchLayoutStep2&#xFF0C;&#x91CC;&#x9762;&#x901A;&#x8FC7;mLayout&#xFF08;&#x5373;LayoutManager&#xFF09;.onLayoutChildren&#xFF0C;&#x4EE5;LinearLayoutManager&#x4E3A;&#x4F8B;&#x6765;&#x5206;&#x6790;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLayoutChildren</span><span class="params">(RecyclerView.Recycler recycler, RecyclerView.State state)</span> </span>{</span><br><span class="line">    <span class="comment">// layout algorithm:</span></span><br><span class="line">    <span class="comment">// 1) by checking children and other variables, find an anchor coordinate and an anchor </span></span><br><span class="line">    <span class="comment">//  item position.-- &#x901A;&#x8FC7;&#x786E;&#x8BA4;&#x5B50;view&#x548C;&#x5176;&#x4ED6;&#x53D8;&#x91CF;&#x6765;&#x627E;&#x5230;&#x951A;&#x70B9;&#x5750;&#x6807;&#x548C;&#x4F4D;&#x7F6E;</span></span><br><span class="line">    <span class="comment">// 2) fill towards start, stacking from bottom --&#x4ECE;&#x5E95;&#x90E8;&#x5411;</span></span><br><span class="line">    <span class="comment">// 3) fill towards end, stacking from top</span></span><br><span class="line">    <span class="comment">// 4) scroll to fulfill requirements like stack from bottom.</span></span><br><span class="line">    <span class="comment">// -- &#x5B9E;&#x73B0;&#x6ED1;&#x52A8;&#x9700;&#x6C42;&#xFF0C;&#x5982;&#x4ECE;&#x5E95;&#x90E8;&#x5F00;&#x59CB;&#x7ED8;&#x5236; </span></span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line"></span><br><span class="line">    detachAndScrapAttachedViews(recycler);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mAnchorInfo.mLayoutFromEnd) {</span><br><span class="line">        <span class="comment">// fill towards start</span></span><br><span class="line">        fill(recycler, mLayoutState, state, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// fill towards end</span></span><br><span class="line">        fill(recycler, mLayoutState, state, <span class="keyword">false</span>);</span><br><span class="line">        endOffset = mLayoutState.mOffset;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// fill towards end</span></span><br><span class="line">        fill(recycler, mLayoutState, state, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// fill towards start</span></span><br><span class="line">        fill(recycler, mLayoutState, state, <span class="keyword">false</span>);</span><br><span class="line">        startOffset = mLayoutState.mOffset;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FDB;&#x5165;detachAndScrapAttachedViews-&gt;scrapOrRecycleView&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">scrapOrRecycleView</span><span class="params">(Recycler recycler, <span class="keyword">int</span> index, View view)</span> </span>{</span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    <span class="keyword">if</span> (viewHolder.isInvalid() &amp;&amp; !viewHolder.isRemoved()</span><br><span class="line">            &amp;&amp; !mRecyclerView.mAdapter.hasStableIds()) {</span><br><span class="line">          &#x2026;&#x2026;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// &#x56E0;&#x4E3A;&#x662F;&#x4ECE;&#x521D;&#x59CB;&#x5316;&#x5F00;&#x59CB;&#xFF0C;&#x5148;&#x770B;&#x8FD9;&#x91CC;</span></span><br><span class="line">        <span class="comment">// detachViewAt&#x4F1A;&#x6682;&#x65F6;&#x79FB;&#x9664;view</span></span><br><span class="line">        detachViewAt(index);</span><br><span class="line">        recycler.scrapView(view);</span><br><span class="line">        mRecyclerView.mViewInfoStore.onViewDetached(viewHolder);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x7136;&#x540E;&#x8FDB;&#x5165;recycler.scrapView(view)&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scrapView</span><span class="params">(View view)</span> </span>{</span><br><span class="line">    <span class="keyword">final</span> ViewHolder holder = getChildViewHolderInt(view);</span><br><span class="line">    <span class="keyword">if</span> (holder.hasAnyOfTheFlags(ViewHolder.FLAG_REMOVED | ViewHolder.FLAG_INVALID)</span><br><span class="line">            || !holder.isUpdated() || canReuseUpdatedViewHolder(holder)) {</span><br><span class="line">        <span class="keyword">if</span> (holder.isInvalid() &amp;&amp; !holder.isRemoved() &amp;&amp; !mAdapter.hasStableIds()) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;Called scrap view with an invalid view.&quot;</span></span><br><span class="line">                    + <span class="string">&quot; Invalid views cannot be reused from scrap, they should rebound from&quot;</span></span><br><span class="line">                    + <span class="string">&quot; recycler pool.&quot;</span> + exceptionLabel());</span><br><span class="line">        }</span><br><span class="line">        holder.setScrapContainer(<span class="keyword">this</span>, <span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// &#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5728;&#x8FD9;&#x91CC;&#x8C03;&#x7528;&#x4E86;mAttchedScrap&#x628A;holder&#x6DFB;&#x52A0;&#x8FDB;&#x53BB;</span></span><br><span class="line">        mAttachedScrap.add(holder);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">if</span> (mChangedScrap == <span class="keyword">null</span>) {</span><br><span class="line">            mChangedScrap = <span class="keyword">new</span> ArrayList&lt;ViewHolder&gt;();</span><br><span class="line">        }</span><br><span class="line">        holder.setScrapContainer(<span class="keyword">this</span>, <span class="keyword">true</span>);</span><br><span class="line">        mChangedScrap.add(holder);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x518D;&#x56DE;&#x5230;scrapOrRecycleView&#x91CC;&#x9762;&#xFF0C;&#x770B;&#x770B;if&#x7684;&#x60C5;&#x51B5;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(viewHolder.isInvalid()&amp;&amp;!viewHolder.isRemoved()</span><br><span class="line">    &amp;&amp;!mRecyclerView.mAdapter.hasStableIds()) {</span><br><span class="line">    <span class="comment">// &#x79FB;&#x9664;&#x8FD9;&#x4E2A;view</span></span><br><span class="line">    removeViewAt(index);</span><br><span class="line">    <span class="comment">// &#x4F7F;&#x7528;&#x56DE;&#x6536;&#x673A;&#x5236;</span></span><br><span class="line">    recycler.recycleViewHolderInternal(viewHolder);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x6765;&#x5230;&#x4E86;recycleViewHolderInternal&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recycleViewHolderInternal</span><span class="params">(ViewHolder holder)</span> </span>{</span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    <span class="keyword">boolean</span> cached = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (forceRecycle || holder.isRecyclable()) {</span><br><span class="line">        <span class="keyword">if</span> (mViewCacheMax &gt; <span class="number">0</span></span><br><span class="line">                &amp;&amp; !holder.hasAnyOfTheFlags(ViewHolder.FLAG_INVALID</span><br><span class="line">                | ViewHolder.FLAG_REMOVED</span><br><span class="line">                | ViewHolder.FLAG_UPDATE</span><br><span class="line">                | ViewHolder.FLAG_ADAPTER_POSITION_UNKNOWN)) {</span><br><span class="line">            <span class="comment">// Retire oldest cached view</span></span><br><span class="line">            <span class="keyword">int</span> cachedViewSize = mCachedViews.size();</span><br><span class="line">            <span class="keyword">if</span> (cachedViewSize &gt;= mViewCacheMax &amp;&amp; cachedViewSize &gt; <span class="number">0</span>) {</span><br><span class="line">                <span class="comment">// &#x770B;&#x8FD9;&#x91CC;&#x3002;&#x5982;&#x679C;mCachedViews&#x7684;&#x5BB9;&#x91CF;&#x8D85;&#x8FC7;&#x540E;</span></span><br><span class="line">                <span class="comment">// &#x5C31;&#x4F1A;&#x4F7F;&#x7528;recycleCachedViewAt&#x5904;&#x7406;&#x7B2C;&#x4E00;&#x4E2A;View</span></span><br><span class="line">                recycleCachedViewAt(<span class="number">0</span>);</span><br><span class="line">                cachedViewSize--;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            &#x2026;&#x2026;</span><br><span class="line">            mCachedViews.add(targetCacheIndex, holder);</span><br><span class="line">            cached = <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (!cached) {</span><br><span class="line">            <span class="comment">//&#x5728;&#x6CA1;&#x6709;&#x6DFB;&#x52A0;&#x8FDB;mCachedViews&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x653E;&#x8FDB;RecyclerdViewPool&#x4E2D;</span></span><br><span class="line">            addViewHolderToRecycledViewPool(holder, <span class="keyword">true</span>);</span><br><span class="line">            recycled = <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">    } </span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    <span class="comment">// even if the holder is not removed, we still call this method so that it is removed</span></span><br><span class="line">    <span class="comment">// from view holder lists.</span></span><br><span class="line">    mViewInfoStore.removeViewHolder(holder);</span><br><span class="line">    <span class="keyword">if</span> (!cached &amp;&amp; !recycled &amp;&amp; transientStatePreventsRecycling) {</span><br><span class="line">        holder.mOwnerRecyclerView = <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recycleCachedViewAt</span><span class="params">(<span class="keyword">int</span> cachedViewIndex)</span> </span>{</span><br><span class="line"></span><br><span class="line">    ViewHolder viewHolder = mCachedViews.get(cachedViewIndex);</span><br><span class="line">    <span class="comment">// &#x770B;&#x5230;&#x8FD9;&#x91CC;&#x4E5F;&#x662F;&#x8C03;&#x7528;&#x4E86;addViewHolderToRecycledViewPool&#xFF0C;</span></span><br><span class="line">    <span class="comment">// &#x518D;&#x4E00;&#x6B21;&#x8BF4;&#x660E;&#x4E86;&#x5982;&#x679C;&#x8D85;&#x8FC7;mCachedViews&#x7684;&#x5BB9;&#x91CF;&#x5C31;&#x4F1A;&#x628A;&#x5148;&#x8FDB;&#x53BB;&#x7684;View&#x653E;&#x5230;RecyclerdViewPool</span></span><br><span class="line">    addViewHolderToRecycledViewPool(viewHolder, <span class="keyword">true</span>);</span><br><span class="line">    mCachedViews.remove(cachedViewIndex);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addViewHolderToRecycledViewPool</span><span class="params">(@NonNull ViewHolder holder, <span class="keyword">boolean</span> dispatchRecycled)</span> </span>{</span><br><span class="line">    clearNestedRecyclerViewIfNotNested(holder);</span><br><span class="line">    View itemView = holder.itemView;</span><br><span class="line">    &#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;</span><br><span class="line">    holder.mOwnerRecyclerView = <span class="keyword">null</span>;</span><br><span class="line">    getRecycledViewPool().putRecycledView(holder);<span class="comment">//&#x5C06;holder&#x6DFB;&#x52A0;&#x5230;RecycledViewPool&#x4E2D;</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x73B0;&#x5728;&#x56DE;&#x5230;LinearLayout&#x7684;onLayoutChildren&#xFF0C;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x770B;&#xFF0C;&#x770B;&#x5230;&#x4E00;&#x76F4;&#x8C03;&#x7528;fill-&gt;layoutChunk&#xFF0C;&#x901A;&#x8FC7;layoutState.next&#x6765;&#x83B7;&#x53D6;view<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">View <span class="title">next</span><span class="params">(RecyclerView.Recycler recycler)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (mScrapList != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="comment">//mScrapList&#x662F;mAttachedScrap,&#x4F46;&#x662F;&#x5B83;&#x662F;&#x53EA;&#x8BFB;&#x7684;&#xFF0C;&#x800C;&#x4E14;&#x53EA;&#x6709;&#x5728;&#x5F00;&#x542F;&#x9884;&#x6D4B;&#x52A8;&#x753B;&#x65F6;&#x624D;&#x4F1A;&#x88AB;&#x8D4B;&#x503C;&#xFF0C;&#x53EF;&#x5148;&#x5FFD;&#x7565;</span></span><br><span class="line">        <span class="keyword">return</span> nextViewFromScrapList();</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x91CD;&#x70B9;&#x5728;&#x8FD9;&#x91CC;</span></span><br><span class="line">    <span class="keyword">final</span> View view = recycler.getViewForPosition(mCurrentPosition);</span><br><span class="line">    mCurrentPosition += mItemDirection;</span><br><span class="line">    <span class="keyword">return</span> view;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>getViewForPosition-&gt;tryGetViewHolderForPositionByDeadline<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="function">ViewHolder <span class="title">tryGetViewHolderForPositionByDeadline</span><span class="params">(<span class="keyword">int</span> position,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                 <span class="keyword">boolean</span> dryRun, <span class="keyword">long</span> deadlineNs)</span> </span>{</span><br><span class="line">    <span class="comment">// 0) If there is a changed scrap, try to find from there</span></span><br><span class="line">    <span class="comment">// &#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;&#x662F;&#x9884;&#x5E03;&#x5C40;&#xFF08;&#x540E;&#x9762;&#x8BB2;&#xFF09;</span></span><br><span class="line">    <span class="keyword">if</span> (mState.isPreLayout()) {</span><br><span class="line">        holder = getChangedScrapViewForPosition(position);</span><br><span class="line">        fromScrapOrHiddenOrCache = holder != <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 1) Find by position from scrap/hidden list/cache</span></span><br><span class="line">    <span class="comment">// &#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x5C31;&#x4ECE;mAttachedViews&#x548C;mCachedViews&#x4E2D;&#x627E;</span></span><br><span class="line">    <span class="comment">// &#x6B63;&#x5E38;&#x6765;&#x8BF4;&#x662F;&#x4ECE;&#x8FD9;&#x91CC;&#x5F00;&#x59CB;&#x7684;</span></span><br><span class="line">    <span class="keyword">if</span> (holder == <span class="keyword">null</span>) {</span><br><span class="line">        holder = getScrapOrHiddenOrCachedHolderForPosition(position, dryRun);</span><br><span class="line">        &#x2026;&#x2026;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (holder == <span class="keyword">null</span> &amp;&amp; mViewCacheExtension != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="comment">// &#x627E;&#x4E0D;&#x5230;&#x7684;&#x8BDD;&#xFF0C;&#x5C31;&#x4ECE;&#x81EA;&#x5B9A;&#x4E49;&#x7684;ViewCacheExtension&#x4E2D;&#x627E;</span></span><br><span class="line">        <span class="comment">// &#x524D;&#x63D0;&#x662F;&#x8981;&#x81EA;&#x5B9A;&#x4E49;&#xFF0C;&#x4E0D;&#x7136;&#x5C31;&#x4F1A;&#x7565;&#x8FC7;</span></span><br><span class="line">        <span class="keyword">final</span> View view = mViewCacheExtension</span><br><span class="line">                .getViewForPositionAndType(<span class="keyword">this</span>, position, type);   </span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (holder == <span class="keyword">null</span>) { <span class="comment">// fallback to pool</span></span><br><span class="line">        <span class="comment">// &#x4ECE;RecyclerdViewPool&#x4E2D;&#x627E;</span></span><br><span class="line">        <span class="comment">// &#x63D2;&#x64AD;&#x4E00;&#x4E0B;&#xFF0C;RecycledViewPool&#x662F;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x957F;&#x8FD9;&#x6837;</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        private static final int DEFAULT_MAX_SCRAP = 5;</span></span><br><span class="line"><span class="comment">        static class ScrapData {</span></span><br><span class="line"><span class="comment">            final ArrayList&lt;RecyclerView.ViewHolder&gt; mScrapHeap = new ArrayList&lt;&gt;();</span></span><br><span class="line"><span class="comment">            int mMaxScrap = DEFAULT_MAX_SCRAP;</span></span><br><span class="line"><span class="comment">            long mCreateRunningAverageNs = 0;</span></span><br><span class="line"><span class="comment">            long mBindRunningAverageNs = 0;</span></span><br><span class="line"><span class="comment">        }</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        key&#x662F;itemType&#xFF0C;value&#x5C31;&#x662F;&#x4E00;&#x4E2A;list&#xFF0C;&#x5BB9;&#x91CF;&#x6700;&#x5927;&#x4E3A;5</span></span><br><span class="line"><span class="comment">        SparseArray&lt;RecyclerView.RecycledViewPool.ScrapData&gt; mScrap = new SparseArray&lt;&gt;();</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        holder&#x4ECE;RecycledViewPool&#x7684;&#x83B7;&#x53D6;</span></span><br><span class="line"><span class="comment">        holder = getRecycledViewPool().getRecycledView(type);</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (holder == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="comment">//&#x5982;&#x679C;&#x6240;&#x6709;&#x7F13;&#x5B58;&#x4E2D;&#x90FD;&#x627E;&#x4E0D;&#x5230;</span></span><br><span class="line">        holder = mAdapter.createViewHolder(RecyclerView.<span class="keyword">this</span>, type);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (mState.isPreLayout() &amp;&amp; holder.isBound()) {</span><br><span class="line">        <span class="comment">// &#x9884;&#x5E03;&#x5C40;&#x72B6;&#x6001;&#x4E0D;&#x7528;&#x66F4;&#x65B0;&#x4EC0;&#x4E48;</span></span><br><span class="line">        holder.mPreLayoutPosition = position;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (!holder.isBound() || holder.needsUpdate() || holder.isInvalid()) {</span><br><span class="line">        <span class="comment">// &#x5982;&#x679C;holder&#x662F;&#x9700;&#x8981;&#x66F4;&#x65B0;&#x6216;&#x8005;&#x65E0;&#x6548;&#x7B49;&#x7B49;</span></span><br><span class="line">        <span class="comment">// &#x9700;&#x8981;&#x91CD;&#x65B0;&#x7ED1;&#x5B9A;</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> offsetPosition = mAdapterHelper.findPositionOffset(position);</span><br><span class="line">        bound = tryBindViewHolderByDeadline(holder, offsetPosition, position, deadlineNs);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x81F3;&#x6B64;&#xFF0C;&#x5927;&#x6982;&#x7684;&#x6D41;&#x7A0B;&#x5C31;&#x8FD9;&#x6837;&#x7ED3;&#x675F;&#x4E86;&#x3002;&#x5F88;&#x660E;&#x663E;&#x5F53;&#x7B2C;&#x4E00;&#x6B21;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x8FD8;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x7F13;&#x5B58;&#x7684;viewHolder&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x4E00;&#x76F4;&#x8C03;&#x7528;createViewHolder&#x53BB;&#x521B;&#x5EFA;&#x3002;&#x7531;&#x4E8E;&#x5728;onLayout&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x4F1A;&#x8C03;&#x7528;onLayoutChildren&#xFF0C;&#x6240;&#x4EE5;&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x540E;&#x9700;&#x8981;&#x7F13;&#x5B58;&#xFF0C;&#x907F;&#x514D;&#x91CD;&#x590D;&#x521D;&#x59CB;&#x5316;</p><p>PS&#xFF1A;&#x4ECE;Scrap&#x4E2D;&#x53D6;&#x89C6;&#x56FE;&#x7684;&#x540C;&#x65F6;&#x5C31;&#x88AB;&#x79FB;&#x51FA;&#x4E86;&#x7F13;&#x5B58;&#x3002;&#x5728;onLayout&#x8FD9;&#x91CC;&#x6700;&#x7EC8;&#x4F1A;&#x8C03;&#x7528;&#x5230;dispatchLayoutStep3&#x65B9;&#x6CD5;&#xFF0C;&#x5982;&#x679C;Scrap&#x8FD8;&#x6709;&#x7F13;&#x5B58;&#xFF0C;&#x90A3;&#x4E48;&#x7F13;&#x5B58;&#x4F1A;&#x88AB;&#x6E05;&#x7A7A;&#xFF0C;&#x6E05;&#x7A7A;&#x7684;&#x7F13;&#x5B58;&#x4F1A;&#x88AB;&#x6DFB;&#x52A0;&#x5230;mCachedViews&#x6216;&#x8005;RecyclerPool&#x4E2D;&#x3002;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dispatchLayoutStep3</span><span class="params">()</span> </span>{</span><br><span class="line">    mLayout.removeAndRecycleScrapInt(mRecycler);</span><br><span class="line">    <span class="keyword">if</span> (mRecycler.mChangedScrap != <span class="keyword">null</span>) {</span><br><span class="line">        mRecycler.mChangedScrap.clear();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">removeAndRecycleScrapInt</span><span class="params">(RecyclerView.Recycler recycler)</span> </span>{</span><br><span class="line">    recycler.clearScrap();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clearScrap</span><span class="params">()</span> </span>{</span><br><span class="line">    mAttachedScrap.clear();</span><br><span class="line">    <span class="keyword">if</span> (mChangedScrap != <span class="keyword">null</span>) {</span><br><span class="line">        mChangedScrap.clear();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>2.&#x6ED1;&#x52A8;&#x65F6;&#x7684;&#x8C03;&#x7528;<br>&#x4ECE;LinearLayout&#x7684;scrollBy&#x5165;&#x624B;&#x5206;&#x6790;&#xFF0C;&#x6700;&#x540E;&#x53C8;&#x4F1A;&#x8C03;&#x7528;fill<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">fill</span><span class="params">(RecyclerView.Recycler recycler, LayoutState layoutState,</span></span></span><br><span class="line"><span class="function"><span class="params">            RecyclerView.State state, <span class="keyword">boolean</span> stopOnFocusable)</span> </span>{</span><br><span class="line">       <span class="comment">// max offset we should set is mFastScroll + available</span></span><br><span class="line">       <span class="keyword">final</span> <span class="keyword">int</span> start = layoutState.mAvailable;</span><br><span class="line">       <span class="keyword">if</span> (layoutState.mScrollingOffset != LayoutState.SCROLLING_OFFSET_NaN) {</span><br><span class="line">           <span class="comment">// TODO ugly bug fix. should not happen</span></span><br><span class="line">           <span class="keyword">if</span> (layoutState.mAvailable &lt; <span class="number">0</span>) {</span><br><span class="line">               layoutState.mScrollingOffset += layoutState.mAvailable;</span><br><span class="line">           }</span><br><span class="line">           <span class="comment">//&#x4ECE;&#x8FD9;&#x91CC;&#x5F00;&#x59CB;&#x56DE;&#x6536;</span></span><br><span class="line">           recycleByLayoutState(recycler, layoutState);</span><br><span class="line">       }</span><br><span class="line">&#x2026;&#x2026;</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x4EE5;recycleViewsFromEnd&#x4E3A;&#x4F8B;&#xFF0C;-&gt;recycleChildren-&gt;removeAndRecycleViewAt-&gt;recycler.recycleView-&gt;recycleViewHolderInternal&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4E4B;&#x524D;&#x6709;&#x5206;&#x6790;&#xFF0C;&#x5C31;&#x662F;&#x628A;viewHolder&#x7F13;&#x5B58;&#x5230;mCachedViews&#x6216;mRecycledViewPool&#x91CC;&#x9762;&#xFF0C;&#x8FD9;&#x4E5F;&#x8BF4;&#x660E;&#x4E86;&#x79FB;&#x9664;&#x5C4F;&#x5E55;&#x5916;&#x7684;viewHolder&#x5C31;&#x4F1A;&#x5B58;&#x5230;&#x91CC;&#x9762;&#x3002;<br>&#x5F53;&#x7136;&#x56DE;&#x6536;&#x540E;&#x8FD8;&#x4F1A;&#x7EE7;&#x7EED;&#x8D70;layoutChunk()&#xFF0C;&#x590D;&#x7528;&#x6216;&#x91CD;&#x65B0;&#x5EFA;&#x7ACB;viewHolder&#x3002;</p><p><b>&#x4E09;&#x3001;&#x65E2;&#x7136;&#x90FD;&#x770B;&#x4E86;&#x6E90;&#x7801;&#x4E86;&#xFF0C;&#x4E0D;&#x59A8;&#x518D;&#x5206;&#x6790;&#x4E00;&#x4E2A;&#x4E1C;&#x897F;&#xFF1A;&#x9884;&#x5E03;&#x5C40;pre-layout</b></p><p>1.&#x4EC0;&#x4E48;&#x53EB;&#x505A;&#x9884;&#x5E03;&#x5C40;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;&#x5230;&#x8FD9;&#x4E2A;&#x5462;&#xFF1F;<br>&#x5F53;&#x4F60;&#x73B0;&#x5728;&#x7684;&#x5217;&#x8868;&#x6709;{1,2,3}&#xFF0C;&#x6B64;&#x65F6;&#x5C4F;&#x5E55;&#x53EA;&#x80FD;&#x663E;&#x793A;{1,2}&#x3002;&#x5F53;&#x4F60;&#x60F3;&#x8981;&#x5220;&#x9664;&#x6389;2&#x65F6;&#xFF0C;&#x8C03;&#x7528;notifyItemRemove&#x65F6;&#xFF0C;&#x80FD;&#x591F;&#x4EA7;&#x751F;&#x628A;3&#x4E0A;&#x79FB;&#x5230;2&#x8FD9;&#x6837;&#x7684;&#x52A8;&#x753B;&#x6548;&#x679C;&#xFF0C;&#x662F;&#x901A;&#x8FC7;&#x9884;&#x5E03;&#x5C40;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002;<br>&#x9884;&#x5E03;&#x5C40;&#x8D77;&#x5230;&#x4EC0;&#x4E48;&#x4F5C;&#x7528;&#x5462;&#xFF1F;&#x9996;&#x5148;&#xFF0C;RecyclerView&#x5148;&#x901A;&#x8FC7;&#x9884;&#x5E03;&#x5C40;(preLayout)&#x751F;&#x6210;&#x5FEB;&#x7167;{1,2,3}&#xFF08;&#x5373;&#x4F7F;&#x6B64;&#x65F6;&#x5C4F;&#x5E55;&#x4E0D;&#x53EF;&#x89C1;&#xFF0C;&#x4E5F;&#x8981;&#x628A;3&#x7684;&#x201C;&#x753B;&#x201D;&#x51FA;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x5220;&#x6389;2&#x540E;&#x7684;&#x7ED3;&#x679C;&#x5FEB;&#x7167;(postLayout)&#x5C31;&#x662F;{1,3}&#x3002;&#x628A;&#x8FD9;&#x4E24;&#x5F20;&#x5FEB;&#x7167;&#x505A;&#x5BF9;&#x6BD4;&#xFF0C;&#x5F97;&#x5230;3&#x4E4B;&#x524D;&#x540E;&#x4F4D;&#x7F6E;&#x70B9;&#x4FE1;&#x606F;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x505A;&#x8FD9;&#x6837;&#x7684;&#x52A8;&#x753B;&#x4E86;&#x3002;</p><p>&#x90A3;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x5462;&#xFF1F;&#x770B;&#x6E90;&#x7801;<br>&#x8BA9;&#x6211;&#x4EEC;&#x518D;&#x6B21;&#x6109;&#x5FEB;&#x5730;&#x4ECE;onMeasure-&gt;dispatchLayoutStep1&#xFF0C;&#x53D1;&#x73B0;&#x6709;&#x4E00;&#x53E5;&#xFF1A;mState.mInPreLayout = mState.mRunPredictiveAnimations; &#x5047;&#x8BBE;&#x5B83;&#x4E3A;true&#xFF08;&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x4EC5;&#x5206;&#x6790;&#x5B83;&#x662F;true&#x7684;&#x4F5C;&#x7528;&#xFF09;&#xFF0C;&#x65E2;&#x7136;mState.mInPreLayout&#x4E3A;true&#x4E86;&#xFF0C;&#x90A3;&#x4E48;mState.mRunPredictiveAnimations&#x80AF;&#x5B9A;&#x4E5F;&#x662F;true<br>&#x7EE7;&#x7EED;&#x770B;dispatchLayoutStep1&#x7684;&#x540E;&#x7EED;&#x4EE3;&#x7801;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span>(mState.mRunPredictiveAnimations) {</span><br><span class="line">    <span class="comment">// Step 1: run prelayout: This will use the old positions of items. The layout manager</span></span><br><span class="line">    <span class="comment">// is expected to layout everything, even removed items (though not to add removed</span></span><br><span class="line">    <span class="comment">// items back to the container). This gives the pre-layout position of APPEARING views</span></span><br><span class="line">    <span class="comment">// which come into existence as part of the real layout.</span></span><br><span class="line">    <span class="comment">// Save old positions so that LayoutManager can run its mapping logic.</span></span><br><span class="line">    saveOldPositions();</span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    <span class="comment">// temporarily disable flag because we are asking for previous layout</span></span><br><span class="line">    mLayout.onLayoutChildren(mRecycler, mState);</span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x7684;&#x5927;&#x6982;&#x5185;&#x5BB9;&#x662F;&#x5728;&#x5220;&#x9664;item&#x65F6;&#xFF0C;&#x4F1A;&#x5148;&#x4FDD;&#x5B58;&#x672A;&#x5220;&#x9664;&#x524D;&#x7684;&#x5E03;&#x5C40;&#x548C;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x3002;<br>&#x7136;&#x540E;&#x8DDF;&#x4E4B;&#x524D;&#x5206;&#x6790;&#x7684;onLayoutChildren&#x4E00;&#x6837;&#xFF0C;&#x6700;&#x540E;&#x4F1A;&#x8C03;&#x7528;fill&#x6765;&#x586B;&#x5145;&#x5E03;&#x5C40;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">fill</span><span class="params">(RecyclerView.Recycler recycler, LayoutState layoutState,</span></span></span><br><span class="line"><span class="function"><span class="params">             RecyclerView.State state, <span class="keyword">boolean</span> stopOnFocusable)</span> </span>{</span><br><span class="line">        &#x2026;&#x2026;</span><br><span class="line">        <span class="keyword">int</span> remainingSpace = layoutState.mAvailable + layoutState.mExtraFillSpace;</span><br><span class="line">        LayoutChunkResult layoutChunkResult = mLayoutChunkResult;</span><br><span class="line">        <span class="keyword">while</span> ((layoutState.mInfinite || remainingSpace &gt; <span class="number">0</span>) &amp;&amp; layoutState.hasMore(state)) {</span><br><span class="line">            &#x2026;&#x2026;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * Consume the available space if:</span></span><br><span class="line"><span class="comment">             * * layoutChunk did not request to be ignored</span></span><br><span class="line"><span class="comment">             * * OR we are laying out scrap children</span></span><br><span class="line"><span class="comment">             * * OR we are not doing pre-layout</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">if</span> (!layoutChunkResult.mIgnoreConsumed || layoutState.mScrapList != <span class="keyword">null</span></span><br><span class="line">                    || !state.isPreLayout()) {</span><br><span class="line">                layoutState.mAvailable -= layoutChunkResult.mConsumed;</span><br><span class="line">                <span class="comment">// we keep a separate remaining space because mAvailable is important for recycling</span></span><br><span class="line">                remainingSpace -= layoutChunkResult.mConsumed;</span><br><span class="line">            }</span><br><span class="line">            &#x2026;&#x2026;</span><br><span class="line">        }</span><br><span class="line">        &#x2026;&#x2026;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">&#x8865;&#x5145;&#xFF1A;</span><br><span class="line">    <span class="keyword">if</span> (params.isItemRemoved() || params.isItemChanged()) {</span><br><span class="line">        result.mIgnoreConsumed = <span class="keyword">true</span>;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x901A;&#x8FC7;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x5927;&#x6982;&#x5F97;&#x77E5;&#xFF0C;&#x5F53;remainingSpace&gt;0&#x65F6;&#x8C03;&#x7528;layoutChunk&#x6765;&#x753B;item&#xFF0C;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x5FAA;&#x73AF;&#x51E0;&#x6B21;&#x5C31;&#x753B;&#x51E0;&#x4E2A;item&#x3002;</p><p>&#x6B64;&#x65F6;&#x518D;&#x628A;&#x76EE;&#x5149;&#x653E;&#x5230;if&#x90A3;&#x91CC;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x975E;&#x9884;&#x5E03;&#x5C40;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF08;&#x5373;&#x5220;&#x6389;&#x540E;&#x7684;&#x5E03;&#x5C40;postLayout&#xFF09;&#xFF0C;&#x4E0D;&#x7BA1;&#x5176;&#x4ED6;&#x6761;&#x4EF6;&#x662F;&#x5426;&#x6EE1;&#x8DB3;&#xFF0C;remainingSpace&#x4F1A;&#x4E00;&#x76F4;&#x51CF;&#x6389;&#x4F7F;&#x7528;&#x7684;&#x7A7A;&#x95F4;&#x3002;&#x4EE5;&#x4E4B;&#x524D;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x5220;&#x6389;2&#x540E;&#x53EA;&#x9700;&#x8981;&#x753B;{1,3}&#xFF0C;&#x6240;&#x4EE5;&#x5FAA;&#x73AF;&#x4E86;&#x4E24;&#x6B21;&#x540E;remainingSpace&#x5C31;&#x4F1A;&#x5C0F;&#x4E8E;0<br>&#x5F53;&#x5728;&#x9884;&#x5E03;&#x5C40;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x5462;&#xFF0C;&#x90A3;&#x4E48;&#x8981;&#x8FDB;&#x5165;if&#x6761;&#x4EF6;&#x5C31;&#x5FC5;&#x987B;&#x6EE1;&#x8DB3;layoutChunkResult.mIgnoreConsumed&#x4E3A;false&#x6216;&#x8005;layoutState.mScrapList != null<br>&#x5148;&#x770B;layoutState.mScrapList&#xFF0C;&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x4EE3;&#x7801;&#x9ED8;&#x8BA4;&#x521D;&#x59CB;&#x5316;&#x662F;&#x7A7A;&#x7684;&#xFF0C;&#x5728;&#x5B8C;&#x6210;fill&#x4E4B;&#x540E;&#x624D;&#x4F1A;&#x5BF9;mScrapList&#x8D4B;&#x503C;&#x4E00;&#x4E2A;list&#xFF0C;&#x7136;&#x540E;&#x518D;&#x505A;&#x4E00;&#x904D;fill&#x540E;&#x53C8;&#x6E05;&#x7A7A;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#x5728;&#x9884;&#x5E03;&#x5C40;&#x8C03;&#x7528;fill&#x65F6;&#xFF0C;mScrapList&#x4E00;&#x5B9A;&#x662F;&#x7A7A;&#x7684;<br>&#x90A3;&#x4E48;&#x5982;&#x679C;&#x8981;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x5C31;&#x53EA;&#x80FD;&#x662F;layoutChunkResult.mIgnoreConsumed&#x4E3A;false<br>&#x770B;&#x4E86;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x53D1;&#x73B0;&#x5F53;params&#x662F;isItemRemoved&#x6216;isItemChanged&#x65F6;&#xFF0C;mIgnoreConsumed&#x624D;&#x4F1A;&#x4E3A;true&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x8C03;&#x7528;notifyItemRemoved&#x65F6;&#xFF0C;&#x6700;&#x7EC8;&#x4F1A;&#x628A;layoutParam.isItemRemoved&#x8FD4;&#x56DE;true&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x5177;&#x4F53;&#x5206;&#x6790;&#x3002;&#x56E0;&#x6B64;&#x5728;&#x7ED8;&#x5236;item2&#x65F6;&#xFF0C;&#x7531;&#x4E8E;&#x88AB;&#x6807;&#x8BB0;&#x4E86;removed&#xFF0C;&#x6240;&#x4EE5;mIgnoreConsumed&#x4E3A;true&#xFF0C;remainingSpace&#x5C31;&#x4E0D;&#x4F1A;&#x51CF;&#x5C11;&#xFF0C;&#x56E0;&#x6B64;&#x5C31;&#x53EF;&#x4EE5;&#x591A;&#x753B;&#x4E00;&#x4E2A;item3&#x3002;</p><p><b>&#x603B;&#x7ED3;&#xFF1A;&#x5728;preLayout&#x65F6;&#xFF0C;&#x7531;&#x4E8E;&#x88AB;&#x5220;&#x9664;&#x9879;&#x6240;&#x5360;&#x7684;&#x4F4D;&#x7F6E;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x591A;&#x753B;&#x51E0;&#x4E2A;item</b></p><p>&#x524D;&#x9762;&#x5206;&#x6790;&#xFF0C;&#x5728;postLayout&#x65F6;&#x53EA;&#x4F1A;&#x753B;&#x4E24;&#x4E2A;item&#xFF0C;&#x90A3;&#x4E48;&#x662F;&#x600E;&#x4E48;&#x4FDD;&#x8BC1;&#x753B;&#x7684;&#x5C31;&#x662F;{1,3}&#x800C;&#x4E0D;&#x662F;{1,2}&#x5462;&#xFF1F;<br>&#x5728;&#x8C03;&#x7528;notifyItemRemoved&#xFF0C;&#x4F1A;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;FLAG_REMOVED&#x3002;RecyclerView&#x7684;&#x7F13;&#x5B58;&#x673A;&#x5236;&#x4F1A;&#x628A;&#x5F53;&#x524D;&#x5C4F;&#x5E55;&#x7684;item&#x90FD;&#x4FDD;&#x5B58;&#x5230;mAttachedScrap&#x91CC;&#x9762;&#xFF0C;&#x7136;&#x540E;&#x6700;&#x7EC8;&#x5728;layoutChunk&#x7684;&#x62FF;holder&#x65F6;&#x8C03;&#x7528;getScrapOrHiddenOrCachedHolderForPosition<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ViewHolder <span class="title">getScrapOrHiddenOrCachedHolderForPosition</span><span class="params">(<span class="keyword">int</span> position, <span class="keyword">boolean</span> dryRun)</span> </span>{</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> scrapCount = mAttachedScrap.size();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Try first for an exact, non-invalid match from scrap.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; scrapCount; i++) {</span><br><span class="line">        <span class="keyword">final</span> ViewHolder holder = mAttachedScrap.get(i);</span><br><span class="line">        <span class="comment">// if&#x6761;&#x4EF6;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x662F;holder.isRemoved&#x5FC5;&#x987B;&#x4E3A;false</span></span><br><span class="line">        <span class="keyword">if</span> (!holder.wasReturnedFromScrap() &amp;&amp; holder.getLayoutPosition() == position</span><br><span class="line">                &amp;&amp; !holder.isInvalid() &amp;&amp; (mState.mInPreLayout || !holder.isRemoved())) {</span><br><span class="line">            holder.addFlags(ViewHolder.FLAG_RETURNED_FROM_SCRAP);</span><br><span class="line">            <span class="keyword">return</span> holder;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x56E0;&#x6B64;&#x88AB;&#x6807;&#x8BB0;&#x4E3A;removed&#x7684;item2&#x5C31;&#x4E0D;&#x4F1A;&#x88AB;&#x62FF;&#x51FA;&#x6765;&#x4E86;</p><p>&#x901A;&#x8FC7;&#x6211;&#x4EEC;&#x524D;&#x9762;&#x770B;&#x5230;&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x5728;dispatchLayoutStep2&#x65F6;&#x4E5F;&#x4F1A;&#x518D;&#x6B21;&#x8C03;&#x7528;mLayout.onLayoutChildren<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dispatchLayoutStep2</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="comment">// Step 2: Run layout</span></span><br><span class="line">        mState.mInPreLayout = <span class="keyword">false</span>;</span><br><span class="line">        mLayout.onLayoutChildren(mRecycler, mState);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x6240;&#x4EE5;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x5E03;&#x5C40;&#x4E86;&#x4E24;&#x6B21;&#xFF0C;step1&#x662F;&#x65E7;&#x5E03;&#x5C40;&#xFF0C;step2&#x662F;&#x771F;&#x6B63;&#x7684;&#x65B0;&#x5E03;&#x5C40;</p><p>2.&#x6570;&#x636E;&#x66F4;&#x65B0;&#xFF1A;<br>&#x5728;&#x66F4;&#x65B0;RecyclerView&#x7684;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x4F1A;&#x4F7F;&#x7528;notifyDataSetChanged &#x6216; notifyItemChanged(position)&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x5462;&#xFF1F;<br>notifyDataSetChanged-&gt;mObservable.notifyChanged()-&gt;onChanged-&gt;processDataSetCompletelyChanged-&gt;markKnownViewsInvalid<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(holder !=<span class="keyword">null</span>&amp;&amp;!holder.shouldIgnore()){</span><br><span class="line">    <span class="comment">// &#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5728;&#x8FD9;&#x91CC;&#x4F1A;&#x7ED9;holder&#x6253;&#x4E0A;&#x8FD9;&#x6837;&#x7684;&#x6807;&#x7B7E;</span></span><br><span class="line">    holder.addFlags(ViewHolder.FLAG_UPDATE | ViewHolder.FLAG_INVALID);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x6700;&#x7EC8;&#x8C03;&#x7528;requestLayout<br></p><blockquote><p>&#x8865;&#x5145;&#x77E5;&#x8BC6;&#xFF1A;requestLayout&#x4F1A;&#x5F15;&#x53D1;view&#x7684;&#x91CD;&#x7ED8;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;View&#x7684;onMeasure&#x548C;onLayout&#xFF0C;&#x4ECE;&#x524D;&#x9762;&#x4E5F;&#x5F97;&#x5230;&#x6700;&#x540E;&#x5176;&#x5B9E;&#x8FD8;&#x662F;&#x8D70;&#x4E86;onLayoutChildren&#x8FD9;&#x4E9B;</p></blockquote><br>&#x518D;&#x6B21;&#x770B;&#x4E00;&#x4E0B; recycleViewHolderInternal<br><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recycleViewHolderInternal</span><span class="params">(ViewHolder holder)</span> </span>{</span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    <span class="keyword">if</span> (mViewCacheMax &gt; <span class="number">0</span></span><br><span class="line">            &amp;&amp; !holder.hasAnyOfTheFlags(ViewHolder.FLAG_INVALID</span><br><span class="line">            | ViewHolder.FLAG_REMOVED</span><br><span class="line">            | ViewHolder.FLAG_UPDATE</span><br><span class="line">            | ViewHolder.FLAG_ADAPTER_POSITION_UNKNOWN)) {</span><br><span class="line">        &#x2026;&#x2026;</span><br><span class="line">        mCachedViews.add(targetCacheIndex, holder);</span><br><span class="line">        cached = <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (!cached) {</span><br><span class="line">        addViewHolderToRecycledViewPool(holder, <span class="keyword">true</span>);</span><br><span class="line">        recycled = <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x4E2D;&#x95F4;&#x7701;&#x7565;&#x4E86;&#x4E00;&#x4E9B;&#x7EC6;&#x8282;&#xFF0C;&#x53EF;&#x4EE5;&#x5927;&#x6982;&#x770B;&#x51FA;&#x5982;&#x679C;holder&#x5728;&#x6CA1;&#x6709;&#x90A3;&#x51E0;&#x4E2A;&#x7279;&#x5B9A;&#x7684;flag&#xFF08;&#x5305;&#x62EC;FLAG_UPDATE&#x548C;FLAG_INVALID&#xFF09;&#x65F6;&#xFF0C;holder&#x662F;&#x4F1A;&#x5B58;&#x5230;mCachedViews&#x91CC;&#x9762;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x90A3;&#x4E9B;flag&#x5219;&#x4F1A;&#x76F4;&#x63A5;&#x8FDB;&#x5165;&#x5230;RecycledViewPool&#x91CC;&#x9762;&#x3002;&#x4F46;&#x662F;&#xFF01;<b>RecycledViewPool&#x662F;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x5BB9;&#x91CF;&#x9650;&#x5236;&#xFF0C;&#x5982;&#x679C;&#x6570;&#x91CF;&#x8FC7;&#x5927;&#x5219;&#x4F1A;&#x91CD;&#x65B0;&#x521B;&#x5EFA;ViewHolder</b>&#x3002;</p><p>&#x90A3;&#x4E48;notifyItemChanged&#x5462;&#xFF1F;<br>notifyItemChanged-&gt;mObservable.notifyItemRangeChanged-&gt;notifyItemRangeChanged<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemRangeChanged</span><span class="params">(<span class="keyword">int</span> positionStart, <span class="keyword">int</span> itemCount, Object payload)</span> </span>{</span><br><span class="line">    assertNotInLayoutOrScroll(<span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">//&#x53EA;&#x6709;&#x4E3A;ture&#x65F6;&#x624D;&#x80FD;&#x89E6;&#x53D1;</span></span><br><span class="line">    <span class="keyword">if</span> (mAdapterHelper.onItemRangeChanged(positionStart, itemCount, payload)) {</span><br><span class="line">        triggerUpdateProcessor();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//AdapterHelper.java</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">onItemRangeChanged</span><span class="params">(<span class="keyword">int</span> positionStart, <span class="keyword">int</span> itemCount, Object payload)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (itemCount &lt; <span class="number">1</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">    mPendingUpdates.add(obtainUpdateOp(UpdateOp.UPDATE, positionStart, itemCount, payload));</span><br><span class="line">    mExistingUpdateTypes |= UpdateOp.UPDATE;</span><br><span class="line">    <span class="comment">//&#x56E0;&#x6B64;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x53EA;&#x6709;&#x7B2C;&#x4E00;&#x6B21;&#x8C03;&#x7528;notifyItemxx&#x624D;&#x4F1A;&#x8FD4;&#x56DE;ture</span></span><br><span class="line">    <span class="keyword">return</span> mPendingUpdates.size() == <span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p><b>&#x8BF7;&#x6CE8;&#x610F;&#xFF0C;onItemRangeChanged&#x6709;&#x4E2A;&#x53C2;&#x6570;&#x53EB;payload&#x3002;</b><br>onItemRangeChanged&#x9664;&#x4E86;&#x901A;&#x8FC7;&#x8FD4;&#x56DE;ture/false&#x6765;&#x63A7;&#x5236;&#x4F1A;&#x4E0D;&#x4F1A;&#x8D70;&#x4E0B;&#x4E00;&#x6B65;&#x5916;&#xFF0C;&#x8FD8;&#x4FDD;&#x5B58;&#x4E86;&#x4E00;&#x4E9B;&#x53C2;&#x6570;&#x5982; UpdateOp.UPDATE &#x548C; payload&#x3002;<br>&#x8FD4;&#x56DE;ture&#x540E;-&gt;triggerUpdateProcessor-&gt;requestLayout();</p><p>&#x540C;&#x6837;&#x7684;&#xFF0C;&#x8C03;&#x7528;&#x4E86;requestLayout&#x540E;&#x4F1A;&#x91CD;&#x65B0;&#x7ED8;&#x5236;&#xFF0C;&#x5373;&#x53C8;&#x4F1A;&#x518D;&#x6B21;&#x8D70;&#x5230;onLayoutChildren&#x8FD9;&#x4E9B;&#x3002;&#x4F46;&#x5728;&#x6B64;&#x4E4B;&#x524D;&#x8981;&#x5148;&#x8865;&#x5145;&#x770B;&#x4E0B;<br>&#x8DDF;&#x524D;&#x9762;&#x4E00;&#x6837;&#x4E5F;&#x5148;&#x4ECE;onMeasure&#x5165;&#x624B;-&gt;dispatchLayoutStep1-&gt;processAdapterUpdatesAndSetAnimationFlags<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (predictiveItemAnimationsEnabled()) {</span><br><span class="line">    mAdapterHelper.preProcess();</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">    mAdapterHelper.consumeUpdatesInOnePass();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD9;&#x91CC;&#x4F1A;&#x5148;&#x5224;&#x65AD;&#x662F;&#x5426;&#x652F;&#x6301;<a href="http://frogermcs.github.io/recyclerview-animations-androiddevsummit-write-up/" target="_blank" rel="noopener">&#x9884;&#x6D4B;&#x9879;&#x76EE;&#x52A8;&#x753B;</a>&#xFF0C;3.0&#x4EE5;&#x4E0A;&#x9ED8;&#x8BA4;&#x5F00;&#x542F;&#x201C;&#x9884;&#x6D4B;&#x9879;&#x76EE;&#x52A8;&#x753B;&#x201D;&#x3002;<br>&#x2460;&#x5982;&#x679C;&#x5F00;&#x542F;&#x652F;&#x6301;&#x7684;&#x8BDD;&#x4F1A;&#x8FD9;&#x6837;&#x8D70;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preProcess</span><span class="params">()</span> </span>{</span><br><span class="line">    mOpReorderer.reorderOps(mPendingUpdates);</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> count = mPendingUpdates.size();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) {</span><br><span class="line">        UpdateOp op = mPendingUpdates.get(i);</span><br><span class="line">        <span class="keyword">switch</span> (op.cmd) {</span><br><span class="line">            <span class="comment">//&#x8FD9;&#x91CC;&#x7684;UPDATE&#x5C31;&#x662F;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684;&#x53C2;&#x6570;</span></span><br><span class="line">            <span class="keyword">case</span> UpdateOp.UPDATE:</span><br><span class="line">                applyUpdate(op);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    mPendingUpdates.clear();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>applyUpdate-&gt;postponeAndUpdateViewHolders(op)-&gt;markViewHoldersUpdated-&gt;viewRangeUpdate<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (holder.mPosition &gt;= positionStart &amp;&amp; holder.mPosition &lt; positionEnd) {</span><br><span class="line">    <span class="comment">// We re-bind these view holders after pre-processing is complete so that</span></span><br><span class="line">    <span class="comment">// ViewHolders have their final positions assigned.</span></span><br><span class="line">    <span class="comment">// &#x8BF7;&#x8BB0;&#x4F4F;&#xFF0C;&#x6B64;&#x65F6;&#x7ED9;holder&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;FLAG_UPDATE&#x7684;flag</span></span><br><span class="line">    holder.addFlags(ViewHolder.FLAG_UPDATE);</span><br><span class="line">    <span class="comment">// &#x5E76;&#x4E14;&#x4F20;&#x5165;&#x4E86;&#x4E00;&#x4E2A;payload</span></span><br><span class="line">    holder.addChangePayload(payload);</span><br><span class="line">    <span class="comment">// lp cannot be null since we get ViewHolder from it.</span></span><br><span class="line">    ((LayoutParams) child.getLayoutParams()).mInsetsDirty = <span class="keyword">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x4E0E;payload&#x6709;&#x5173;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addChangePayload</span><span class="params">(Object payload)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (payload == <span class="keyword">null</span>) {</span><br><span class="line">        addFlags(FLAG_ADAPTER_FULLUPDATE);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> ((mFlags &amp; FLAG_ADAPTER_FULLUPDATE) == <span class="number">0</span>) {</span><br><span class="line">        createPayloadsIfNeeded();</span><br><span class="line">        mPayloads.add(payload);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createPayloadsIfNeeded</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (mPayloads == <span class="keyword">null</span>) {</span><br><span class="line">        mPayloads = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">        <span class="comment">// &#x8BB0;&#x4F4F;mUnmodifiedPayloads&#xFF0C;&#x540E;&#x9762;&#x8981;&#x8003;&#x5230;</span></span><br><span class="line">        mUnmodifiedPayloads = Collections.unmodifiableList(mPayloads);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x2461;&#x4E0D;&#x652F;&#x6301;&#x5F00;&#x542F;&#x201C;&#x9884;&#x6D4B;&#x9879;&#x76EE;&#x52A8;&#x753B;&#x201D;&#xFF0C;&#x5219;&#x662F;&#x8FD9;&#x6837;&#x8D70;&#xFF1A;<br>mAdapterHelper.consumeUpdatesInOnePass&#xFF0C;&#x91CC;&#x9762;&#x4E5F;&#x4F1A;&#x6839;&#x636E;mPendingUpdates&#x4E4B;&#x524D;&#x8D4B;&#x503C;&#x7684;UpdateOp.UPDATE&#xFF0C;&#x6700;&#x540E;&#x8D70;mCallback.markViewHoldersUpdated&#xFF0C;&#x8FD9;&#x4E2A;&#x521A;&#x521A;&#x4E5F;&#x5206;&#x6790;&#x8FC7;&#x4E86;&#xFF0C;&#x5C31;&#x662F;&#x628A;holder&#x6DFB;&#x52A0;FLAG_UPDATE&#x548C;payload&#x3002;</p><p>&#x6240;&#x4EE5;&#x4E0D;&#x7BA1;&#x600E;&#x4E48;&#x6837;&#xFF0C;<b>&#x6700;&#x540E;&#x90FD;&#x662F;&#x7ED9;holder&#x589E;&#x52A0;FLAG_UPDATE&#x548C;payload</b></p><p>&#x7ED3;&#x5408;&#x6211;&#x4EEC;&#x4E0A;&#x8FF0;&#x8BF4;&#x7684;layoutChildren&#x4E00;&#x6B65;&#x6B65;&#x8D70;&#xFF0C;&#x6700;&#x540E;&#x5728;scrapView&#x90A3;&#x91CC;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scrapView</span><span class="params">(View view)</span> </span>{</span><br><span class="line">    <span class="keyword">final</span> ViewHolder holder = getChildViewHolderInt(view);</span><br><span class="line">    <span class="keyword">if</span> (holder.hasAnyOfTheFlags(ViewHolder.FLAG_REMOVED | ViewHolder.FLAG_INVALID)</span><br><span class="line">            || !holder.isUpdated() || canReuseUpdatedViewHolder(holder)) {</span><br><span class="line">        mAttachedScrap.add(holder);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">if</span> (mChangedScrap == <span class="keyword">null</span>) {</span><br><span class="line">            mChangedScrap = <span class="keyword">new</span> ArrayList&lt;ViewHolder&gt;();</span><br><span class="line">        }</span><br><span class="line">        holder.setScrapContainer(<span class="keyword">this</span>, <span class="keyword">true</span>);</span><br><span class="line">     </span><br><span class="line">        mChangedScrap.add(holder);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isUpdated</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="comment">//&#x6B64;&#x65F6;&#x7684;mFlags&#x5DF2;&#x7ECF;&#x662F;FLAG_UPDATE&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x8FD4;&#x56DE;ture</span></span><br><span class="line">    <span class="keyword">return</span> (mFlags &amp; FLAG_UPDATE) != <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">// &#x6700;&#x7EC8;&#x8FFD;&#x6EAF;&#x5230; DefaultItemAnimator.java</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canReuseUpdatedViewHolder</span><span class="params">(@NonNull RecyclerView.ViewHolder viewHolder,</span></span></span><br><span class="line"><span class="function"><span class="params">                                         @NonNull List&lt;Object&gt; payloads)</span> </span>{</span><br><span class="line">    <span class="comment">// &#x8FD9;&#x91CC;&#x7684;payload&#x5C31;&#x662F;&#x4E4B;&#x524D;onItemRangeChanged&#x90A3;&#x91CC;&#x4F20;&#x6765;&#x7684;</span></span><br><span class="line">    <span class="keyword">return</span> !payloads.isEmpty() || <span class="keyword">super</span>.canReuseUpdatedViewHolder(viewHolder, payloads);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>scrapView&#x91CC;&#x9762;&#x7684;&#x6761;&#x4EF6;&#x5224;&#x65AD;&#xFF0C;&#x9996;&#x5148;&#x8C03;&#x7528;&#x4E86;notifyItemChanged&#x7684;item&#x4E00;&#x5B9A;&#x4F1A;&#x88AB;&#x6807;&#x8BB0;update&#xFF0C;&#x6240;&#x4EE5;holder.isUpdated&#x8FD4;&#x56DE;&#x4E86;true&#xFF0C;&#x90A3;&#x4E48;&#x51B3;&#x5B9A;&#x662F;&#x628A;holder&#x4F20;&#x5230;mAttachedScrap&#x8FD8;&#x662F;mChangedScrap&#x5C31;&#x5F97;&#x770B;canReuseUpdatedViewHolder&#x662F;&#x5426;&#x8FD4;&#x56DE;true&#x3002;&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x53D1;&#x73B0;&#x4E86;&#x662F;&#x8DDF;payload&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#x6709;&#x5173;&#x3002;<br><b>&#x5373;&#x5982;&#x679C;&#x6709;payload&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x628A;holder&#x4FDD;&#x5B58;&#x5230;mAttachedScrap&#x91CC;&#x9762;&#xFF1B;&#x6CA1;&#x6709;payload&#xFF0C;&#x5C31;&#x4F1A;&#x4FDD;&#x5B58;&#x5230;mChangedScrap&#x91CC;&#x9762;&#x3002;</b></p><p>&#x56DE;&#x5230;layoutChildren&#xFF0C;&#x63A5;&#x7740;&#x5C31;&#x662F;fill&#x8FD9;&#x4E9B;&#xFF0C;&#x6700;&#x7EC8;&#x6765;&#x5230;tryGetViewHolderForPositionByDeadline<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="function">ViewHolder <span class="title">tryGetViewHolderForPositionByDeadline</span><span class="params">(<span class="keyword">int</span> position,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                 <span class="keyword">boolean</span> dryRun, <span class="keyword">long</span> deadlineNs)</span> </span>{</span><br><span class="line">    <span class="comment">// 0) If there is a changed scrap, try to find from there</span></span><br><span class="line">    <span class="comment">// &#x5982;&#x679C;&#x662F;&#x5728;&#x9884;&#x5E03;&#x5C40;</span></span><br><span class="line">    <span class="comment">// &#x5C31;&#x4F1A;&#x4ECE;mChangedScrap&#x91CC;&#x9762;&#x62FF;</span></span><br><span class="line">    <span class="keyword">if</span> (mState.isPreLayout()) {</span><br><span class="line">        holder = getChangedScrapViewForPosition(position);</span><br><span class="line">        fromScrapOrHiddenOrCache = holder != <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// 1) Find by position from scrap/hidden list/cache</span></span><br><span class="line">    <span class="comment">// &#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x5C31;&#x4ECE;mAttachedViews&#x548C;mCachedViews&#x4E2D;&#x627E;</span></span><br><span class="line">    <span class="keyword">if</span> (holder == <span class="keyword">null</span>) {</span><br><span class="line">        holder = getScrapOrHiddenOrCachedHolderForPosition(position, dryRun);</span><br><span class="line"> &#x2026;&#x2026;</span><br><span class="line">    }</span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    <span class="keyword">if</span> (holder == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="comment">//&#x5982;&#x679C;&#x6240;&#x6709;&#x7F13;&#x5B58;&#x4E2D;&#x90FD;&#x627E;&#x4E0D;&#x5230;</span></span><br><span class="line">        holder = mAdapter.createViewHolder(RecyclerView.<span class="keyword">this</span>, type);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (mState.isPreLayout() &amp;&amp; holder.isBound()) {</span><br><span class="line">        <span class="comment">// &#x9884;&#x5E03;&#x5C40;&#x72B6;&#x6001;&#x4E0D;&#x7528;&#x66F4;&#x65B0;&#x4EC0;&#x4E48;</span></span><br><span class="line">        holder.mPreLayoutPosition = position;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (!holder.isBound() || holder.needsUpdate() || holder.isInvalid()) {</span><br><span class="line">        <span class="comment">// &#x5982;&#x679C;holder&#x662F;&#x9700;&#x8981;&#x66F4;&#x65B0;&#x6216;&#x8005;&#x65E0;&#x6548;&#x7B49;&#x7B49;</span></span><br><span class="line">        <span class="comment">// &#x9700;&#x8981;&#x91CD;&#x65B0;&#x7ED1;&#x5B9A;</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> offsetPosition = mAdapterHelper.findPositionOffset(position);</span><br><span class="line">        bound = tryBindViewHolderByDeadline(holder, offsetPosition, position, deadlineNs);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">tryBindViewHolderByDeadline</span><span class="params">(@NonNull RecyclerView.ViewHolder holder, <span class="keyword">int</span> offsetPosition,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">int</span> position, <span class="keyword">long</span> deadlineNs)</span> </span>{</span><br><span class="line">    holder.mOwnerRecyclerView = RecyclerView.<span class="keyword">this</span>;</span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    mAdapter.bindViewHolder(holder, offsetPosition);</span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">bindViewHolder</span><span class="params">(@NonNull VH holder, <span class="keyword">int</span> position)</span> </span>{</span><br><span class="line">    &#x2026;&#x2026;</span><br><span class="line">    onBindViewHolder(holder, position, holder.getUnmodifiedPayloads());</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x8FD9;&#x91CC;&#x5C31;&#x4F1A;&#x7528;&#x5230;&#x524D;&#x9762;&#x8BB2;&#x7684;mUnmodifiedPayloads</span></span><br><span class="line"><span class="comment">// &#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x5B9E;&#x9645;&#x4F20;&#x7684;payload&#x6216;&#x8005;&#x662F;&#x7A7A;&#x7684;</span></span><br><span class="line"><span class="function">List&lt;Object&gt; <span class="title">getUnmodifiedPayloads</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> ((mFlags &amp; FLAG_ADAPTER_FULLUPDATE) == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">if</span> (mPayloads == <span class="keyword">null</span> || mPayloads.size() == <span class="number">0</span>) {</span><br><span class="line">            <span class="comment">// Initial state,  no update being called.</span></span><br><span class="line">            <span class="keyword">return</span> FULLUPDATE_PAYLOADS;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// there are none-null payloads</span></span><br><span class="line">        <span class="keyword">return</span> mUnmodifiedPayloads;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// a full update has been called.</span></span><br><span class="line">        <span class="keyword">return</span> FULLUPDATE_PAYLOADS;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5F53;dispatchLayoutStep1&#x65F6;&#xFF0C;&#x5F00;&#x59CB;preLayout&#xFF0C;&#x5047;&#x8BBE;&#x6CA1;&#x6709;payload&#x53C2;&#x6570;&#xFF0C;&#x90A3;&#x4E48;holder&#x5C31;&#x662F;&#x4ECE;mChangedScrap&#x91CC;&#x9762;&#x62FF;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x4F1A;&#x505A;&#x66F4;&#x65B0;&#x7ED1;&#x5B9A;<br>&#x5F53;dispatchLayoutStep2&#x65F6;&#xFF0C;&#x5F00;&#x59CB;postLayout<br>&#x2460;&#x5982;&#x679C;&#x6CA1;&#x6709;payload&#x53C2;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x4E4B;&#x524D;&#x7684;&#x7F13;&#x5B58;holder&#x7531;&#x4E8E;&#x662F;&#x4FDD;&#x5B58;&#x5728;mChangedScrap&#x91CC;&#x9762;&#xFF0C;&#x73B0;&#x5728;&#x4E0D;&#x662F;preLayout&#x9636;&#x6BB5;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x80FD;&#x4ECE;recycledViewPool&#x4E2D;&#x62FF;(&#x8BE6;&#x60C5;&#x770B;&#x524D;&#x9762;recycleViewHolderInternal&#x90A3;&#x90E8;&#x5206;&#x7684;&#x5206;&#x6790;&#xFF09;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x627E;&#x5230;&#xFF0C;&#x5C31;&#x53EA;&#x80FD;&#x901A;&#x8FC7;createHolder&#xFF0C;&#x7136;&#x540E;&#x518D;&#x91CD;&#x65B0;&#x7ED1;&#x5B9A;adapter&#x3002;<br>&#x2461;&#x5982;&#x679C;&#x6709;payload&#x53C2;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x4E4B;&#x524D;&#x7684;&#x7F13;&#x5B58;holder&#x5C31;&#x662F;&#x4FDD;&#x5B58;&#x5728;mAttachScrap&#x91CC;&#x9762;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4ECE;&#x90A3;&#x4E2A;&#x5217;&#x8868;&#x62FF;&#x51FA;&#x6765;&#x4E86;&#x3002;<b>&#x6CE8;&#x610F;&#xFF01;&#x6B64;&#x65F6;holder.needsUpdate&#x662F;true&#xFF0C;</b>&#x6240;&#x4EE5;&#x4F1A;&#x91CD;&#x65B0;&#x7ED1;&#x5B9A;adapter&#x3002;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x6CA1;&#x6709;notify&#x65F6;&#xFF0C;&#x4FDD;&#x5B58;&#x5230;mAttachScrap&#x91CC;&#x9762;&#x7684;holder&#x662F;&#x4E0D;&#x7528;&#x91CD;&#x65B0;&#x7ED1;&#x5B9A;adapter&#x7684;&#x3002;&#x5982;&#x679C;&#x8C03;&#x7528;&#x4E86;notify&#x5C31;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x7ED1;&#x5B9A;adapter&#x4E86;&#x3002;</p><p>&#x518D;&#x4E00;&#x6B21;&#x770B;payload&#xFF0C;&#x5B83;&#x662F;&#x4ECE;onItemRangeChanged&#x6765;&#xFF0C;&#x800C;&#x8FD9;&#x53C8;&#x662F;&#x4ECE;notifyItemChanged&#x6765;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">notifyItemChanged</span><span class="params">(<span class="keyword">int</span> position, @Nullable Object payload)</span> </span>{</span><br><span class="line">    mObservable.notifyItemRangeChanged(position, <span class="number">1</span>, payload);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">notifyItemChanged</span><span class="params">(<span class="keyword">int</span> position)</span> </span>{</span><br><span class="line">    mObservable.notifyItemRangeChanged(position, <span class="number">1</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x6B64;&#x5916;&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;adapter&#x7684;onBindViewHolder&#x4E5F;&#x6709;&#x4E24;&#x4E2A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#x5F53;&#x4F7F;&#x7528;&#x65E0;payload&#x7684;notify&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x53EA;&#x590D;&#x5199;&#x8FD9;&#x4E2A;</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(@NonNull RecyclerView.ViewHolder holder, <span class="keyword">int</span> position)</span> </span>{</span><br><span class="line">    <span class="comment">//&#x5B8C;&#x5168;&#x5237;&#x65B0;&#xFF0C;&#x6BD4;&#x5982;&#x8FD9;&#x4E2A;item&#x8981;&#x6362;&#x56FE;&#x7247;&#x6362;&#x6807;&#x9898;&#x6587;&#x5B57;&#x7B49;&#x7B49;</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">// &#x5982;&#x679C;&#x4F7F;&#x7528;&#x4E86;&#x5E26;payload&#x7684;notify&#xFF0C;&#x90A3;&#x5C31;&#x5FC5;&#x987B;&#x590D;&#x5199;&#x8FD9;&#x4E2A;</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(@NonNull RecyclerView.ViewHolder holder, <span class="keyword">int</span> position, @NonNull List payloads)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span>(payloads!=<span class="keyword">null</span>){</span><br><span class="line">        <span class="comment">// todo &#x5B9E;&#x73B0;&#x5C40;&#x90E8;&#x5237;&#x65B0;&#xFF0C;&#x6BD4;&#x5982;&#x53EA;&#x66F4;&#x65B0;&#x6587;&#x5B57;</span></span><br><span class="line">    }<span class="keyword">else</span> {</span><br><span class="line">        onBindViewHolder(holder,position);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x603B;&#x7ED3;&#xFF1A;<br><b>1.notifyDataSetChanged&#x6700;&#x7EC8;&#x4F1A;&#x91CD;&#x65B0;&#x521B;&#x5EFA;viewHolder&#xFF0C;&#x800C;notifyItemChange&#x662F;&#x4ECE;mChangedScrape&#x91CC;&#x9762;&#x62FF;viewHolder&#x3002;<br>2.&#x5373;&#x4F7F;&#x4F60;&#x8C03;&#x7528; notifyItemChanged &#x591A;&#x6B21;&#xFF0C;&#x5176;&#x5B9E;&#x53EA;&#x6709;&#x7B2C;&#x4E00;&#x6B21;&#x4F1A;&#x89E6;&#x53D1; requestLayout() &#x3002;<br>3.&#x5982;&#x679C;&#x60F3;&#x5B9E;&#x73B0;&#x5C40;&#x90E8;&#x5237;&#x65B0;&#xFF0C;&#x90A3;&#x4E48;&#x9700;&#x8981;&#x8C03;&#x7528;&#x5E26;&#x6709;payload&#x7684;notifyItemChanged(position,payload)</b></p><p>&#x56DB;&#x3001;&#x7B80;&#x5355;&#x4E86;&#x89E3;ListView&#x7684;&#x7F13;&#x5B58;&#x673A;&#x5236;<br>ListView&#x7684;&#x7F13;&#x5B58;&#x53EA;&#x6709;&#x4E24;&#x5C42;&#xFF1A;mActiveViews&#x548C;mScrapViews&#x3002;<br>mActiveViews&#xFF1A;&#x5FEB;&#x901F;&#x91CD;&#x7528;&#x5C4F;&#x5E55;&#x4E0A;&#x53EF;&#x89C1;&#x7684;&#x5217;&#x8868;&#x9879;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x91CD;&#x65B0;createView&#x548C;bindView&#xFF1B;<br>mScrapViews&#xFF1A;&#x7F13;&#x5B58;&#x79BB;&#x5F00;&#x5C4F;&#x5E55;&#x7684;ItemView&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x8BA9;&#x5373;&#x5C06;&#x8FDB;&#x5165;&#x5C4F;&#x5E55;&#x7684;ItemView&#x91CD;&#x7528;.<br>&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2.png" alt="ListView&#x7F13;&#x5B58;&#x673A;&#x5236;" title="">                </div>                <div class="image-caption">ListView&#x7F13;&#x5B58;&#x673A;&#x5236;</div>            </figure><p></p><p>&#x53C2;&#x8003;&#x81EA;&#xFF1A;<br><a href="https://zhuanlan.zhihu.com/p/80475040" target="_blank" rel="noopener">&#x771F;&#x6B63;&#x5E26;&#x4F60;&#x641E;&#x61C2; RecyclerView &#x7684;&#x7F13;&#x5B58;&#x673A;&#x5236;&#xFF0C;&#x518D;&#x4E5F;&#x4E0D;&#x6015;&#x9762;&#x8BD5;&#x88AB;&#x8650;&#x4E86;</a><br><a href="https://blog.csdn.net/ZHXLXH/article/details/88344955" target="_blank" rel="noopener">RecyclerView&#x5C40;&#x90E8;&#x5237;&#x65B0;&#x548C;&#x539F;&#x7406;&#x4ECB;&#x7ECD;</a><br><a href="https://blog.csdn.net/augfun/article/details/110412805" target="_blank" rel="noopener">&#x6362;&#x4E2A;&#x59FF;&#x52BF;&#x770B;&#x6E90;&#x7801; | RecyclerView&#x9884;&#x5E03;&#x5C40;&#xFF08;pre-layout&#xFF09;</a><br><a href="https://segmentfault.com/a/1190000040421118" target="_blank" rel="noopener">&#x6DF1;&#x5165;&#x7406;&#x89E3;Android RecyclerView&#x7684;&#x7F13;&#x5B58;&#x673A;&#x5236;</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RecyclerView缓存机制和刷新原理&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://secretlin.github.io/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>经典算法之鸡蛋掉落</title>
    <link href="https://secretlin.github.io/blog//posts/5cb9084b/"/>
    <id>https://secretlin.github.io/blog//posts/5cb9084b/</id>
    <published>2019-06-26T12:15:50.605Z</published>
    <updated>2022-02-19T16:20:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x4E4B;&#x9E21;&#x86CB;&#x6389;&#x843D;<br><a id="more"></a><br>&#x542C;&#x8BF4;&#x8FD9;&#x662F;&#x4E00;&#x9053;&#x8C37;&#x6B4C;&#x7684;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x9898;&#xFF0C;&#x867D;&#x7136;&#x73B0;&#x5728;&#x5DF2;&#x7ECF;&#x5E9F;&#x5F03;&#x4E86;&#x3002;&#x603B;&#x4E4B;&#xFF0C;&#x5F53;&#x6211;&#x7B2C;&#x4E00;&#x6B21;&#x770B;&#x5230;&#x8FD9;&#x9898;&#xFF0C;&#x6211;&#x6EE1;&#x8111;&#x5B50;&#x95EE;&#x53F7;&#x3002;&#x8FD9;&#x4EC0;&#x4E48;&#x5440;&#x6211;&#x600E;&#x4E48;&#x8FDE;&#x9898;&#x76EE;&#x90FD;&#x770B;&#x4E0D;&#x61C2;&#xFF0C;&#x7136;&#x540E;&#x770B;&#x4E86;&#x8BC4;&#x8BBA;&#xFF0C;&#x8FD8;&#x597D;&#x4E0D;&#x6B62;&#x6211;&#x4E00;&#x4E2A;&#x4EBA;&#x54C8;&#x54C8;&#x54C8;&#x54C8;&#x3002;<br>ok&#x5148;&#x9644;&#x4E0A;&#x9898;&#x76EE;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x670B;&#x53CB;&#x53EF;&#x4EE5;&#x5148;&#x505A;&#x505A;&#x770B;&#xFF1A;&#x6765;&#x6E90;&#xFF1A;&#x529B;&#x6263;&#xFF08;LeetCode&#xFF09;&#x94FE;&#x63A5;&#xFF1A;<a href="https://leetcode-cn.com/problems/super-egg-drop" target="_blank" rel="noopener">https://leetcode-cn.com/problems/super-egg-drop</a><br></p><blockquote><p>&#x7ED9;&#x4F60; k &#x679A;&#x76F8;&#x540C;&#x7684;&#x9E21;&#x86CB;&#xFF0C;&#x5E76;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E00;&#x680B;&#x4ECE;&#x7B2C; 1 &#x5C42;&#x5230;&#x7B2C; n &#x5C42;&#x5171;&#x6709; n &#x5C42;&#x697C;&#x7684;&#x5EFA;&#x7B51;&#x3002;<br>&#x5DF2;&#x77E5;&#x5B58;&#x5728;&#x697C;&#x5C42; f &#xFF0C;&#x6EE1;&#x8DB3; 0 &lt;= f &lt;= n &#xFF0C;&#x4EFB;&#x4F55;&#x4ECE; &#x9AD8;&#x4E8E; f &#x7684;&#x697C;&#x5C42;&#x843D;&#x4E0B;&#x7684;&#x9E21;&#x86CB;&#x90FD;&#x4F1A;&#x788E;&#xFF0C;&#x4ECE; f &#x697C;&#x5C42;&#x6216;&#x6BD4;&#x5B83;&#x4F4E;&#x7684;&#x697C;&#x5C42;&#x843D;&#x4E0B;&#x7684;&#x9E21;&#x86CB;&#x90FD;&#x4E0D;&#x4F1A;&#x7834;&#x3002;<br>&#x6BCF;&#x6B21;&#x64CD;&#x4F5C;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x53D6;&#x4E00;&#x679A;&#x6CA1;&#x6709;&#x788E;&#x7684;&#x9E21;&#x86CB;&#x5E76;&#x628A;&#x5B83;&#x4ECE;&#x4EFB;&#x4E00;&#x697C;&#x5C42; x &#x6254;&#x4E0B;&#xFF08;&#x6EE1;&#x8DB3; 1 &lt;= x &lt;= n&#xFF09;&#x3002;&#x5982;&#x679C;&#x9E21;&#x86CB;&#x788E;&#x4E86;&#xFF0C;&#x4F60;&#x5C31;&#x4E0D;&#x80FD;&#x518D;&#x6B21;&#x4F7F;&#x7528;&#x5B83;&#x3002;&#x5982;&#x679C;&#x67D0;&#x679A;&#x9E21;&#x86CB;&#x6254;&#x4E0B;&#x540E;&#x6CA1;&#x6709;&#x6454;&#x788E;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x5728;&#x4E4B;&#x540E;&#x7684;&#x64CD;&#x4F5C;&#x4E2D; &#x91CD;&#x590D;&#x4F7F;&#x7528; &#x8FD9;&#x679A;&#x9E21;&#x86CB;&#x3002;<br>&#x8BF7;&#x4F60;&#x8BA1;&#x7B97;&#x5E76;&#x8FD4;&#x56DE;&#x8981;&#x786E;&#x5B9A; f &#x786E;&#x5207;&#x7684;&#x503C; &#x7684; &#x6700;&#x5C0F;&#x64CD;&#x4F5C;&#x6B21;&#x6570; &#x662F;&#x591A;&#x5C11;&#xFF1F;</p><p>&#x793A;&#x4F8B; 1&#xFF1A;<br>&#x8F93;&#x5165;&#xFF1A;k = 1, n = 2<br>&#x8F93;&#x51FA;&#xFF1A;2<br>&#x89E3;&#x91CA;&#xFF1A;<br>&#x9E21;&#x86CB;&#x4ECE; 1 &#x697C;&#x6389;&#x843D;&#x3002;&#x5982;&#x679C;&#x5B83;&#x788E;&#x4E86;&#xFF0C;&#x80AF;&#x5B9A;&#x80FD;&#x5F97;&#x51FA; f = 0 &#x3002;<br>&#x5426;&#x5219;&#xFF0C;&#x9E21;&#x86CB;&#x4ECE; 2 &#x697C;&#x6389;&#x843D;&#x3002;&#x5982;&#x679C;&#x5B83;&#x788E;&#x4E86;&#xFF0C;&#x80AF;&#x5B9A;&#x80FD;&#x5F97;&#x51FA; f = 1 &#x3002;<br>&#x5982;&#x679C;&#x5B83;&#x6CA1;&#x788E;&#xFF0C;&#x90A3;&#x4E48;&#x80AF;&#x5B9A;&#x80FD;&#x5F97;&#x51FA; f = 2 &#x3002;<br>&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x6700;&#x574F;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x79FB;&#x52A8; 2 &#x6B21;&#x4EE5;&#x786E;&#x5B9A; f &#x662F;&#x591A;&#x5C11;&#x3002; </p></blockquote><p></p><p>&#x7136;&#x540E;&#x6211;&#x7ED3;&#x5408;&#x5B98;&#x65B9;&#x9898;&#x89E3;&#x53BB;&#x7406;&#x89E3;&#x4E86;&#x8FD9;&#x9053;&#x9898;&#xFF0C;&#x7EC8;&#x4E8E;&#x641E;&#x61C2;&#x4E86;&#x9898;&#x76EE;&#x3002;&#x4E0D;&#x8FC7;&#x5176;&#x4E2D;&#x6709;&#x79CD;&#x89E3;&#x6CD5;&#x5F88;&#x8BA9;&#x6211;&#x5728;&#x610F;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x5374;&#x6709;&#x70B9;&#x61F5;&#xFF0C;&#x5C31;&#x662F;&#x90A3;&#x79CD;&#x9006;&#x5411;&#x601D;&#x7EF4;&#x89E3;&#x6CD5;&#x3002;&#x9898;&#x76EE;&#x4E0D;&#x662F;&#x8BF4;K&#x4E2A;&#x9E21;&#x86CB;&#x5728;N&#x5C42;&#x697C;&#x9AD8;&#xFF0C;&#x6C42;&#x6700;&#x5C0F;&#x64CD;&#x4F5C;f&#x5417;&#xFF0C;&#x4F46;&#x662F;&#x9006;&#x5411;&#x601D;&#x7EF4;&#x89E3;&#x6CD5;&#x662F;&#xFF0C;&#x6211;&#x73B0;&#x5728;&#x6709;K&#x4E2A;&#x9E21;&#x86CB;&#xFF0C;&#x6709;f&#x79CD;&#x64CD;&#x4F5C;&#x65B9;&#x6CD5;&#xFF0C;&#x6700;&#x591A;&#x6211;&#x80FD;&#x63A2;&#x7D22;&#x51E0;&#x5C42;&#x697C;&#x3002;<br>Great&#xFF01;&#x63A5;&#x4E0B;&#x6765;&#x770B;&#x770B;&#x600E;&#x4E48;&#x53BB;&#x7528;&#x8FD9;&#x79CD;&#x601D;&#x60F3;&#x6765;&#x89E3;<br>&#x5148;&#x5267;&#x900F;&#x4E00;&#x6CE2;&#xFF0C;&#x9006;&#x5411;&#x601D;&#x7EF4;&#x9700;&#x8981;&#x7528;&#x5230;&#x7684;&#x516C;&#x5F0F;&#x662F;&#x8FD9;&#x4E2A;f(t,k)=1+f(t&#x2212;1,k&#x2212;1)+f(t&#x2212;1,k)<br>&#x4F46;&#x6211;&#x4E00;&#x76F4;&#x641E;&#x4E0D;&#x61C2;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x201C;+1&#x201D;&#x3002;&#x3002;<br>&#x7EC8;&#x4E8E;&#x767E;&#x5EA6;&#x5230;&#x4E00;&#x4F4D;&#x535A;&#x4E3B;&#x7684;&#x56DE;&#x7B54;&#x8BA9;&#x6211;&#x4E00;&#x4E0B;&#x5B50;&#x8C41;&#x7136;&#x5F00;&#x6717;&#xFF01;&#x611F;&#x8C22;&#xFF01;<br></p><blockquote><p>&#x4EE5;&#x4E0B;&#x601D;&#x60F3;&#x6765;&#x81EA;&#xFF1A;<a href="https://blog.csdn.net/whiteBearClimb/article/details/115701309?spm=1001.2101.3001.6650.13&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-13.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-13.pc_relevant_default&amp;utm_relevant_index=17" target="_blank" rel="noopener">https://blog.csdn.net/whiteBearClimb/article/details/115701309?spm=1001.2101.3001.6650.13&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-13.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-13.pc_relevant_default&amp;utm_relevant_index=17</a><br>&#x5176;&#x5B9E;&#x8FD9;&#x9053;&#x9898;&#x5F88;&#x660E;&#x663E;&#x5C31;&#x662F;&#x52A8;&#x5F52;&#x601D;&#x60F3;&#xFF0C;&#x800C;&#x52A8;&#x5F52;&#x601D;&#x60F3;&#x6700;&#x57FA;&#x672C;&#x7684;&#x505A;&#x6CD5;&#x5C31;&#x662F;&#x586B;&#x8868;&#x3002;&#x6240;&#x4EE5;&#x5F53;&#x535A;&#x4E3B;&#x753B;&#x4E86;&#x8868;&#x683C;&#x51FA;&#x6765;&#xFF0C;&#x771F;&#x7684;&#x5C31;&#x79D2;&#x61C2;&#x4E86;&#xFF01;</p></blockquote><p></p><p>&#x9996;&#x5148;&#xFF0C;&#x6709;K&#x679A;&#x9E21;&#x86CB;&#xFF0C;C&#x6B21;&#x64CD;&#x4F5C;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x63A2;&#x7D22;&#x7684;&#x6700;&#x5927;&#x697C;&#x5C42;&#x6570;&#x6709;&#x591A;&#x5C11;&#xFF0C;&#x8FD9;&#x91CC;&#x7528;F(K,C)&#x8868;&#x793A;</p><p>&#x5F53;&#x53EA;&#x6709;&#x4E00;&#x679A;&#x9E21;&#x86CB;&#x548C;&#x65E0;&#x6570;&#x6B21;&#x64CD;&#x4F5C;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6700;&#x5927;&#x7684;&#x63A2;&#x7D22;&#x5C42;&#x6570;&#x662F;&#x65E0;&#x9650;&#x7684;&#xFF08;&#x5047;&#x8BBE;&#x9E21;&#x86CB;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x788E;&#xFF09;<br>&#x5F53;&#x53EA;&#x6709;&#x4E00;&#x6B21;&#x64CD;&#x4F5C;&#x6570;&#x548C;&#x65E0;&#x9650;&#x4E2A;&#x9E21;&#x86CB;&#xFF0C;&#x53EF;&#x4EE5;&#x63A2;&#x7D22;&#x7684;&#x6700;&#x5927;&#x697C;&#x5C42;&#x6570;&#x53EA;&#x6709;1&#xFF0C;&#x56E0;&#x4E3A;&#x6B21;&#x6570;&#x5DF2;&#x7ECF;&#x7528;&#x5B8C;&#x4E86;<br>&#x5F53;&#x7136;&#xFF0C;&#x6CA1;&#x6709;&#x9E21;&#x86CB;&#x6216;&#x8005;&#x6CA1;&#x6709;&#x6B21;&#x6570;&#x65F6;&#xFF0C;&#x63A2;&#x7D22;&#x5C42;&#x6570;&#x80AF;&#x5B9A;&#x662F;0<br>&#x8FD9;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x753B;&#x51FA;&#x5982;&#x4E0B;&#x8868;&#x683C;</p><table class="tg"><thead><tr><th class="tg-0pky"></th><th class="tg-0pky">&#x9E21;&#x86CB;&#x6570;1</th><th class="tg-0pky">&#x9E21;&#x86CB;&#x6570;2</th><th class="tg-0pky">&#x9E21;&#x86CB;&#x6570;3</th></tr></thead><tbody><tr><td class="tg-0pky">&#x64CD;&#x4F5C;&#x6570;1</td><td class="tg-0pky">1</td><td class="tg-0pky">1</td><td class="tg-0pky">1</td></tr><tr><td class="tg-0pky">&#x64CD;&#x4F5C;&#x6570;2</td><td class="tg-0pky">2</td><td class="tg-0pky"></td><td class="tg-0pky"></td></tr><tr><td class="tg-0pky">&#x64CD;&#x4F5C;&#x6570;3</td><td class="tg-0pky">3</td><td class="tg-0pky"></td><td class="tg-0pky"></td></tr></tbody></table><br>&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x4FE1;&#x606F;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x4E0A;&#x8868;&#xFF0C;&#x73B0;&#x5728;&#x7EE7;&#x7EED;&#x8865;&#x5145;<br>&#x5F53;&#x6709;2&#x6B21;&#x64CD;&#x4F5C;&#x6570;&#x548C;2&#x4E2A;&#x9E21;&#x86CB;&#x65F6;&#xFF0C;&#x5047;&#x8BBE;&#x73B0;&#x5728;&#x5728;2&#x697C;&#x6254;&#x9E21;&#x86CB;<br>1.&#x9E21;&#x86CB;&#x788E;&#x4E86;&#xFF0C;&#x53EA;&#x5269;&#x4E0B;&#x4E00;&#x4E2A;&#x9E21;&#x86CB;&#x548C;&#x4E00;&#x6B21;&#x64CD;&#x4F5C;&#x6570;&#xFF0C;&#x6839;&#x636E;&#x4E4B;&#x524D;&#x7684;&#x89C4;&#x5F8B;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x80FD;&#x63A2;&#x7D22;&#x7684;&#x5C42;&#x6570;&#x53EA;&#x6709;1&#xFF08;&#x6B64;&#x65F6;&#x53BB;&#x4E09;&#x697C;&#x6254;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x788E;&#x5C31;&#x80FD;&#x627E;&#x5230;&#x8010;&#x9AD8;&#x697C;&#x5C42;f=2&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x788E;&#x90A3;&#x5C31;&#x53EA;&#x80FD;&#x662F;f&gt;=3&#xFF09;<br>2.&#x9E21;&#x86CB;&#x6CA1;&#x788E;&#xFF0C;&#x53EA;&#x5269;&#x4E0B;&#x4E00;&#x6B21;&#x64CD;&#x4F5C;&#x6570;&#x548C;&#x4E24;&#x4E2A;&#x9E21;&#x86CB;&#xFF0C;&#x6839;&#x636E;&#x4E4B;&#x524D;&#x7684;&#x89C4;&#x5F8B;&#x662F;&#x53EA;&#x80FD;&#x63A2;&#x7D22;&#x4E00;&#x5C42;&#xFF08;&#x6B64;&#x65F6;&#x76F4;&#x63A5;&#x53BB;3&#x697C;&#xFF0C;&#x56E0;&#x4E3A;&#x53BB;&#x4E00;&#x697C;&#x6CA1;&#x610F;&#x4E49;&#x4E86;&#xFF0C;&#x6254;&#x4E86;&#x4E4B;&#x540E;&#x5982;&#x679C;&#x788E;&#x4E86;&#x8BC1;&#x660E;&#x8010;&#x9AD8;&#x697C;&#x5C42;f=2&#xFF0C;&#x6CA1;&#x788E;f&gt;=3&#xFF09;<br>&#x6240;&#x4EE5;&#x603B;&#x7684;&#x6765;&#x8BF4;&#xFF0C;&#x60C5;&#x51B5;1+&#x60C5;&#x51B5;2+&#x5F53;&#x524D;&#x63A2;&#x7D22;&#x7684;&#x4E00;&#x6B21; = 1+1+1 = 3<br>&#x5F53;&#x6709;2&#x6B21;&#x64CD;&#x4F5C;&#x6570;&#x548C;3&#x4E2A;&#x9E21;&#x86CB;&#x65F6;&#xFF0C;&#x4ECD;&#x7136;&#x5728;2&#x697C;&#x6254;&#x9E21;&#x86CB;<br>1.&#x9E21;&#x86CB;&#x788E;&#x4E86;&#xFF0C;&#x5269;&#x4E0B;2&#x4E2A;&#x9E21;&#x86CB;&#x548C;1&#x6B21;&#x6B21;&#x6570;&#xFF0C;&#x6839;&#x636E;&#x521A;&#x521A;&#x5F97;&#x51FA;&#x7684;&#x7ED3;&#x8BBA;&#xFF0C;&#x53EF;&#x4EE5;&#x63A2;&#x7D22;1&#x5C42;<br>2.&#x9E21;&#x86CB;&#x6CA1;&#x6709;&#x788E;&#xFF0C;&#x5269;&#x4E0B;3&#x4E2A;&#x9E21;&#x86CB;&#x548C;1&#x6B21;&#x6B21;&#x6570;&#xFF0C;&#x6839;&#x636E;&#x7ED3;&#x8BBA;&#x4E5F;&#x662F;&#x53EA;&#x6709;1&#x5C42;<br>&#x7ED3;&#x679C;&#x4E5F;&#x4ECD;&#x7136;&#x662F;3&#x5C42;<br>&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x6B21;&#x6570;&#x53EA;&#x6709;&#x4E24;&#x6B21;&#xFF0C;&#x4E0D;&#x7BA1;&#x6709;&#x51E0;&#x4E2A;&#x9E21;&#x86CB;&#xFF0C;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x63A2;&#x7D22;3&#x6B21;<br>&#x8865;&#x5145;&#x8868;<br><table class="tg"><thead><tr><th class="tg-0pky"></th><th class="tg-0pky">&#x9E21;&#x86CB;&#x6570;1</th><th class="tg-0pky">&#x9E21;&#x86CB;&#x6570;2</th><th class="tg-0pky">&#x9E21;&#x86CB;&#x6570;3</th></tr></thead><tbody><tr><td class="tg-0pky">&#x64CD;&#x4F5C;&#x6570;1</td><td class="tg-0pky">1</td><td class="tg-0pky">1</td><td class="tg-0pky">1</td></tr><tr><td class="tg-0pky">&#x64CD;&#x4F5C;&#x6570;2</td><td class="tg-0pky">2</td><td class="tg-kusv" style="background-color:#fffe65;">3</td><td class="tg-kusv" style="background-color:#fffe65;">3</td></tr><tr><td class="tg-0pky">&#x64CD;&#x4F5C;&#x6570;3</td><td class="tg-0pky">3</td><td class="tg-0pky"></td><td class="tg-0pky"></td></tr></tbody></table><p>&#x7136;&#x540E;&#xFF0C;&#x5F53;&#x6709;3&#x6B21;&#x6B21;&#x6570;&#x548C;2&#x4E2A;&#x9E21;&#x86CB;&#x65F6;&#xFF0C;&#x5047;&#x8BBE;&#x5728;2&#x697C;&#x6254;&#x9E21;&#x86CB;<br>1.&#x9E21;&#x86CB;&#x788E;&#x4E86;&#xFF0C;&#x5269;1&#x4E2A;&#x9E21;&#x86CB;&#x548C;2&#x6B21;&#x6B21;&#x6570;&#xFF0C;&#x6839;&#x636E;&#x4E0A;&#x8868;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x6709;2&#x5C42;<br>2.&#x9E21;&#x86CB;&#x6CA1;&#x788E;&#xFF0C;&#x5269;2&#x4E2A;&#x9E21;&#x86CB;&#x548C;2&#x6B21;&#x6B21;&#x6570;&#xFF0C;&#x6839;&#x636E;&#x4E0A;&#x8868;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x6709;3&#x5C42;<br>&#x603B;&#x5171;&#xFF1A;2+3+1=6<br>&#x5F53;&#x6709;3&#x6B21;&#x6B21;&#x6570;&#x548C;3&#x4E2A;&#x9E21;&#x86CB;&#x65F6;&#xFF0C;&#x7EE7;&#x7EED;&#x5728;2&#x697C;&#x6254;&#xFF08;&#x4E5F;&#x8BB8;&#x6B64;&#x65F6;&#x4F60;&#x5DF2;&#x7ECF;&#x53D1;&#x73B0;&#x8DDF;&#x5728;&#x54EA;&#x4E00;&#x5C42;&#x697C;&#x6254;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#x4E86;&#xFF09;<br>1.&#x9E21;&#x86CB;&#x788E;&#x4E86;&#xFF0C;&#x5269;2&#x4E2A;&#x9E21;&#x86CB;2&#x6B21;&#x6B21;&#x6570;&#xFF0C;&#x6839;&#x636E;&#x4E0A;&#x8868;&#x53EF;&#x4EE5;&#x5F97;&#x5230;3&#x5C42;<br>2.&#x9E21;&#x86CB;&#x6CA1;&#x788E;&#xFF0C;&#x5269;3&#x4E2A;&#x9E21;&#x86CB;2&#x6B21;&#x6B21;&#x6570;&#xFF0C;&#x6839;&#x636E;&#x4E0A;&#x8868;&#x53EF;&#x4EE5;&#x5F97;&#x5230;3&#x5C42;<br>&#x603B;&#x5171;&#xFF1A;3+3+1 = 7<br>&#x8865;&#x8868;</p><p><table class="tg"><thead><tr><th class="tg-0pky"></th><th class="tg-0pky">&#x9E21;&#x86CB;&#x6570;1</th><th class="tg-0pky">&#x9E21;&#x86CB;&#x6570;2</th><th class="tg-0pky">&#x9E21;&#x86CB;&#x6570;3</th></tr></thead><tbody><tr><td class="tg-0pky">&#x64CD;&#x4F5C;&#x6570;1</td><td class="tg-0pky">1</td><td class="tg-0pky">1</td><td class="tg-0pky">1</td></tr><tr><td class="tg-0pky">&#x64CD;&#x4F5C;&#x6570;2</td><td class="tg-0pky">2</td><td class="tg-kusv" tyle="background-color:#fffe65;">3</td><td class="tg-kusv" tyle="background-color:#fffe65;">3</td></tr><tr><td class="tg-0pky">&#x64CD;&#x4F5C;&#x6570;3</td><td class="tg-0pky">3</td><td class="tg-tcj5" style="background-color:#3166ff;">6</td><td class="tg-0pky" style="background-color:#3166ff;">7</td></tr></tbody></table><br>&#x2026;&#x2026;<br>&#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x89C4;&#x5F8B;&#xFF0C;F(K,C) = F(K-1,C-1) + F(K,C-1) + 1 (K&gt;=2 &amp;&amp; C&gt;=2&#xFF09;</p><p>&#x518D;&#x6B21;&#x6CE8;&#x610F;&#xFF0C;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x6C42;&#x7684;&#x662F;&#xFF0C;&#x5728;&#x6709;K&#x4E2A;&#x9E21;&#x86CB;&#xFF0C;C&#x6B21;&#x6B21;&#x6570;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x63A2;&#x7D22;&#x591A;&#x5C11;&#x5C42;&#x697C;&#x5C42;<br>&#x800C;leetcode&#x7684;&#x9898;&#x662F;&#xFF0C;&#x5728;N&#x5C42;&#x697C;&#x9AD8;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6709;K&#x4E2A;&#x9E21;&#x86CB;&#xFF0C;&#x6700;&#x5C11;&#x6709;&#x51E0;&#x6B21;&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x8010;&#x9AD8;&#x697C;&#x5C42;f&#x3002;&#x5176;&#x5B9E;&#x5728;&#x9006;&#x8F6C;&#x601D;&#x8DEF;&#x540E;&#xFF0C;&#x5DF2;&#x7ECF;&#x8DDF;&#x8010;&#x9AD8;&#x697C;&#x5C42;f&#x6CA1;&#x591A;&#x5927;&#x5173;&#x7CFB;&#xFF0C;&#x95EE;&#x9898;&#x5C31;&#x7B80;&#x5316;&#x4E86;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x6240;&#x8C13;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#x5C31;&#x662F;&#x4F60;&#x4E0A;&#x697C;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x5728;N&#x5C42;&#x697C;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4E0A;&#x697C;&#x6B21;&#x6570;&#x5373;&#x64CD;&#x4F5C;&#x6570;&#x4E5F;&#x4E0D;&#x80FD;&#x5927;&#x4E8E;N<br>&#x6240;&#x4EE5;&#x628A;&#x521A;&#x521A;&#x7684;&#x601D;&#x8DEF;&#x79FB;&#x52A8;&#x5230;&#x6B64;&#x9898;&#x4E2D;&#x6765;&#x5C31;&#x662F;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">superEggDrop</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>][k + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++) {</span><br><span class="line">            dp[i][j] = dp[i - <span class="number">1</span>][j] + dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (dp[i][j] &gt;= n) {</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5728;&#x770B;&#x5230;&#x8FD9;&#x79CD;&#x89E3;&#x6CD5;&#x524D;&#xFF0C;&#x6211;&#x4E5F;&#x770B;&#x5230;&#x4E86;&#x53E6;&#x4E00;&#x79CD;&#x89E3;&#x6CD5;&#xFF0C;&#x53EA;&#x662F;&#x535A;&#x4E3B;&#x7684;&#x89E3;&#x91CA;&#x6211;&#x770B;&#x4E0D;&#x61C2;&#xFF0C;&#x4F46;&#x4ED6;&#x7684;&#x4EE3;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x5957;&#x7528;&#x5230;&#x8FD9;&#x91CC;&#x6765;<br></p><blockquote><p>&#x53E6;&#x4E00;&#x79CD;&#x5199;&#x6CD5;&#xFF1A;<a href="https://hestyle.blog.csdn.net/article/details/91996663?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;utm_relevant_index=1" target="_blank" rel="noopener">https://hestyle.blog.csdn.net/article/details/91996663?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;utm_relevant_index=1</a></p></blockquote><br>&#x518D;&#x4E00;&#x6B21;&#x770B;&#x4E0A;&#x8868;&#xFF0C;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4EE5;&#x4E0B;&#x89C4;&#x5F8B;&#xFF1A;<br>1.K =1&#x65F6;&#xFF0C;F(K,C)=C<br>2.C=1&#x65F6;&#xFF0C;F(K,C)=1<br>3.C=2&#x65F6;&#xFF0C;F(K,C)=3<br>4.F(K,C) = F(K-1,C-1) + F(K,C-1) + 1 (K&gt;=2 &amp;&amp; C&gt;=2&#xFF09;<br>&#x6240;&#x4EE5;&#x4E5F;&#x53EF;&#x4EE5;&#x4ECE;C=1&#x5F00;&#x59CB;&#x7B97;&#x8D77;&#xFF0C;&#x5F53;&#x63A2;&#x7D22;&#x697C;&#x5C42;&lt;N&#x65F6;&#xFF0C;C&#x4E0D;&#x65AD;&#x589E;&#x52A0;<br><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x4F2A;&#x4EE3;&#x7801;</span></span><br><span class="line"><span class="keyword">while</span>(F(K,C)&lt;N){</span><br><span class="line">    C++</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> C</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x6240;&#x4EE5;&#x6700;&#x540E;&#x7684;&#x5B8C;&#x6574;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">superEggDrop</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> C = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (getMaxSearchFloor(k, C) &lt; n) {</span><br><span class="line">        C++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMaxSearchFloor</span><span class="params">(<span class="keyword">int</span> K, <span class="keyword">int</span> C)</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (K == <span class="number">1</span>) {</span><br><span class="line">        <span class="comment">//&#x4E00;&#x4E2A;&#x9E21;&#x86CB;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x63A2;&#x7D22;&#x697C;&#x5C42;&#x51B3;&#x5B9A;&#x4E8E;&#x6B21;&#x6570;</span></span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (C == <span class="number">1</span>) {</span><br><span class="line">        <span class="comment">//&#x53EA;&#x6709;&#x4E00;&#x6B21;&#x6B21;&#x6570;&#xFF0C;&#x53EA;&#x80FD;&#x63A2;&#x7D22;&#x4E00;&#x5C42;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (C == <span class="number">2</span>) {</span><br><span class="line">        <span class="comment">//&#x5F53;&#x6709;&#x4E24;&#x6B21;&#x6B21;&#x6570;&#xFF0C;&#x4E0D;&#x7BA1;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x9E21;&#x86CB;&#xFF0C;&#x4E5F;&#x53EA;&#x80FD;&#x63A2;&#x7D22;3&#x5C42;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x975E;&#x4E0A;&#x9762;&#x4E24;&#x79CD;&#x60C5;&#x51B5;</span></span><br><span class="line">    <span class="keyword">return</span> getMaxSearchFloor(K - <span class="number">1</span>, C - <span class="number">1</span>) + getMaxSearchFloor(K, C - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x554A;&#x7EC8;&#x4E8E;&#x5B8C;&#x4E86;&#xFF0C;&#x4E3A;&#x4E86;&#x7406;&#x89E3;&#x8FD9;&#x9898;&#x6211;&#x82B1;&#x4E86;&#x5FEB;&#x4E00;&#x4E2A;&#x4E0B;&#x5348;&#xFF0C;&#x56E0;&#x4E3A;&#x5F88;&#x5BB9;&#x6613;&#x60F3;&#x7740;&#x5C31;&#x504F;&#x4E86;&#x3002;&#x4E0D;&#x8FC7;&#x6700;&#x540E;&#x7406;&#x89E3;&#x4E86;&#x8FD8;&#x662F;&#x633A;&#x5F00;&#x5FC3;&#x7684;&#xFF0C;&#x770B;&#x6765;&#x6709;&#x65F6;&#x5019;&#x771F;&#x7684;&#x7528;&#x6700;&#x7B80;&#x5355;&#x7684;&#x60F3;&#x6CD5;&#x53BB;&#x89E3;&#x9898;&#x53CD;&#x800C;&#x662F;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x7684;&#x3002;&#x5B66;&#x5230;&#x4E86;&#x5B66;&#x5230;&#x4E86;&#xFF5E;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经典算法之鸡蛋掉落&lt;br&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://secretlin.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>KMP算法</title>
    <link href="https://secretlin.github.io/blog//posts/2da0528d/"/>
    <id>https://secretlin.github.io/blog//posts/2da0528d/</id>
    <published>2019-06-26T12:15:12.908Z</published>
    <updated>2019-05-26T10:21:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x770B;&#x4E86;&#x597D;&#x4E45;&#x7684;kmp&#x7B97;&#x6CD5;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x61C2;&#x4E86;&#xFF0C;&#x611F;&#x52A8;&#x3002;&#x8BB2;&#x5230;&#x5B57;&#x7B26;&#x4E32;&#x5339;&#x914D;&#xFF0C;&#x6700;&#x50BB;&#x74DC;&#x7684;&#x505A;&#x6CD5;&#x5C31;&#x662F;&#x66B4;&#x529B;&#x7834;&#x89E3;&#x3002;&#x5927;&#x795E;&#x4EEC;&#x81EA;&#x7136;&#x662F;&#x4E0D;&#x5C51;&#x4E8E;&#x8FD9;&#x79CD;&#x505A;&#x6CD5;&#xFF0C;&#x4E8E;&#x662F;&#x521B;&#x9020;&#x51FA;&#x4E00;&#x4E2A;&#x53EB;&#x505A;KMP&#x7B97;&#x6CD5;&#x6765;&#x7B80;&#x5316;&#x539F;&#x672C;&#x7684;&#x66B4;&#x529B;&#x65B9;&#x6CD5;&#x3002;<br><a id="more"></a><br>&#x5148;&#x9644;&#x4E0A;&#x4E24;&#x4E2A;&#x535A;&#x4E3B;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x6211;&#x662F;&#x770B;&#x4E86;&#x8FD9;&#x4E2A;&#x4E4B;&#x540E;&#x624D;&#x660E;&#x767D;next&#x6570;&#x7EC4;&#x662F;&#x5E72;&#x561B;&#x7684;&#xFF1A;<a href="https://blog.csdn.net/qq_37568658/article/details/79313639" target="_blank" rel="noopener">https://blog.csdn.net/qq_37568658/article/details/79313639</a><br><a href="http://jakeboxer.com/blog/2009/12/13/the-knuth-morris-pratt-algorithm-in-my-own-words/" target="_blank" rel="noopener">http://jakeboxer.com/blog/2009/12/13/the-knuth-morris-pratt-algorithm-in-my-own-words/</a><br>1.&#x9996;&#x5148;&#x8981;&#x4E86;&#x89E3;&#x4E00;&#x4E2A;&#x4E1C;&#x897F;&#xFF1A;&#x524D;&#x7F00;&#x3001;&#x540E;&#x7F00;&#x3001;PMT&#xFF08; Partial Match Table &#x90E8;&#x5206;&#x5339;&#x914D;&#x8868;&#xFF0C;&#x5373;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x6700;&#x957F;&#x7684;&#x76F8;&#x540C;&#x7684;&#x524D;&#x540E;&#x7F00;&#x957F;&#x5EA6;&#xFF09;<br>&#x524D;&#x7F00;&#xFF1A;&#x4ECE;&#x7B2C;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x5230;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x4E2A;&#x4F4D;&#x7F6E;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x6309;&#x987A;&#x5E8F;&#x7EC4;&#x5408;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32;<br>&#x540E;&#x7F00;&#xFF1A;&#x4ECE;&#x7B2C;&#x4E8C;&#x4E2A;&#x4F4D;&#x7F6E;&#x5230;&#x5012;&#x6570;&#x7B2C;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x6309;&#x987A;&#x5E8F;&#x7EC4;&#x5408;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32;<br>&#x6BD4;&#x5982;&#x6709;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;ABCDAB&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&#x4E3A;6&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x7684;index&#x4E3A;0-5<br>&#x5373;</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x524D;&#x7F00;&#x8DDF;&#x540E;&#x7F00;&#x4F1A;&#x8DDF;&#x7740;&#x4F60;&#x5173;&#x6CE8;&#x7684;&#x5B57;&#x7B26;&#x957F;&#x5EA6;&#x800C;&#x6539;&#x53D8;<br>&#x6BD4;&#x5982;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5173;&#x6CE8;&#x7684;&#x662F;0-4&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x6B64;&#x65F6;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x662F;ABCDA&#xFF0C;&#x5B83;&#x7684;&#x524D;&#x7F00;&#x662F;{A&#xFF0C;AB&#xFF0C;ABC&#xFF0C;ABCD}&#xFF0C;&#x540E;&#x7F00;&#x662F;{BCDA&#xFF0C;CDA&#xFF0C;DA&#xFF0C;A}&#xFF0C;&#x6B64;&#x65F6;&#x5728;&#x8FD9;&#x4E24;&#x4E2A;&#x96C6;&#x5408;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x627E;&#x5230;&#x5B83;&#x4EEC;&#x7684;&#x5171;&#x540C;&#x5B57;&#x7B26;&#x4E32;&#x201D;A&#x201D;&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x65F6;ABCDA&#x7684;PMT&#x4E3A;1&#x3002;<br>&#x53C8;ABCDAB&#x7684;&#x524D;&#x7F00;{A&#xFF0C;AB&#xFF0C;ABC&#xFF0C;ABCD&#xFF0C;ABCDA}&#xFF0C;&#x540E;&#x7F00;{BCDAB&#xFF0C;CDAB&#xFF0C;DAB&#xFF0C;AB&#xFF0C;B}&#xFF0C;&#x5171;&#x540C;&#x5B57;&#x7B26;&#x4E32;&#x4E3A;&#x201D;AB&#x201D;&#xFF0C;&#x6B64;&#x65F6;PMT&#x4E3A;2<p></p><p><font color="#388E8E">PS&#xFF1A;&#x6CE8;&#x610F;&#x524D;&#x7F00;&#x96C6;&#x5408;&#x662F;&#x4ECE;&#x7B2C;&#x4E00;&#x4E2A;&#x5F00;&#x59CB;&#xFF0C;&#x7136;&#x540E;&#x6162;&#x6162;&#x6DFB;&#x52A0;&#x540E;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x7EC4;&#x5408;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x540E;&#x7F00;&#x662F;&#x4ECE;&#x7B2C;&#x4E8C;&#x4E2A;&#x5230;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x7EC4;&#x5408;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x518D;&#x6162;&#x6162;&#x51CF;&#x6389;&#x524D;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x3002;</font><br>&#x7814;&#x7A76;PMT&#x6709;&#x4EC0;&#x4E48;&#x610F;&#x4E49;&#x5462;&#xFF1F;<br>&#x8FD8;&#x8BB0;&#x5F97;&#x5982;&#x679C;&#x662F;&#x66B4;&#x529B;&#x7834;&#x89E3;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x4EEC;&#x6BCF;&#x6B21;&#x6BD4;&#x8F83;&#x90FD;&#x662F;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x540E;&#x79FB;&#x6765;&#x6BD4;&#x8F83;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x4ECE;&#x5934;&#x5F00;&#x59CB;&#x6BD4;&#x8F83;&#x65F6;&#xFF0C;&#x53D1;&#x73B0;ptr&#x4E32;&#x4E2D;&#x7684;&#x2019;E&#x2019;&#x8DDF;&#x4E3B;&#x4E32;&#x4E2D;&#x7684;&#x2019;F&#x2019;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x6309;&#x7167;&#x4EE5;&#x5F80;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x628A;&#x6A21;&#x5F0F;&#x4E32;&#x5F80;&#x540E;&#x632A;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x5373;&#x8BA9;ptr&#x4ECE;str[1]&#x5F00;&#x59CB;&#x6BD4;&#x8F83;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x6B64;&#x65F6;&#x662F;&#x6BD4;&#x8F83;str[1]&#x548C;ptr[1]<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x4F46;&#x662F;&#x806A;&#x660E;&#x7684;&#x5927;&#x795E;&#x4EEC;&#x770B;&#x51FA;&#x4E86;&#x89C4;&#x5F8B;&#xFF0C;&#x8BF4;&#x65E2;&#x7136;&#x524D;&#x9762;&#x90FD;&#x5DF2;&#x7ECF;&#x6BD4;&#x8F83;&#x8FC7;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x4E00;&#x4E9B;&#x5E2E;&#x52A9;&#x3002;&#x6309;&#x7167;&#x8FD9;&#x4E2A;&#x601D;&#x8DEF;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E0B;ptr&#x4E2D;&#x7684;&#x201D;ABCABF&#x201D;&#x548C;str&#x4E2D;&#x7684;&#x201D;ABCABE&#x201D;&#xFF0C;&#x5176;&#x4E2D;&#x5B83;&#x4EEC;&#x7684;&#x91CD;&#x5408;&#x90E8;&#x5206;&#x662F;&#x201D;ABCAB&#x201D;<br>&#x8FD0;&#x7528;&#x4E00;&#x4E0B;&#x521A;&#x521A;&#x7684;&#x524D;&#x540E;&#x7F00;&#x77E5;&#x8BC6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5199;&#x51FA;&#x201D;ABCAB&#x201D;&#x7684;PMT&#x5206;&#x522B;&#x662F;&#xFF1A;{0&#xFF0C;0&#xFF0C;0&#xFF0C;1&#xFF0C;2}&#xFF0C;&#x5BF9;&#x5E94;&#x4E86;&#x5B57;&#x7B26;&#x4E32;&#x201D;A&#x201D;,&#x201D;AB&#x201D;,&#x201D;ABC&#x201D;,&#x201D;ABCA&#x201D;,&#x201D;ABCAB&#x201D;&#x3002;<br>&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x628A;ptr&#x79FB;&#x5230;3&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF0C;&#x56E0;&#x4E3A;&#x201D;ABCAB&#x201D;&#x4E2D;&#x7684;&#x524D;&#x4E24;&#x4E2A;&#x8DDF;&#x540E;&#x4E24;&#x4E2A;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x800C;&#x540E;&#x4E24;&#x4E2A;&#x5728;&#x521A;&#x521A;&#x7684;&#x7B2C;&#x4E00;&#x6B21;&#x6BD4;&#x8F83;&#x4E2D;&#x662F;&#x80FD;&#x591F;&#x4E0E;str&#x5339;&#x914D;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5C31;&#x76F4;&#x63A5;&#x4ECE;&#x90A3;&#x4E2A;&#x4F4D;&#x7F6E;&#x518D;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x5339;&#x914D;&#x6BD4;&#x8F83;<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x7136;&#x540E;&#xFF0C;Jake Boxer&#x4F5C;&#x8005;&#x5C31;&#x76F4;&#x63A5;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x8BA1;&#x7B97;&#x516C;&#x5F0F;&#xFF1A;&#x8DF3;&#x8FC7;&#x957F;&#x5EA6;=&#x5339;&#x914D;&#x5230;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;-PMT&#xFF0C;&#x8FD0;&#x7528;&#x5230;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5C31;&#x662F;5&#xFF08;ABCAB&#x7684;&#x957F;&#x5EA6;&#xFF09;-2&#xFF08;<font color="#5CACEE">AB</font>C<font color="#5CACEE">AB</font>&#xFF09;=3&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x4ECE;index=0&#x8DF3;&#x5230;index&#x4E3A;0+3= 3<p></p><p>&#x53C8;&#x6BD4;&#x5982;&#x8FD9;&#x79CD;&#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x6CA1;&#x6709;&#x6700;&#x957F;&#x524D;&#x540E;&#x7F00;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x201D;ABCDE&#x201D;&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;5&#xFF0C;PMT&#x4E3A;0&#xFF0C;&#x5373;index = 0+(5-0)= 5<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x800C;&#x8FD9;&#x4E2A;&#x6240;&#x8C13;&#x7684;PMT&#x5219;&#x662F;&#x7ECF;&#x5E38;&#x770B;&#x5230;&#x7684;next&#x6570;&#x7EC4;<br>&#x5728;&#x201D;ABCDAB&#x201D;&#x4E2D;&#xFF0C;&#x5B83;&#x5BF9;&#x5E94;&#x7684;next&#x6570;&#x7EC4;&#x662F;<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>2.&#x7EC8;&#x4E8E;&#x5230;&#x4E86;&#x91CD;&#x70B9;&#xFF0C;&#x6C42;next&#x6570;&#x7EC4;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x6211;&#x4E00;&#x76F4;&#x90FD;&#x4E0D;&#x61C2;&#xFF0C;&#x7136;&#x540E;&#x53CD;&#x590D;&#x7684;&#x770B;&#x4EE3;&#x7801;&#x548C;&#x770B;&#x535A;&#x5BA2;&#xFF0C;&#x4E00;&#x6B65;&#x6B65;&#x60F3;&#x6E05;&#x695A;&#x540E;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x660E;&#x767D;&#x4E86;&#x4EE3;&#x7801;&#x662F;&#x600E;&#x4E48;&#x80A5;&#x4E8B;&#x4E86;&#xFF01;<br>&#x9644;&#x4E0A;&#x6211;&#x770B;&#x5F97;&#x6BD4;&#x8F83;&#x61C2;&#x7684;&#x4EE3;&#x7801;&#x7684;&#x535A;&#x5BA2;&#xFF1A;<a href="https://blog.csdn.net/f1033774377/article/details/82556438" target="_blank" rel="noopener">https://blog.csdn.net/f1033774377/article/details/82556438</a><br>&#x8FD9;&#x4E2A;&#x535A;&#x4E3B;&#x7684;&#x610F;&#x601D;&#x5C31;&#x662F;&#xFF0C;&#x5728;&#x6C42;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;PMT&#x65F6;&#xFF0C;&#x5148;&#x4ECE;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x4E2A;&#x7684;PMT&#x770B;&#x8D77;&#xFF0C;&#x770B;&#x770B;&#x5728;&#x4E4B;&#x524D;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x52A0;&#x4E0A;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x540E;&#xFF0C;&#x80FD;&#x4E0D;&#x80FD;&#x4E5F;&#x7EE7;&#x7EED;&#x5339;&#x914D;&#x4E0B;&#x53BB;&#xFF0C;&#x5982;&#x679C;&#x80FD;&#xFF0C;&#x90A3;&#x5C31;&#x662F;next[i] = next[i-1]+1&#xFF0C;&#x4E0D;&#x884C;&#x7684;&#x8BDD;&#x54A7;&#xFF0C;&#x90A3;&#x5C31;&#x518D;&#x770B;&#x770B;&#x5339;&#x914D;&#x4E86;&#x7684;&#x524D;&#x7F00;&#x4E2D;&#xFF0C;&#x4F1A;&#x4E0D;&#x4F1A;&#x526A;&#x77ED;&#x540E;&#xFF0C;&#x8DDF;&#x77ED;&#x4E00;&#x70B9;&#x7684;&#x540E;&#x7F00;&#x5339;&#x914D;&#x5462;&#xFF1F;<br>ok&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x4EE3;&#x7801;&#x89E3;&#x91CA;&#xFF0C;&#x9644;&#x4E0A;&#x201D;abaabbabaab&#x201D;&#x7684;PMT<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x9996;&#x5148;&#x8981;&#x660E;&#x767D;&#x7684;&#x662F;F[i]&#x8868;&#x793A;&#x7684;&#x662F;&#xFF1A;0~i&#x4E2D;&#xFF0C;&#x6700;&#x957F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x4E2D;&#x7684;&#x524D;&#x7F00;&#x5B57;&#x7B26;&#x4E32;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x628A;F[i]+1&#x5C31;&#x662F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x7684;&#x957F;&#x5EA6;&#x4E86;&#x3002;&#x6BD4;&#x5982;&#x8BF4;&#x4E0A;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6700;&#x957F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x662F;abaab&#xFF0C;&#x6240;&#x4EE5;F[10] = 4&#xFF0C;&#x56E0;&#x4E3A;&#x201D;abaab&#x201D;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;b&#x5728;&#x5B57;&#x7B26;&#x4E32;string&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x662F;4&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x957F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x7684;&#x957F;&#x5EA6;&#x5C31;&#x662F;4+1=5&#x4E86;&#x3002;<br><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">String string = <span class="string">&quot;abaabbabaab&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>[] B = string.toCharArray();</span><br><span class="line"><span class="keyword">int</span> m= B.length;</span><br><span class="line"><span class="keyword">int</span>[] F = <span class="keyword">new</span> <span class="keyword">int</span>[m];</span><br><span class="line">F[<span class="number">0</span>] = -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;m;i++){</span><br><span class="line"><span class="keyword">int</span> j=F[i-<span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> ((B[j+<span class="number">1</span>]!=B[i])&amp;&amp;(j&gt;=<span class="number">0</span>))</span><br><span class="line">j=F[j];</span><br><span class="line"><span class="keyword">if</span> (B[j+<span class="number">1</span>]==B[i])</span><br><span class="line">F[i]=j+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">F[i]=-<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>ok&#xFF0C;&#x6240;&#x4EE5;&#x628A;F[0] = -1&#x7684;&#x610F;&#x601D;&#x4E5F;&#x6BD4;&#x8F83;&#x6E05;&#x695A;&#xFF0C;&#x5C31;&#x662F;&#x6CA1;&#x6709;&#x5339;&#x914D;&#x561B;&#x3002;<br>&#x4ECE;for&#x5FAA;&#x73AF;&#x5F00;&#x59CB;&#xFF0C;&#x5F88;&#x660E;&#x663E;&#x8FD9;&#x662F;&#x8981;&#x904D;&#x5386;&#x6574;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x3002;<br>&#x7136;&#x540E;&#x662F; int j = F[i-1];   &#x4E3A;&#x4EC0;&#x4E48;j&#x8981;=F[i-1]&#xFF0C;&#x56E0;&#x4E3A;&#x8981;&#x5728;&#x539F;&#x6765;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x770B;&#x770B;&#x80FD;&#x4E0D;&#x80FD;&#x7EE7;&#x7EED;&#x5339;&#x914D;&#x4E0B;&#x53BB;&#x3002;<br>&#x5148;&#x770B;if&#x2026;&#x90A3;&#x91CC;&#xFF0C;&#x5047;&#x8BBE;&#x73B0;&#x5728;i = 10&#xFF08;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;b&#xFF09;&#xFF0C;&#x4ECE;&#x4E0A;&#x8868;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;F[9]&#x662F;3&#xFF0C;&#x6240;&#x4EE5;&#x8BF4;&#x73B0;&#x5728;j=3&#x3002;F[9]=3&#x7684;&#x610F;&#x601D;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x524D;0~9&#x4E2D;&#x7684;&#x6700;&#x957F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x6709;4&#x4E2A;&#xFF0C;&#x5373;&#x201D;abaa&#x201D;&#xFF0C;&#x800C;&#x201D;3&#x201D;&#x4EE3;&#x8868;&#x7684;&#x5C31;&#x662F;&#x524D;&#x7F00;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;index&#x662F;3&#x7684;&#x2019;a&#x2019;&#xFF0C;PMT=4&#x3002;&#x90A3;&#x4E48;&#x73B0;&#x5728;B[10]&#x4F1A;&#x4E0D;&#x4F1A;&#x8DDF;&#x524D;&#x7F00;&#x7684;&#x4E0B;&#x4E00;&#x4F4D;&#x5373;B[5]&#x4E5F;&#x76F8;&#x540C;&#x5462;&#xFF1F;&#x5982;&#x679C;&#x76F8;&#x540C;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x76F4;&#x63A5;+1&#xFF0C;&#x6240;&#x4EE5;B[10]=4&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x5728;&#x539F;&#x6765;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x7EE7;&#x7EED;&#x5339;&#x914D;&#x4E0B;&#x53BB;&#x3002;<br>&#x5982;&#x679C;&#x4E0D;&#x540C;&#x5462;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x5C31;&#x526A;&#x77ED;&#x524D;&#x7F00;&#x518D;&#x6765;&#x770B;&#x5457;&#x3002;&#x5565;&#x610F;&#x601D;&#x5462;&#xFF1F;<br>&#x6765;&#x770B;&#x4E00;&#x4E0B;while&#x5230;else&#x90A3;&#x91CC;&#x3002;while&#x4E2D;&#x7684;&#x90A3;&#x53E5;j = F[j]&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x8FD9;&#x6837;&#x5462;&#xFF1F;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x770B;F[6]&#x662F;&#x600E;&#x4E48;&#x5F97;&#x5230;&#x7684;&#x3002;&#x6839;&#x636E;&#x4EE3;&#x7801;&#xFF0C;i&#x6B64;&#x65F6;&#x662F;6&#xFF0C;&#x90A3;&#x4E48;j = F[6-1] = F[5] = 1&#x3002;while&#x6BD4;&#x8F83;B[1+1] = B[2] = &#x2018;b&#x2019;,B[6] = &#x2018;a&#x2019;&#xFF0C;&#x4E0D;&#x76F8;&#x7B49;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x5728;&#x524D;&#x9762;&#x7684;&#x6700;&#x957F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x201D;aa&#x201D;&#x4E0A;&#x4E0D;&#x80FD;&#x518D;&#x7EE7;&#x7EED;&#x6DFB;&#x52A0;&#xFF0C;ok&#x90A3;&#x5C31;&#x526A;&#x77ED;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8FDB;&#x5165;while&#x91CC;&#x9762;&#x3002;j = F[1] = 0&#x3002;&#x518D;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x6BD4;&#x8F83;B[0+1]=B[1] = &#x2018;a&#x2019;&#xFF0C;B[6] = &#x2018;a&#x2019;&#xFF0C;&#x8DF3;&#x51FA;while&#x5FAA;&#x73AF;&#xFF0C;&#x76F4;&#x63A5;&#x6765;&#x5230;&#x4E86;if&#x8BED;&#x53E5;&#xFF0C;&#x5219;F[6] = 0+1=1&#xFF0C;&#x7ED3;&#x675F;&#x3002;<p></p><p>&#x7EC8;&#x4E8E;&#x5168;&#x90E8;&#x8BB2;&#x5B8C;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x53BB;leetcode&#x5199;&#x4E00;&#x4E0B;&#x8FD9;&#x9053;&#x9898;&#x7684;&#x89E3;&#x6CD5;&#xFF0C;&#x6765;&#x9A8C;&#x8BC1;&#x81EA;&#x5DF1;&#x5199;&#x7684;KMP&#x7B97;&#x6CD5;&#x6709;&#x6CA1;&#x6709;&#x95EE;&#x9898;:<a href="https://leetcode-cn.com/problems/implement-strstr/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/implement-strstr/</a></p><p>&#x4EE5;&#x4E0B;&#x662F;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">       </span><br><span class="line">       String str = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">       String ptr = <span class="string">&quot;lo&quot;</span>;</span><br><span class="line">       </span><br><span class="line">       System.out.println(strStr(str, ptr));</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">    }</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">KMP</span><span class="params">(String haystack, String needle)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (needle.isEmpty()) {</span><br><span class="line">          <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">char</span>[] A = haystack.toCharArray();</span><br><span class="line">       <span class="keyword">char</span>[] B = needle.toCharArray();</span><br><span class="line">       <span class="keyword">int</span> i = <span class="number">0</span>, j=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">int</span> index = -<span class="number">1</span>;       </span><br><span class="line">       <span class="keyword">int</span> s = <span class="number">0</span>; <span class="comment">//&#x4FDD;&#x5B58;str&#x662F;&#x4ECE;&#x54EA;&#x4E2A;index&#x5F00;&#x59CB;&#x6BD4;&#x8F83;&#x7684;  </span></span><br><span class="line">       <span class="keyword">while</span> (i&lt;A.length &amp;&amp; j&lt;B.length) {</span><br><span class="line">           <span class="comment">//&#x5F53;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x76F8;&#x540C;&#x65F6;</span></span><br><span class="line">           <span class="keyword">if</span> (A[i] == B[j]) {   </span><br><span class="line">               <span class="comment">//&#x5224;&#x65AD;&#x662F;&#x4E0D;&#x662F;&#x8BB0;&#x5F55;&#x4E86;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E;</span></span><br><span class="line">               <span class="keyword">if</span> (index == -<span class="number">1</span>) {</span><br><span class="line">                  index = i;</span><br><span class="line">               }</span><br><span class="line">               i++;</span><br><span class="line">               j++;</span><br><span class="line">               <span class="comment">//&#x5224;&#x65AD;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x627E;&#x5230;&#x4E86;&#x5339;&#x914D;&#x4E32;</span></span><br><span class="line">               <span class="keyword">if</span> (j == B.length) {</span><br><span class="line">                  <span class="keyword">return</span> index;</span><br><span class="line">               }</span><br><span class="line">           }<span class="keyword">else</span> {           </span><br><span class="line">               <span class="comment">//&#x5957;&#x7528;&#x516C;&#x5F0F;&#xFF1A;&#x8DF3;&#x8FC7;&#x957F;&#x5EA6;=&#x5339;&#x914D;&#x5230;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;-PMT</span></span><br><span class="line">               <span class="comment">//k&#x8868;&#x793A;&#x8DF3;&#x8FC7;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x5176;&#x4E2D;j&#x521A;&#x597D;&#x4EE3;&#x8868;&#x4E86;&#x5339;&#x914D;&#x4E86;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&#xFF0C;getNext()&#x8FD4;&#x56DE;&#x4E86;PMT</span></span><br><span class="line">               <span class="keyword">int</span> k = j - getNext(needle.substring(<span class="number">0</span>, j));</span><br><span class="line">               <span class="keyword">if</span> (k == <span class="number">0</span>) {</span><br><span class="line">                  k = <span class="number">1</span>;</span><br><span class="line">               }</span><br><span class="line">               i = s + k;<span class="comment">//&#x4E4B;&#x524D;&#x6240;&#x8C13;&#x628A;ptr&#x79FB;&#x52A8;&#x4F4D;&#x7F6E;&#xFF0C;&#x5176;&#x5B9E;&#x53EA;&#x662F;&#x6539;&#x53D8;i&#x5C31;&#x884C;</span></span><br><span class="line">               s = i;<span class="comment">//&#x8BB0;&#x5F55;&#x662F;&#x4ECE;str&#x4E2D;&#x54EA;&#x4E2A;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x5339;&#x914D;&#x7684;</span></span><br><span class="line">               j = <span class="number">0</span>;<span class="comment">//&#x4ECE;&#x5934;&#x5F00;&#x59CB;&#x5339;&#x914D;ptr</span></span><br><span class="line">               index = -<span class="number">1</span>;           </span><br><span class="line">           }      </span><br><span class="line">       }      </span><br><span class="line">       <span class="comment">//&#x627E;&#x4E0D;&#x5230;&#x5339;&#x914D;&#x7684;</span></span><br><span class="line">       <span class="keyword">return</span> -<span class="number">1</span>;     </span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getNext</span><span class="params">(String str)</span> </span>{</span><br><span class="line">       <span class="keyword">char</span>[] B = str.toCharArray();</span><br><span class="line">       <span class="keyword">int</span> m= B.length;</span><br><span class="line">       <span class="keyword">if</span> (m&lt;<span class="number">2</span>) {</span><br><span class="line">           <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">       }</span><br><span class="line">       <span class="keyword">int</span>[] F = <span class="keyword">new</span> <span class="keyword">int</span>[m];</span><br><span class="line">       F[<span class="number">0</span>] = -<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;m;i++)</span><br><span class="line">       {</span><br><span class="line">           <span class="keyword">int</span> j=F[i-<span class="number">1</span>];</span><br><span class="line">           <span class="keyword">while</span> ((B[j+<span class="number">1</span>]!=B[i])&amp;&amp;(j&gt;=<span class="number">0</span>))</span><br><span class="line">               j=F[j];</span><br><span class="line">           <span class="keyword">if</span> (B[j+<span class="number">1</span>]==B[i])</span><br><span class="line">               F[i]=j+<span class="number">1</span>;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">               F[i]=-<span class="number">1</span>;</span><br><span class="line">       }</span><br><span class="line">       <span class="keyword">return</span> F[m-<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x554A;&#x60F3;&#x8D77;&#x9762;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x88AB;&#x95EE;&#x4E86;&#x8FD9;&#x9053;&#x9898;&#x6211;&#x61F5;&#x903C;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x867D;&#x7136;&#x4EE5;&#x524D;&#x770B;&#x8FC7;&#xFF0C;&#x4F46;&#x6BCF;&#x6B21;&#x90FD;&#x662F;&#x8349;&#x8349;&#x770B;&#x4E86;&#x4E00;&#x904D;&#x5C31;&#x8FC7;&#xFF0C;&#x73B0;&#x5728;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x5E94;&#x8BE5;&#x4F1A;&#x52A0;&#x6DF1;&#x5370;&#x8C61;&#x4E86;&#x55EF;&#xFF01;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了好久的kmp算法，我终于懂了，感动。讲到字符串匹配，最傻瓜的做法就是暴力破解。大神们自然是不屑于这种做法，于是创造出一个叫做KMP算法来简化原本的暴力方法。&lt;br&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://secretlin.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>windows环境下搭建jenkins并构建apk</title>
    <link href="https://secretlin.github.io/blog//posts/2e566c7e/"/>
    <id>https://secretlin.github.io/blog//posts/2e566c7e/</id>
    <published>2019-02-25T12:11:22.333Z</published>
    <updated>2019-02-25T14:02:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x642D;&#x5EFA;jenkins&#x5E76;&#x7B80;&#x5355;&#x6784;&#x5EFA;apk<br><a id="more"></a><br>&#x7531;&#x4E8E;&#x6700;&#x8FD1;&#x540C;&#x4E8B;&#x63D0;&#x51FA;&#x8BF4;jenkins&#x4F1A;&#x65B9;&#x4FBF;&#x6D4B;&#x8BD5;&#x4EBA;&#x5458;&#x53BB;&#x4E0B;&#x8F7D;&#x6700;&#x65B0;&#x7248;&#x7684;apk&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x6211;&#x4EEC;&#x7F16;&#x8BD1;&#x7ED9;&#x4ED6;&#x4EEC;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x5C31;&#x7B80;&#x5355;&#x7684;&#x5165;&#x95E8;&#x4E00;&#x4E0B;jenkins&#x5E76;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x770B;&#x5230;&#x7F51;&#x4E0A;&#x5173;&#x4E8E;jenkins&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x5E94;&#x7528;&#xFF0C;&#x7B49;&#x4EE5;&#x540E;&#x6709;&#x65F6;&#x95F4;&#x4E86;&#x5C31;&#x518D;&#x7EE7;&#x7EED;&#x770B;&#x770B;&#x3002;<br>&#x5148;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;&#x7B80;&#x5355;&#x7684;&#x4F7F;&#x7528;jenkins&#x6253;&#x5305;apk&#x3002;</p><p><font color="#8B5F65">1.&#x4E0B;&#x8F7D;&#x3002;</font><br>&#x5728;&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;&#xFF1A;<a href="https://jenkins.io/download/" target="_blank" rel="noopener">https://jenkins.io/download/</a><br>&#x5B98;&#x7F51;&#x4E0A;&#x6709;&#x957F;&#x671F;&#x7A33;&#x5B9A;&#x7248;&#x548C;&#x4E00;&#x5468;&#x65B0;&#x9C9C;&#x7248;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x6240;&#x9700;&#x8981;&#x7684;&#x9009;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E00;&#x822C;&#x90FD;&#x662F;&#x9009;&#x62E9;&#x957F;&#x671F;&#x7A33;&#x5B9A;&#x3002;&#x7136;&#x540E;&#x5C31;&#x6839;&#x636E;&#x7CFB;&#x7EDF;&#x4E0B;&#x8F7D;&#x76F8;&#x5E94;&#x7684;&#x7248;&#x672C;&#x3002;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1.png" alt="step 1" title="">                </div>                <div class="image-caption">step 1</div>            </figure><p></p><p><font color="#8B5F65">2.&#x5B89;&#x88C5;&#x3002;</font><br>&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x5C31;&#x7701;&#x7565;&#x4E86;&#xFF08;&#x4F1A;&#x9009;&#x62E9;jenkins&#x7684;&#x4E00;&#x822C;&#x90FD;&#x662F;&#x88C5;&#x8FC7;&#x65E0;&#x6570;&#x8F6F;&#x4EF6;&#x7684;&#x4EBA;&#x4E86;&#xFF09;</p><p><font color="#8B5F65">3.&#x6253;&#x5F00;jenkins</font><br>&#x5B89;&#x88C5;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x9009;&#x62E9;&#x53EF;&#x4EE5;&#x6253;&#x5F00;jenkins</p><p><font color="#8B7B8B">&#x2460;&#x5728;Tomcat&#x4E0B;&#x6253;&#x5F00;&#xFF1A;</font><br>&#x628A;jenkins&#x6240;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x7684;jenkins.war&#x653E;&#x5230;Tomcat&#x7684;webapps&#x4E0B;&#xFF0C;&#x7136;&#x540E;&#x6253;&#x5F00;Tomcat<br>&#x7136;&#x540E;&#x6839;&#x636E;Tomcat&#x7684;&#x7AEF;&#x53E3;&#xFF0C;&#x6BD4;&#x5982;8888&#xFF0C;&#x6240;&#x4EE5;&#x8BBF;&#x95EE;jenkins&#x7684;&#x7F51;&#x5740;&#x5C31;&#x662F; <a href="http://localhost:8888/jenkins" target="_blank" rel="noopener">http://localhost:8888/jenkins</a></p><p><font color="#8B7B8B">&#x2461;&#x4F7F;&#x7528;&#x547D;&#x4EE4;&#x884C;&#x6253;&#x5F00;</font><br>&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x8F93;&#x5165;:java -jar jenkins.war<br>&#x7531;&#x4E8E;jenkins&#x9ED8;&#x8BA4;&#x8BBE;&#x7F6E;&#x7684;&#x7AEF;&#x53E3;&#x6709;&#x65F6;&#x88AB;&#x5360;&#x7528;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x65B0;&#x7684;&#x7AEF;&#x53E3;&#xFF0C;&#x5047;&#x8BBE;&#x4F7F;&#x7528;1080&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x662F;:java -jar jenkins &#x2013;httpPort=1080<br>&#x6240;&#x4EE5;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x8BBF;&#x95EE;&#x7684;&#x7F51;&#x5740;&#x5C31;&#x662F;<a href="http://localhost:1080" target="_blank" rel="noopener">http://localhost:1080</a></p><p><font color="#8B5F65">4.&#x8F93;&#x5165;&#x5BC6;&#x7801;&#x3002;</font><br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2.png" alt="step 4" title="">                </div>                <div class="image-caption">step 4</div>            </figure><br>&#x6839;&#x636E;&#x63D0;&#x793A;&#x7684;&#x8DEF;&#x5F84;&#x627E;&#x5230;&#x5BC6;&#x7801;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x5BC6;&#x7801;&#x8F93;&#x5165;<br>(PS:&#x6709;&#x65F6;&#x4F1A;&#x5F88;&#x8BE1;&#x5F02;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x628A;&#x8DEF;&#x5F84;&#x590D;&#x5236;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x6587;&#x6863;&#x8DEF;&#x5F84;&#x7C98;&#x8D34;)<p></p><p><font color="#8B5F65">5.&#x51FA;&#x73B0;&#x4E86;&#x201C;&#x79BB;&#x7EBF;&#x201D;&#x9875;&#x9762;&#x3002;</font><br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="3.png" alt="&#x79BB;&#x7EBF;" title="">                </div>                <div class="image-caption">&#x79BB;&#x7EBF;</div>            </figure><br>&#x8F93;&#x5165;&#x5B8C;&#x5BC6;&#x7801;&#xFF0C;&#x4E5F;&#x8BB8;&#x4F1A;&#x5F88;&#x6210;&#x529F;&#x7684;&#x8FDB;&#x5165;&#x5230;&#x4E0B;&#x8F7D;&#x63D2;&#x4EF6;&#x7684;&#x754C;&#x9762;&#xFF0C;&#x4F46;&#x4E5F;&#x6709;&#x53EF;&#x80FD;&#x8DDF;&#x6211;&#x4E00;&#x6837;&#x4E0D;&#x5E78;&#x8FD0;&#xFF0C;&#x6765;&#x5230;&#x4E86;&#x201C;&#x79BB;&#x7EBF;&#x201D;&#x9875;&#x9762;&#xFF0C;&#x5982;&#x4E0A;&#x3002;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x987A;&#x5229;&#x4E0B;&#x8F7D;&#x63D2;&#x4EF6;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x5FFD;&#x7565;&#x8FD9;&#x4E00;&#x6B65;&#x5427;&#x3002;<p></p><p>&#x4E0D;&#x8FC7;&#x6211;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x662F;&#x4EE5;&#x4E0B;&#x8FD9;&#x79CD;&#xFF1A;(&#x8F6C;&#x81EA;&#xFF1A;<a href="https://blog.csdn.net/u013905744/article/details/80434942" target="_blank" rel="noopener">https://blog.csdn.net/u013905744/article/details/80434942</a>)<br>&#x5B89;&#x88C5;&#x63D2;&#x4EF6;&#x90A3;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x5C31;&#x662F;&#x63D0;&#x793A;&#x4F60;offline&#x7684;&#x90A3;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x4E0D;&#x8981;&#x52A8;&#x3002;&#x7136;&#x540E;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x65B0;&#x7684;tab&#xFF0C;&#x8F93;&#x5165;&#x7F51;&#x5740;<a href="http://192.168.211.103:8080/jenkins/pluginManager/advanced&#x3002;" target="_blank" rel="noopener">http://192.168.211.103:8080/jenkins/pluginManager/advanced&#x3002;</a> &#x8FD9;&#x91CC;&#x9762;&#x6700;&#x5E95;&#x4E0B;&#x6709;&#x4E2A;&#x3010;&#x5347;&#x7EA7;&#x7AD9;&#x70B9;&#x3011;&#xFF0C;&#x628A;&#x5176;&#x4E2D;&#x7684;&#x94FE;&#x63A5;&#x7531;https&#x6539;&#x6210;http&#x7684;&#x5C31;&#x597D;&#x4E86;&#xFF0C;<a href="http://updates.jenkins.io/update-center.json&#x3002;" target="_blank" rel="noopener">http://updates.jenkins.io/update-center.json&#x3002;</a> &#x7136;&#x540E;&#x5728;&#x670D;&#x52A1;&#x5217;&#x8868;&#x4E2D;&#x5173;&#x95ED;jenkins&#xFF0C;&#x518D;tomcat&#x91CD;&#x65B0;&#x542F;&#x52A8;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x80FD;&#x6B63;&#x5E38;&#x8054;&#x7F51;&#x4E86;</p><p>&#x867D;&#x7136;&#x4E4B;&#x524D;&#x770B;&#x5230;&#x7684;&#x66F4;&#x591A;&#x662F;&#x8BF4;&#x6539;jenkins&#x76EE;&#x5F55;&#x4E0B;&#x7684;hudson.model.UpdateCenter.xml&#x4E2D;&#x7684;&#x90A3;&#x4E2A;url&#xFF0C;&#x628A;https&#x6539;&#x6210;http&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x6539;&#x4E86;&#x8FD8;&#x662F;&#x6CA1;&#x7528;&#x3002;</p><p><font color="#8B5F65">6.&#x4E0B;&#x8F7D;&#x63D2;&#x4EF6;&#x3002;</font><br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="4.png" alt="step 6" title="">                </div>                <div class="image-caption">step 6</div>            </figure><br>ok&#x8FD9;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x6109;&#x5FEB;&#x7684;&#x6765;&#x4E0B;&#x8F7D;&#x63D2;&#x4EF6;&#x4E86;&#x3002;&#x4F46;&#x662F;&#x53C8;&#x8981;&#x8BA9;&#x4F60;&#x9009;&#x201C;&#x63A8;&#x8350;&#x201D;&#x7684;&#x8FD8;&#x662F;&#x201C;&#x81EA;&#x9009;&#x201D;&#xFF0C;&#x566B;&#x6211;&#x662F;&#x9009;&#x62E9;&#x4E86;&#x63A8;&#x8350;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x4E4B;&#x524D;&#x5728;&#x7F51;&#x4E0A;&#x770B;&#x5230;&#x6709;&#x4EBA;&#x81EA;&#x9009;&#x63D2;&#x4EF6;&#x7684;&#x6E05;&#x5355;&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x51E0;&#x4E2A;&#x6211;&#x6CA1;&#x6709;&#x770B;&#x5230;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x540E;&#x9009;&#x62E9;&#x4E86;&#x63A8;&#x8350;&#x7684;&#x3002;<br>&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x559D;&#x676F;&#x8336;&#x9759;&#x5F85;&#x4E0B;&#x8F7D;&#x6210;&#x529F;&#x4E86;&#x3002;<br>&#x4E0B;&#x8F7D;&#x6210;&#x529F;&#x540E;&#x5C31;&#x521B;&#x5EFA;&#x7528;&#x6237;&#x5566;&#xFF0C;&#x8FD9;&#x4E00;&#x6B65;&#x4E5F;&#x7701;&#x7565;&#x4E0D;&#x5199;&#x4E86;&#x3002;<p></p><p><font color="#8B5F65">7.&#x914D;&#x7F6E;&#x3002;</font><br>&#x7EC8;&#x4E8E;&#x8FDB;&#x5165;&#x4E86;&#x6B63;&#x5F0F;&#x7684;&#x754C;&#x9762;&#x4E86;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x5C31;&#x662F;&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x7B49;&#x7B49;&#x4E86;&#x3002;<br>&#x70B9;&#x51FB;&#x53F3;&#x4FA7;&#x7684;&#x201C;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x201D;&#xFF0C;&#x9009;&#x62E9;&#x201C;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x201D;&#xFF1A;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="5.png" alt="step 7" title="">                </div>                <div class="image-caption">step 7</div>            </figure><br>&#x5728;Global properties&#x4E2D;&#x52FE;&#x9009;&#x201C;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x201D;&#xFF0C;&#x586B;&#x5199;SDK&#x548C;NDK(&#x5982;&#x679C;&#x6709;&#x9700;&#x8981;)&#x7684;&#x5730;&#x5740;&#xFF0C;&#x7136;&#x540E;&#x4FDD;&#x5B58;<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="11.jpg" alt="&#x73AF;&#x5883;&#x53D8;&#x91CF;" title="">                </div>                <div class="image-caption">&#x73AF;&#x5883;&#x53D8;&#x91CF;</div>            </figure><br>&#x56DE;&#x9000;&#x5230;&#x201C;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x201D;&#xFF0C;&#x9009;&#x62E9;&#x201C;&#x5168;&#x5C40;&#x5DE5;&#x5177;&#x914D;&#x7F6E;&#x201D;&#xFF1A;<br>&#x5728;JDK&#x3001;Git&#x548C;Gradle&#x90FD;&#x586B;&#x4E0A;&#xFF0C;&#x4E0D;&#x8981;&#x9009;&#x62E9;&#x201C;&#x81EA;&#x52A8;&#x4E0B;&#x8F7D;&#x201D;&#xFF0C;&#x542C;&#x8BF4;&#x4E0B;&#x8F7D;&#x5F88;&#x6162;emmm<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="6.png" alt="&#x5168;&#x5C40;&#x5DE5;&#x5177;&#x914D;&#x7F6E;" title="">                </div>                <div class="image-caption">&#x5168;&#x5C40;&#x5DE5;&#x5177;&#x914D;&#x7F6E;</div>            </figure><br>Git&#x53EF;&#x586B;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7684;&#x662F;svn&#x7684;&#x8BDD;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5148;&#x5FFD;&#x7565;&#x6389;<br>&#x586B;&#x5B8C;&#x4FDD;&#x5B58;<p></p><p><font color="#8B5F65">8.&#x5EFA;&#x4EFB;&#x52A1;&#x3002;</font><br>&#x7531;&#x4E8E;&#x6211;&#x7684;&#x9879;&#x76EE;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x6784;&#x5EFA;&#x4E2A;apk&#xFF0C;&#x6240;&#x4EE5;&#x4E0B;&#x9762;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x586B;&#x5199;&#xFF0C;&#x5982;&#x6709;&#x5176;&#x5B83;&#x9700;&#x8981;&#x53EF;&#x81EA;&#x884C;&#x641C;&#x7D22;&#x5176;&#x5B83;&#x7684;&#x3002;<br>&#x5728;&#x4E3B;&#x9875;&#x53F3;&#x4FA7;new&#x4E00;&#x4E2A;&#x4EFB;&#x52A1;&#xFF0C;&#x7136;&#x540E;&#x586B;&#x4EFB;&#x52A1;&#x540D;&#xFF0C;&#x9009;&#x62E9;&#x7B2C;&#x4E00;&#x4E2A;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="7.png" alt="step 8" title="">                </div>                <div class="image-caption">step 8</div>            </figure><br>&#x7136;&#x540E;&#x76F4;&#x63A5;&#x6765;&#x5230;source code management&#xFF0C;&#x6839;&#x636E;&#x9700;&#x8981;&#x9009;&#x62E9;git&#x6216;svn&#xFF0C;&#x586B;&#x5199;url&#x548C;&#x8BC1;&#x4E66;&#xFF08;&#x5C31;&#x662F;&#x6DFB;&#x52A0;&#x4E2A;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#x6765;&#x767B;&#x5F55;&#x8FDB;&#x53BB;&#xFF09;<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="8.png" alt="source code management" title="">                </div>                <div class="image-caption">source code management</div>            </figure><br>&#x8DF3;&#x5230;Build&#x8FD9;&#x91CC;&#xFF0C;&#x9009;&#x62E9;&#x7B2C;&#x4E8C;&#x4E2A;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x4E0B;&#x9762;&#x586B;&#x5199;&#xFF0C;&#x4FDD;&#x5B58;&#x3002;<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="9.png" alt="Build" title="">                </div>                <div class="image-caption">Build</div>            </figure><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="10.png" alt="Build" title="">                </div>                <div class="image-caption">Build</div>            </figure><p></p><p><font color="#8B5F65">9.&#x68C0;&#x67E5;&#x4EE3;&#x7801;&#x3002;</font><br>&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x8FD9;&#x4E00;&#x6B65;&#xFF0C;&#x6211;&#x7684;&#x6784;&#x5EFA;&#x4E00;&#x76F4;&#x5931;&#x8D25;&#xFF0C;&#x6240;&#x4EE5;&#x5199;&#x4E0B;&#x68C0;&#x67E5;&#x6B65;&#x9AA4;&#xFF1A;</p><p><font color="#8B7B8B">&#x2460;.&#x4FDD;&#x8BC1;&#x4EE3;&#x7801;&#x4E2D;&#x6CA1;&#x6709;local.properties&#x548C;app.externalNativeBuild(&#x8FD9;&#x4E00;&#x4E2A;&#x662F;&#x5728;&#x4F7F;&#x7528;ndk&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x751F;&#x6210;)&#x3002;</font><br>local.properties&#x4E2D;&#x7684;&#x73AF;&#x5883;&#x53EF;&#x80FD;&#x8DDF;jenkins&#x7684;&#x914D;&#x7F6E;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;.externalNativeBuild&#x4E5F;&#x662F;&#x4E00;&#x6837;&#x7684;&#x9053;&#x7406;&#xFF0C;&#x4E0D;&#x540C;&#x8DEF;&#x5F84;&#x7684;ndk&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#x90FD;&#x4E0D;&#x80FD;&#x51FA;&#x73B0;</p><p><font color="#8B7B8B">&#x2461;.&#x7F16;&#x5199;&#x597D;build.gradle&#x6587;&#x4EF6;&#xFF1A;</font><br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">signingConfigs {</span><br><span class="line">       release {</span><br><span class="line">           keyAlias KEYALIAS</span><br><span class="line">           keyPassword KEYPASSWORD</span><br><span class="line">           <span class="function">storeFile <span class="title">file</span><span class="params">(<span class="string">&apos;../apk.jks&apos;</span>)</span></span></span><br><span class="line"><span class="function">           storePassword STOREPASSWORD</span></span><br><span class="line"><span class="function">       }</span></span><br><span class="line"><span class="function">   }</span></span><br><span class="line"><span class="function">   <span class="comment">//&#x4E24;&#x4E2A;&#x7248;&#x672C;&#x540C;&#x65F6;&#x7528;&#x53D1;&#x5E03;&#x7248;&#x672C;&#x7684;&#x7B7E;&#x540D;&#x79D8;&#x94A5;</span></span></span><br><span class="line"><span class="function">   buildTypes </span>{</span><br><span class="line">       <span class="comment">//&#x53D1;&#x5E03;&#x7248;&#x672C;</span></span><br><span class="line">       release {</span><br><span class="line">           minifyEnabled <span class="keyword">false</span></span><br><span class="line">           <span class="function">proguardFiles <span class="title">getDefaultProguardFile</span><span class="params">(<span class="string">&apos;proguard-android.txt&apos;</span>)</span>, &apos;proguard-rules.pro&apos;</span></span><br><span class="line"><span class="function">           signingConfig signingConfigs.release</span></span><br><span class="line"><span class="function">       }</span></span><br><span class="line"><span class="function">       <span class="comment">//&#x6D4B;&#x8BD5;&#x7248;&#x672C;</span></span></span><br><span class="line"><span class="function">       debug </span>{</span><br><span class="line">           jniDebuggable <span class="keyword">true</span></span><br><span class="line">           debuggable <span class="keyword">true</span></span><br><span class="line">           signingConfig signingConfigs.release</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">   <span class="comment">// &#x6253;&#x5305;&#x540E;&#x5E94;&#x7528;&#x540D;&#x79F0;</span></span><br><span class="line">   applicationVariants.all { variant -&gt;</span><br><span class="line">       variant.outputs.all { output -&gt;</span><br><span class="line">           outputFileName = <span class="string">&quot;Test-${defaultConfig.versionName}.apk&quot;</span></span><br><span class="line"></span><br><span class="line">       }</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5BF9;&#x4E8E;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x201D;signingConfigs&#x201D;&#xFF0C;&#x91CC;&#x9762;&#x7684;keyAlias&#x3001;keyPassword&#x548C;storePassword&#x90FD;&#x662F;&#x5199;&#x5728;&#x4E86;gradle.properties&#x4E0B;&#x3002;&#x800C;storeFile&#x5219;&#x662F;&#x5BF9;&#x5E94;&#x7684;.jks&#x7684;&#x8DEF;&#x5F84;<br>&#x6240;&#x4EE5;&#x5728;&#x4E0A;&#x4F20;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x8BB0;&#x5F97;&#x4E0A;&#x4F20;.jks&#x6587;&#x4EF6;&#x3002;    </p><p><font color="#8B5F65">10.&#x6784;&#x5EFA;&#x3002;</font><br>&#x5728;&#x4EFB;&#x52A1;&#x5DE6;&#x4FA7;&#x70B9;&#x51FB;&#x201C;&#x7ACB;&#x5373;&#x6784;&#x5EFA;&#x201D;&#xFF0C;&#x5373;&#x53EF;&#x6210;&#x529F;&#x6784;&#x5EFA;&#x3002;</p><p>&#x7531;&#x4E8E;&#x6211;&#x7684;&#x7ECF;&#x9A8C;&#x8FD8;&#x662F;&#x5F88;&#x6D45;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x70B9;&#x4E5F;&#x8BB8;&#x8BF4;&#x5F97;&#x4E0D;&#x592A;&#x597D;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x6709;&#x9519;&#x6216;&#x8005;&#x662F;&#x66F4;&#x597D;&#x7684;&#x5EFA;&#x8BAE;&#xFF0C;&#x6B22;&#x8FCE;&#x5927;&#x5BB6;&#x4E4B;&#x5904;&#xFF0C;&#x611F;&#x8C22;&#xFF5E;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭建jenkins并简单构建apk&lt;br&gt;
    
    </summary>
    
    
      <category term="测试" scheme="https://secretlin.github.io/blog/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>利用Android+OpenCV简单识别颜色</title>
    <link href="https://secretlin.github.io/blog//posts/949a6cdd/"/>
    <id>https://secretlin.github.io/blog//posts/949a6cdd/</id>
    <published>2018-07-21T12:09:37.997Z</published>
    <updated>2018-07-24T12:27:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x8FD9;&#x662F;Adrain&#x5927;&#x795E;&#x7684;&#x5F62;&#x72B6;&#x8BC6;&#x522B;&#x7CFB;&#x5217;&#x6559;&#x7A0B;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#xFF0C;&#x5B8C;&#x7ED3;&#x6492;&#x82B1;<br><a id="more"></a><br>&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x6211;&#x5386;&#x5C3D;&#x5343;&#x8F9B;&#x4E07;&#x82E6;&#xFF0C;&#x7EC8;&#x4E8E;&#x5728;&#x67E5;&#x9605;&#x5404;&#x79CD;&#x8D44;&#x6599;&#x540E;&#x80FD;&#x591F;&#x6210;&#x529F;&#x8F6C;&#x6362;&#x6210;Android&#x4EE3;&#x7801;&#xFF0C;&#x5B9E;&#x5C5E;&#x4E0D;&#x6613;&#x554A;&#x3002;&#x4E0D;&#x8FC7;&#x4E5F;&#x786E;&#x5B9E;&#x662F;&#x56E0;&#x4E3A;&#x81EA;&#x5DF1;&#x5BF9;OpenCV&#x90FD;&#x4E0D;&#x600E;&#x4E48;&#x4E86;&#x89E3;&#xFF0C;&#x624D;&#x5BFC;&#x81F4;&#x4E86;&#x867D;&#x7136;&#x770B;&#x61C2;Adrain&#x5927;&#x795E;&#x7684;&#x535A;&#x5BA2;&#x540E;&#xFF0C;&#x4F46;&#x5199;&#x6210;Android&#x7248;&#x672C;&#x5374;&#x9891;&#x9891;&#x51FA;&#x73B0;bug&#x3002;&#x6700;&#x8FD1;&#x8FD9;&#x4E24;&#x5929;&#x4E5F;&#x5F00;&#x59CB;&#x770B;Adrain&#x5927;&#x795E;&#x7684;&#x6559;&#x7A0B;&#xFF0C;&#x4E5F;&#x5F00;&#x59CB;&#x4E86;&#x89E3;&#x4E86;OpenCV&#x7684;&#x4E00;&#x4E9B;&#x57FA;&#x7840;&#xFF0C;&#x5E0C;&#x671B;&#x4EE5;&#x540E;&#x80FD;&#x591F;&#x8D8A;&#x6765;&#x8D8A;&#x987A;&#x5229;&#x7684;&#x5728;Andoid&#x5229;&#x7528;OpenCV&#x3002;</p><p>&#x8BDD;&#x4E0D;&#x591A;&#x8BF4;&#xFF0C;&#x5F00;&#x59CB;&#x8BB0;&#x5F55;&#x4E0B;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6559;&#x7A0B;&#x7684;&#x9879;&#x76EE;&#x3002;&#x4EE5;&#x4E0B;&#xFF0C;&#x662F;&#x672C;&#x6B21;&#x9879;&#x76EE;&#x8981;&#x7528;&#x5230;&#x7684;&#x56FE;&#x7247;&#x3002;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="example_shapes.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x9996;&#x5148;&#xFF0C;&#x9700;&#x8981;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x7C7B;ColorLabeler&#x6765;&#x6807;&#x8BC6;&#x989C;&#x8272;&#x3002;&#x4EE5;&#x4E0B;&#x662F;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E9B;&#x6570;&#x636E;:<br><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x989C;&#x8272;&#x540D;&#x79F0;&#x6570;&#x7EC4;</span></span><br><span class="line"><span class="keyword">private</span> String[] colorNames= {<span class="string">&quot;blue&quot;</span>,<span class="string">&quot;green&quot;</span>,<span class="string">&quot;red&quot;</span>};</span><br><span class="line"><span class="comment">//&#x7528;mat&#x5B58;&#x653E;rgb&#x548C;lab</span></span><br><span class="line"><span class="keyword">private</span> Mat[] rgbMat = <span class="keyword">new</span> Mat[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">private</span> Mat[] labMat = <span class="keyword">new</span> Mat[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ColorLabeler</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="comment">//&#x5BF9;&#x5E94;&#x989C;&#x8272;&#x6570;&#x7EC4;&#x7684;&#x84DD;&#x8272;</span></span><br><span class="line">    rgbMat[<span class="number">0</span>] = <span class="keyword">new</span> Mat(<span class="number">1</span>,<span class="number">1</span>,CvType.CV_8UC3,<span class="keyword">new</span> Scalar(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">    <span class="comment">//&#x7EFF;&#x8272;</span></span><br><span class="line">    rgbMat[<span class="number">1</span>] = <span class="keyword">new</span> Mat(<span class="number">1</span>,<span class="number">1</span>,CvType.CV_8UC3,<span class="keyword">new</span> Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>));</span><br><span class="line">    <span class="comment">//&#x7EA2;&#x8272;</span></span><br><span class="line">    rgbMat[<span class="number">2</span>] = <span class="keyword">new</span> Mat(<span class="number">1</span>,<span class="number">1</span>,CvType.CV_8UC3,<span class="keyword">new</span> Scalar(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">    <span class="comment">//&#x628A;rgb&#x8F6C;&#x6362;&#x6210;lab</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++){</span><br><span class="line">        labMat[i] = <span class="keyword">new</span> Mat();</span><br><span class="line">        Imgproc.cvtColor(rgbMat[i],labMat[i],Imgproc.COLOR_RGB2Lab);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5728;&#x4EE5;&#x4E0A;&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x4F1A;&#x53D1;&#x73B0;&#x6709;&#x4E00;&#x4E2A;&#x65B0;&#x4E1C;&#x897F;&#x2013;LAB&#x3002;&#x636E;Adrain&#x5927;&#x795E;&#x8BF4;&#xFF0C;&#x4ED6;&#x7684;&#x8FD9;&#x7BC7;&#x6559;&#x7A0B;&#x662F;&#x57FA;&#x4E8E;&#x8BA1;&#x7B97;&#x5DF2;&#x77E5;&#x989C;&#x8272;&#x548C;&#x6240;&#x7ED9;&#x56FE;&#x50CF;&#x533A;&#x57DF;&#x7684;&#x5E73;&#x5747;&#x503C;&#x7684;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#x6765;&#x8FDB;&#x884C;&#x6807;&#x8BC6;&#xFF0C;&#x800C;&#x4E4B;&#x6240;&#x4EE5;&#x9009;&#x62E9;LAB&#x800C;&#x4E0D;&#x662F;HSV&#x6216;RGB&#xFF0C;&#x662F;&#x56E0;&#x4E3A;LAB&#x5728;&#x6B27;&#x6C0F;&#x8DDD;&#x79BB;&#x4E2D;&#x6709;&#x610F;&#x4E49;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x628A;&#x5DF2;&#x77E5;&#x989C;&#x8272;&#x7684;RGB&#x8F6C;&#x6362;&#x6210;LAB&#x3002;</p><p>&#x5728;&#x521B;&#x5EFA;rgbMat&#x7684;&#x65F6;&#x5019;&#x8017;&#x8D39;&#x6211;&#x5DE8;&#x591A;&#x65F6;&#x95F4;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4E00;&#x76F4;&#x90FD;&#x5BF9;RGB&#x5728;Mat&#x4E2D;&#x7684;&#x4FDD;&#x5B58;&#x6BEB;&#x4E0D;&#x6E05;&#x695A;&#xFF0C;&#x867D;&#x7136;&#x539F;&#x535A;&#x5BA2;&#x662F;&#x7528;&#x4E09;&#x4E2A;&#x4E00;&#x884C;&#x4E09;&#x5217;&#x7684;&#x6570;&#x7EC4;&#x53BB;&#x5B58;&#xFF0C;&#x4F46;&#x662F;&#x5728;JAVA&#x4E2D;&#x5374;&#x4E0D;&#x80FD;&#x3002;&#x9996;&#x5148;&#x9700;&#x8981;&#x518D;&#x4E86;&#x89E3;&#x4E00;&#x4E0B;Mat&#xFF0C;&#x4E0A;&#x6B21;&#x8BF4;&#x8FC7;Mat&#x662F;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#x6307;&#x9488;&#xFF0C;&#x4F46;&#x66F4;&#x91CD;&#x8981;&#x7684;&#x5B83;&#x7684;&#x7C7B;&#x578B;&#x3002;Mat&#x5177;&#x6709;&#x591A;&#x79CD;&#x6570;&#x636E;&#x6DF1;&#x5EA6;&#xFF0C;&#x5982;&#x4E0B;(&#x6458;&#x81EA;&#xFF1A;<a></a><a href="https://blog.csdn.net/yang_xian521/article/details/7107786" target="_blank" rel="noopener">https://blog.csdn.net/yang_xian521/article/details/7107786</a>&#xFF09;</p><p>&#x2022; CV_8U - 8-bit unsigned integers ( 0..255 )<br>&#x2022; CV_8S - 8-bit signed integers ( -128..127 )<br>&#x2022; CV_16U - 16-bit unsigned integers ( 0..65535 )<br>&#x2022; CV_16S - 16-bit signed integers ( -32768..32767 )<br>&#x2022; CV_32S - 32-bit signed integers ( -2147483648..2147483647 )<br>&#x2022; CV_32F - 32-bit &#xFB02;oating-point numbers ( -FLT_MAX..FLT_MAX, INF, NAN )<br>&#x2022; CV_64F - 64-bit &#xFB02;oating-point numbers ( -DBL_MAX..DBL_MAX, INF, NAN )</p><p>&#x7136;&#x540E;&#xFF0C;Mat&#x66F4;&#x5389;&#x5BB3;&#x7684;&#x662F;&#xFF0C;&#x5B83;&#x8FD8;&#x6D89;&#x53CA;&#x4E00;&#x4E2A;&#x53EB;&#x505A;channel&#xFF0C;&#x5373;&#x901A;&#x9053;&#x3002;&#x4EE5;&#x524D;&#x6211;&#x4EEC;&#x63A5;&#x89E6;&#x7684;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#xFF0C;&#x90FD;&#x662F;&#x4E00;&#x884C;&#x4E00;&#x5217;&#x5B58;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x662F;&#x5728;Mat&#x4E2D;&#xFF0C;&#x6709;&#x51E0;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x4E00;&#x884C;&#x4E00;&#x5217;&#x4E2D;&#x5C31;&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x51E0;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x5982;&#x679C;&#x4F7F;&#x7528;Mat&#x6765;&#x5B58;RGB&#x660E;&#x663E;&#x662F;&#x9700;&#x8981;&#x4E09;&#x901A;&#x9053;&#x6765;&#x5B58;&#xFF0C;&#x4E14;&#x770B;&#x4EE5;&#x4E0B;&#x56FE;&#x7247;&#xFF08;&#x6458;&#x81EA;&#xFF1A;<a></a><a href="https://blog.csdn.net/xiahouzuoxin/article/details/38298165" target="_blank" rel="noopener">https://blog.csdn.net/xiahouzuoxin/article/details/38298165</a>&#xFF09;&#xFF1A;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="single_channel.png" alt="&#x5355;&#x901A;&#x9053;" title="">                </div>                <div class="image-caption">&#x5355;&#x901A;&#x9053;</div>            </figure><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="rgb_channel.png" alt="RGB&#x4E09;&#x901A;&#x9053;" title="">                </div>                <div class="image-caption">RGB&#x4E09;&#x901A;&#x9053;</div>            </figure><br>&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x9009;&#x62E9;&#x4E86;CV_8UC3&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x7684;Mat&#x6765;&#x5B58;&#x653E;RGB&#x3002;<p></p><p>&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5751;&#xFF0C;&#x6211;&#x770B;&#x5230;&#x7F51;&#x4E0A;&#x8BF4;Scarla&#x5B58;&#x653E;&#x7684;&#x987A;&#x5E8F;&#x5176;&#x5B9E;&#x662F;BGR&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4E00;&#x5F00;&#x59CB;&#x4E5F;&#x662F;&#x6309;&#x8FD9;&#x4E2A;&#x987A;&#x5E8F;&#x53BB;&#x5B9A;&#x989C;&#x8272;&#xFF0C;&#x7ED3;&#x679C;&#x5C45;&#x7136;&#x84DD;&#x8272;&#x7ED9;&#x6211;&#x8BF4;&#x6210;&#x4E86;&#x7EA2;&#x8272;&#xFF0C;&#x7EA2;&#x8272;&#x53C8;&#x8BF4;&#x662F;&#x84DD;&#x8272;&#x3002;&#x6211;&#x624D;&#x610F;&#x8BC6;&#x5230;&#xFF0C;&#x5728;JAVA&#x8FD9;&#x91CC;&#xFF0C;Scarla&#x8FD8;&#x662F;&#x6309;&#x7167;RGB&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x7B80;&#x76F4;&#x6B32;&#x54ED;&#x65E0;&#x6CEA;&#xFF5E;</p><p>OK&#xFF0C;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x770B;&#x3002;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">label</span><span class="params">(Mat image, MatOfPoint contour)</span></span>{</span><br><span class="line"><span class="comment">//&#x4F20;&#x5165;&#x6BCF;&#x4E2A;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;</span></span><br><span class="line"><span class="comment">//&#x7531;&#x4E8E;&#x753B;&#x8F6E;&#x5ED3;&#x7684;&#x65F6;&#x5019;&#x662F;&#x9700;&#x8981;&#x4E00;&#x4E2A;list&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;list&#x6765;&#x5B58;&#x653E;&#x6BCF;&#x4E00;&#x4E2A;&#x56FE;&#x5F62;&#x8F6E;&#x5ED3;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x753B;&#x51FA;&#x6765;</span></span><br><span class="line">List&lt;MatOfPoint&gt; contours = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">contours.add(contour);</span><br><span class="line"></span><br><span class="line">String label = <span class="string">&quot;unknown&quot;</span>;</span><br><span class="line"><span class="comment">//&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x65B0;&#x7684;mat&#x6765;&#x4E3A;&#x56FE;&#x5F62;&#x589E;&#x6DFB;&#x8499;&#x7248;</span></span><br><span class="line">Mat mask = Mat.zeros(image.rows(),image.cols(),<span class="number">0</span>);</span><br><span class="line"><span class="comment">//&#x6839;&#x636E;&#x8499;&#x7248;&#x6765;&#x753B;&#x8F6E;&#x5ED3;</span></span><br><span class="line">Imgproc.drawContours(mask,contours,-<span class="number">1</span>,<span class="keyword">new</span> Scalar(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>),-<span class="number">1</span>);</span><br><span class="line"><span class="comment">//&#x8150;&#x8680;&#x5316;&#x56FE;&#x50CF;&#x7684;&#x7ED3;&#x6784;&#x5143;&#x7D20;&#xFF0C;&#x9ED8;&#x8BA4;&#x91C7;&#x7528;3*3&#x7684;&#x6B63;&#x65B9;&#x5F62;</span></span><br><span class="line">Mat kernel = Imgproc.getStructuringElement(Imgproc.MORPH_RECT, <span class="keyword">new</span> Size(<span class="number">3</span>, <span class="number">3</span>));</span><br><span class="line">Imgproc.erode(mask,mask,kernel,<span class="keyword">new</span> Point(-<span class="number">1</span>,-<span class="number">1</span>),<span class="number">2</span>);</span><br><span class="line"><span class="comment">//&#x8BA1;&#x7B97;lab&#x548C;&#x8499;&#x7248;&#x7684;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;scalar&#x5BF9;&#x8C61;</span></span><br><span class="line">Scalar scalar = Core.mean(image,mask);</span><br><span class="line"><span class="comment">//&#x7531;&#x4E8E;&#x4E0B;&#x9762;&#x8981;&#x8BA1;&#x7B97;scalar&#x548C;lab&#x7684;&#x6B27;&#x6C0F;&#x8DDD;&#x79BB;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4E0E;lab&#x7684;&#x5927;&#x5C0F;&#x548C;&#x7C7B;&#x578B;&#x90FD;&#x4E00;&#x6837;&#x7684;mat</span></span><br><span class="line">Mat mean = <span class="keyword">new</span> Mat(<span class="number">1</span>,<span class="number">1</span>,CvType.CV_8UC3,scalar);</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5148;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x51FD;&#x6570;label&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8BC6;&#x522B;&#x56FE;&#x50CF;image&#x548C;&#x8F6E;&#x5ED3;contour&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x3002;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x89E3;&#x51B3;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x4F55;&#x8BA1;&#x7B97;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#x3002;&#x9996;&#x5148;&#x770B;&#x5230;drawContours&#x90A3;&#x91CC;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x6267;&#x884C;&#x5230;&#x90A3;&#x91CC;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x56FE;&#x4E0A;&#x7684;&#x4E00;&#x4E2A;&#x5F62;&#x72B6;&#x88AB;&#x753B;&#x51FA;&#x6765;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x662F;&#x5B9E;&#x5FC3;&#x767D;&#x8272;&#x7684;&#x3002;(PS:Adrain&#x5927;&#x795E;&#x7684;&#x4EE3;&#x7801;&#x57FA;&#x672C;&#x90FD;&#x662F;&#x628A;&#x524D;&#x666F;&#x53D8;&#x767D;&#x8272;&#xFF0C;&#x80CC;&#x666F;&#x4E3A;&#x9ED1;&#x8272;&#x6765;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x3002;)&#xFF0C;&#x753B;&#x51FA;&#x6765;&#x7684;&#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="masked.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x8FD9;&#x6837;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x53EA;&#x8BA1;&#x7B97;&#x8499;&#x7248;&#x4E86;&#x7684;&#x5F62;&#x72B6;&#xFF0C;&#x5373;&#x767D;&#x8272;&#x5F62;&#x72B6;&#xFF0C;&#x7B80;&#x5316;&#x4E86;&#x8BA1;&#x7B97;&#x91CF;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x8FD8;&#x4F7F;&#x7528;&#x56FE;&#x50CF;&#x8150;&#x8680;&#xFF0C;&#x7528;&#x56FE;&#x50CF;&#x8150;&#x8680;&#xFF0C;&#x66F4;&#x6709;&#x5229;&#x4E8E;&#x5F62;&#x72B6;&#x7684;&#x5206;&#x5272;&#x3002;&#x5728;erode&#x7684;&#x65F6;&#x5019;&#x9047;&#x5230;&#x4E86;&#x95EE;&#x9898;&#xFF0C;&#x7531;&#x4E8E;&#x539F;&#x672C;&#x7684;python&#x4EE3;&#x7801;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;mask = cv2.erode(mask, None, iterations=2)&#xFF0C;&#x800C;JAVA&#x4EE3;&#x7801;&#x8981;&#x6C42;&#x7684;&#x53C2;&#x6570;&#x6BD4;&#x8F83;&#x591A;&#xFF0C;&#x662F;&#x8FD9;&#x6837;public static void erode(Mat src, Mat dst, Mat kernel, Point anchor, int iterations)&#x3002;&#x6700;&#x540E;&#x5728;opencv&#x7684;library&#x4E2D;&#x627E;&#x5230;&#x89E3;&#x91CA;&#xFF0C;&#x53D1;&#x73B0;kernel&#x548C;anchor&#x5176;&#x5B9E;&#x6709;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x53EA;&#x9700;&#x628A;&#x9ED8;&#x8BA4;&#x503C;&#x4EE3;&#x5165;&#x5C31;&#x884C;&#xFF1A;<br>&#x2022; element &#x2013; structuring element used for erosion; if element=Mat() , a 3 x 3 rectangular structuring element is used.<br>&#x2022; anchor &#x2013; position of the anchor within the element; default value (-1, -1) means that the anchor is at the element center.<p></p><p>&#x63A5;&#x7740;&#x8981;&#x7B97;&#x56FE;&#x7247;&#x533A;&#x57DF;&#x7684;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;mean&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5F88;&#x5751;&#x3002;&#x4E00;&#x5F00;&#x59CB;&#x770B;&#x7740;&#x6559;&#x7A0B;&#x6211;&#x4F20;&#x5165;&#x4E86;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x4F46;&#x4E00;&#x76F4;&#x62A5;&#x9519;&#xFF0C;&#x8BF4;mask.empty()||mask.type==0&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4E00;&#x76F4;&#x4EE5;&#x4E3A;&#x662F;&#x6211;&#x4F20;&#x5165;&#x7684;mask&#x7684;&#x503C;&#x662F;&#x7A7A;&#x503C;&#x6240;&#x4EE5;&#x62A5;&#x9519;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x6D4B;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x6211;&#x4F20;&#x8FDB;&#x53BB;&#x7684;mask&#x4E0D;&#x4E3A;&#x7A7A;&#x554A;&#xFF0C;&#x800C;&#x4E14;&#x7C7B;&#x578B;&#x4E5F;&#x4E0D;&#x662F;0&#x3002;&#x5728;opencv&#x7684;library&#x4E2D;&#x6307;&#x51FA;&#xFF1A;<b>C++: Scalar mean(InputArray src, InputArray mask=noArray())</b>&#xFF0C;&#x4F46;&#x7531;&#x4E8E;&#x5B83;&#x540E;&#x9762;&#x5BF9;mask&#x7684;&#x89E3;&#x91CA;&#x662F;&#x201C;&#x53EF;&#x9009;&#x62E9;&#x201D;&#x5BF9;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4E00;&#x76F4;&#x5FFD;&#x7565;&#x4E86;mask=noArray()&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#xFF0C;&#x540E;&#x6765;&#x4E0D;&#x65AD;&#x67E5;&#x8D44;&#x6599;&#x6539;&#x4EE3;&#x7801;&#x540E;&#x624D;&#x53D1;&#x73B0;&#xFF0C;&#x4E4B;&#x524D;&#x62A5;&#x9519;&#x7684;&#x6240;&#x8BF4;&#x7684;&#x4E1C;&#x897F;&#x4E0D;&#x662F;&#x6307;&#x6211;&#x54EA;&#x91CC;&#x9519;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x63D0;&#x793A;&#x6211;mask&#x5E94;&#x8BE5;&#x662F;&#x8981;&#x6309;&#x7167;&#x63D0;&#x793A;&#x90A3;&#x6837;&#x7684;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x6700;&#x540E;&#x628A;mask&#x7684;&#x7C7B;&#x578B;&#x6539;&#x6210;0&#xFF0C;&#x624D;&#x7EC8;&#x4E8E;&#x6210;&#x529F;(&#x5F00;&#x5FC3;&#x5230;&#x6CEA;&#x6D41;&#x6EE1;&#x9762;&#x3112;o&#x3112;)&#x3002;&#x6FC0;&#x52A8;&#x5B8C;&#x6BD5;&#xFF0C;&#x7EE7;&#x7EED;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x8BA1;&#x7B97;&#x5E73;&#x5747;&#x503C;&#x8DDF;&#x5404;&#x4E2A;&#x989C;&#x8272;&#x7684;lab&#x7684;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;</span></span><br><span class="line"><span class="keyword">double</span> dis = Integer.MAX_VALUE;</span><br><span class="line"><span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++){</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> d = Core.norm(labMat[i],mean);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (d&lt;dis){</span><br><span class="line">        dis = d;</span><br><span class="line">        min = i;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="comment">//&#x5F97;&#x5230;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x7684;&#x989C;&#x8272;&#x5373;&#x4E3A;&#x8BE5;&#x5F62;&#x72B6;&#x7684;&#x989C;&#x8272;</span></span><br><span class="line">label = colorNames[min];</span><br><span class="line"><span class="keyword">return</span> label;</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x8BA1;&#x7B97;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#x5566;&#x3002;&#x628A;&#x4E4B;&#x524D;&#x7B97;&#x51FA;&#x6765;&#x7684;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x4E0E;&#x7EA2;&#x8272;&#x3001;&#x7EFF;&#x8272;&#x3001;&#x84DD;&#x8272;&#x7684;lab&#x503C;&#x505A;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#x8BA1;&#x7B97;&#xFF0C;&#x9009;&#x51FA;&#x8DDD;&#x79BB;&#x6700;&#x5C0F;&#x7684;&#x90A3;&#x4E2A;lab&#x4F5C;&#x4E3A;&#x8BE5;&#x5F62;&#x72B6;&#x7684;&#x989C;&#x8272;&#x3002;ok&#xFF0C;&#x989C;&#x8272;&#x6807;&#x8BC6;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x603B;&#x7B97;&#x662F;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#x8DDF;&#x4EE5;&#x524D;&#x4E00;&#x6837;&#x5566;&#x3002;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x8BFB;&#x5165;&#x56FE;&#x7247;</span></span><br><span class="line">   Bitmap srcBitmap;</span><br><span class="line">   srcBitmap = BitmapFactory.decodeResource(getResources(), id);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//&#x5EFA;&#x7ACB;&#x51E0;&#x4E2A;Mat&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;</span></span><br><span class="line">   Mat rgbMat = <span class="keyword">new</span> Mat();</span><br><span class="line">   Mat grayMat = <span class="keyword">new</span> Mat();</span><br><span class="line">   Mat blur1 = <span class="keyword">new</span> Mat();</span><br><span class="line"></span><br><span class="line">   <span class="comment">//&#x5C06;&#x539F;&#x59CB;&#x7684;bitmap&#x8F6C;&#x6362;&#x4E3A;mat&#x578B;.</span></span><br><span class="line">   Utils.bitmapToMat(srcBitmap, rgbMat);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//&#x4EE5;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x7CCA;&#x534A;&#x5F84;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x6A21;&#x7CCA;&#x5904;&#x7406;,&#x524D;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x662F;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x5E94;&#x7528;&#x6EE4;&#x6CE2;&#x5668;&#x65F6;&#x6240;&#x7528;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x6807;&#x51C6;&#x5DEE;&#x6570;&#x503C;</span></span><br><span class="line">   Imgproc.GaussianBlur(rgbMat, blur1, <span class="keyword">new</span> Size(<span class="number">5</span>, <span class="number">5</span>), <span class="number">0</span>);</span><br><span class="line">   <span class="comment">//&#x5C06;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x4E3A;&#x7070;&#x5EA6;</span></span><br><span class="line">   Imgproc.cvtColor(blur1, grayMat, Imgproc.COLOR_BGR2GRAY);</span><br><span class="line">   <span class="comment">//&#x5C06;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x4E3A;lab</span></span><br><span class="line">   Mat labMat = <span class="keyword">new</span> Mat(blur1.size(),blur1.type());</span><br><span class="line">   Imgproc.cvtColor(blur1,labMat,Imgproc.COLOR_RGB2Lab);</span><br><span class="line">   <span class="comment">//&#x56FE;&#x7247;&#x4E8C;&#x503C;&#x5316;</span></span><br><span class="line">   Imgproc.threshold(grayMat, grayMat, <span class="number">60</span>, <span class="number">255</span>, Imgproc.THRESH_BINARY);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//&#x5BFB;&#x627E;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;</span></span><br><span class="line">   List&lt;MatOfPoint&gt; contours = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">   Mat hierarchy = <span class="keyword">new</span> Mat();</span><br><span class="line">   Imgproc.findContours(grayMat, contours, hierarchy, Imgproc.RETR_EXTERNAL, Imgproc.CHAIN_APPROX_SIMPLE);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//&#x52A0;&#x8F7D;&#x989C;&#x8272;&#x6807;&#x7B7E;&#x7684;&#x7C7B;</span></span><br><span class="line">   ColorLabeler cl = <span class="keyword">new</span> ColorLabeler();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (MatOfPoint c : contours) {</span><br><span class="line">       <span class="comment">//&#x8BA1;&#x7B97;&#x8F6E;&#x5ED3;&#x7684;&#x4E2D;&#x5FC3;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x4E2D;&#x5FC3;&#x786E;&#x5B9A;&#x5F62;&#x72B6;</span></span><br><span class="line">       Moments m = Imgproc.moments(c);</span><br><span class="line">       <span class="keyword">int</span> cx = (<span class="keyword">int</span>) (m.m10 / m.m00 );</span><br><span class="line">       <span class="keyword">int</span> cy = (<span class="keyword">int</span>) (m.m01 / m.m00 );</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x4F20;&#x5165;&#x56FE;&#x7247;&#x548C;&#x6BCF;&#x4E2A;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;</span></span><br><span class="line">       String label = cl.label(labMat,c);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//&#x753B;&#x8F6E;&#x5ED3;</span></span><br><span class="line">       Imgproc.drawContours(rgbMat, contours, -<span class="number">1</span>, <span class="keyword">new</span> Scalar(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>);</span><br><span class="line">       <span class="comment">//&#x5728;&#x4E2D;&#x5FC3;&#x663E;&#x793A;&#x6587;&#x5B57;</span></span><br><span class="line">       Imgproc.putText(rgbMat, label, <span class="keyword">new</span> Point(cx , cy ), Core.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, <span class="keyword">new</span> Scalar(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">2</span>);</span><br><span class="line">       <span class="comment">//&#x5C06;Mat&#x8F6C;&#x6362;&#x4E3A;&#x4F4D;&#x56FE;</span></span><br><span class="line">       Bitmap grayBitmap= Bitmap.createBitmap(srcBitmap.getWidth(), srcBitmap.getHeight(), Bitmap.Config.RGB_565);</span><br><span class="line">       Utils.matToBitmap(rgbMat, grayBitmap);</span><br><span class="line">       img.setImageBitmap(grayBitmap);</span><br><span class="line"></span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x4F20;&#x5165;&#x56FE;&#x7247;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x6BCF;&#x4E2A;&#x56FE;&#x5F62;&#x7684;&#x989C;&#x8272;&#x5199;&#x51FA;&#x6765;&#xFF0C;&#x5177;&#x4F53;&#x5C31;&#x4E0D;&#x518D;&#x89E3;&#x91CA;&#x5566;&#x3002;&#x6700;&#x7EC8;&#x6548;&#x679C;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="result.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x8865;&#x4E0A;Adrain&#x5927;&#x795E;&#x7684;&#x6559;&#x7A0B;&#xFF1A;<a href="https://www.pyimagesearch.com/2016/02/15/determining-object-color-with-opencv/" target="_blank" rel="noopener">https://www.pyimagesearch.com/2016/02/15/determining-object-color-with-opencv/</a><p></p><p>&#x4E8E;&#x662F;&#x7EC8;&#x4E8E;&#xFF0C;&#x6211;&#x5B66;&#x5B8C;&#x4E86;Adrain&#x5927;&#x795E;&#x7684;&#x8FD9;&#x4E09;&#x4E2A;&#x6559;&#x7A0B;&#xFF0C;&#x7B80;&#x76F4;&#x611F;&#x52A8;&#x3002;Adrain&#x5927;&#x795E;&#x771F;&#x7684;&#x5F88;&#x597D;&#x4EBA;&#xFF0C;&#x4E0D;&#x4EC5;&#x63A8;&#x8350;&#x4E86;&#x4E66;&#x7C4D;&#xFF0C;&#x800C;&#x4E14;&#x4ED6;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;17&#x5929;&#x6559;&#x7A0B;&#xFF0C;&#x6240;&#x8C13;&#x6559;&#x7A0B;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4ED6;&#x628A;&#x4ED6;&#x5199;&#x8FC7;&#x7684;&#x6559;&#x7A0B;&#x6587;&#x7AE0;&#x6BCF;&#x5929;&#x7ED9;&#x6211;&#x63A8;&#x9001;&#x4E00;&#x7BC7;&#x3002;&#x867D;&#x7136;&#x5168;&#x82F1;&#x5F88;&#x75DB;&#x82E6;&#xFF0C;&#x4F46;&#x597D;&#x5728;&#x81EA;&#x5DF1;&#x6709;&#x90A3;&#x4E48;&#x4E00;&#x70B9;&#x5E95;&#x5B50;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x4E5F;&#x4E0D;&#x7B97;&#x5F88;&#x7D2F;&#xFF0C;&#x4E5F;&#x5E78;&#x597D;python&#x4EE3;&#x7801;&#x4E0D;&#x7B97;&#x5F88;&#x96BE;&#x770B;&#xFF0C;&#x6211;&#x4E5F;&#x624D;&#x80FD;&#x8FD0;&#x7528;&#x5728;Android&#x4E0A;&#x3002;&#x5E0C;&#x671B;&#x7ECF;&#x8FC7;17&#x5929;&#x540E;&#xFF0C;&#x6211;&#x80FD;&#x5927;&#x6982;&#x4E86;&#x89E3;OpenCV&#xFF0C;&#x4EE5;&#x53CA;&#x63D0;&#x5347;&#x82F1;&#x8BED;&#x80FD;&#x529B;2333&#x3002;&#x6700;&#x540E;&#x8865;&#x4E0A;&#x8FD9;&#x4E09;&#x4E2A;&#x6559;&#x7A0B;&#x6211;&#x5199;&#x7684;Android&#x5B8C;&#x6574;&#x4EE3;&#x7801;&#xFF1A;<a href="https://github.com/SecretLin/shape-detection-with-OpenCV/tree/master" target="_blank" rel="noopener">https://github.com/SecretLin/shape-detection-with-OpenCV/tree/master</a></p><p>&#x4EE3;&#x7801;&#x53EF;&#x80FD;&#x5199;&#x5F97;&#x4E0D;&#x597D;&#xFF0C;&#x5E0C;&#x671B;&#x61C2;&#x884C;&#x7684;&#x5927;&#x4F6C;&#x591A;&#x591A;&#x6307;&#x6559;&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是Adrain大神的形状识别系列教程的最后一个，完结撒花&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://secretlin.github.io/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>利用Android+OpenCV来识别形状</title>
    <link href="https://secretlin.github.io/blog//posts/b5e5a6bd/"/>
    <id>https://secretlin.github.io/blog//posts/b5e5a6bd/</id>
    <published>2018-07-20T12:06:44.809Z</published>
    <updated>2018-07-21T09:13:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;&#x4E0A;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x4E2D;&#xFF0C;&#x5199;&#x51FA;&#x4E86;&#x5982;&#x4F55;&#x753B;&#x51FA;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;&#x3002;&#x800C;&#x8FD9;&#x4E00;&#x6B21;&#xFF0C;&#x5219;&#x5728;&#x4E0A;&#x4E00;&#x6B21;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x901A;&#x8FC7;&#x5BF9;&#x8F6E;&#x5ED3;&#x7684;&#x7279;&#x5F81;&#x6765;&#x5224;&#x65AD;&#x56FE;&#x5F62;&#x662F;&#x4EC0;&#x4E48;&#x5F62;&#x72B6;&#x3002;<br><a id="more"></a><br>&#x8FD9;&#x4E00;&#x6B21;&#x4F7F;&#x7528;&#x7684;&#x56FE;&#x8FD8;&#x662F;&#x4E0A;&#x4E00;&#x6B21;&#x7684;&#x90A3;&#x5F20;&#x56FE;&#x3002;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="shapes_and_colors.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x9996;&#x5148;&#xFF0C;&#x5148;&#x6765;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x7C7B;ShapeDetector&#xFF0C;&#x7136;&#x540E;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x51FD;&#x6570;detect(MatOfPoint2f c)&#x7528;&#x4E8E;&#x8BC6;&#x522B;&#x5F62;&#x72B6;&#x8BC6;&#x522B;&#x3002;<br><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String shape = <span class="string">&quot;unknown&quot;</span>;</span><br><span class="line"><span class="comment">//&#x8BA1;&#x7B97;&#x8F6E;&#x5ED3;&#x7684;&#x5468;&#x957F;</span></span><br><span class="line"><span class="keyword">double</span> peri = Imgproc.arcLength(c,<span class="keyword">true</span>);</span><br><span class="line">MatOfPoint2f approx = <span class="keyword">new</span> MatOfPoint2f();</span><br><span class="line"><span class="comment">//&#x5F97;&#x5230;&#x8F6E;&#x5ED3;&#x7684;&#x5927;&#x6982;</span></span><br><span class="line">Imgproc.approxPolyDP(c,approx,<span class="number">0.04</span> * peri,<span class="keyword">true</span>);</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD9;&#x91CC;&#x5F15;&#x5165;&#x4E86;contour approximation&#xFF0C;&#x8F6E;&#x5ED3;&#x8FD1;&#x4F3C;&#xFF0C;&#x7531;&#x4E8E;&#x6015;&#x7FFB;&#x8BD1;&#x5F97;&#x4E0D;&#x597D;&#xFF0C;&#x4E0B;&#x6587;&#x7EE7;&#x7EED;&#x91C7;&#x7528;contour approximation&#x3002;&#x8FD9;&#x79CD;&#x8FD1;&#x4F3C;&#x662F;&#x6E90;&#x4E8E;Ramer&#x2013;Douglas&#x2013;Peucker algorithm&#x7B97;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x7684;&#x5927;&#x6982;&#x610F;&#x601D;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5229;&#x7528;&#x7EBF;&#x6BB5;&#x6765;&#x8FD1;&#x4F3C;&#x63CF;&#x7ED8;&#x66F2;&#x7EBF;&#xFF0C;&#x4EE5;&#x51CF;&#x5C11;&#x6E90;&#x66F2;&#x7EBF;&#x7684;&#x70B9;&#x6570;&#x3002;&#xFF08;&#x60F3;&#x8981;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x7684;&#x5C0F;&#x4F19;&#x4F34;&#x53EF;&#x4EE5;&#x53BB;&#x767E;&#x5EA6;&#x4E86;&#x89E3;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x8BE6;&#x7EC6;&#x89E3;&#x91CA;&#x3002;&#xFF09;&#x5728;OpenCV&#x5E93;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;Imgproc.approxPolyDP()&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;contour approximation&#x3002;&#x800C;&#x4E3A;&#x4E86;&#x53D6;&#x5F97;contour approximation&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x5148;&#x5F97;&#x5230;&#x8F6E;&#x5ED3;&#x7684;&#x5468;&#x957F;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4EE5;&#x6B64;&#x6765;&#x5F97;&#x5230;&#x8FD1;&#x4F3C;&#x3002;</p><p><font color="#00CD66">public static void approxPolyDP(MatOfPoint2f curve, MatOfPoint2f approxCurve, double epsilon, boolean closed)</font>&#x53C2;&#x6570;&#x8BE6;&#x89E3;&#x5982;&#x4E0B;&#xFF1A;</p><p><font color="#7CCD7C">MatOfPoint2f curve</font>:&#x4E00;&#x822C;&#x662F;&#x7531;&#x56FE;&#x50CF;&#x7684;&#x8F6E;&#x5ED3;&#x70B9;&#x7EC4;&#x6210;&#x7684;&#x70B9;&#x96C6;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x662F;&#x4F7F;&#x7528;&#x4E4B;&#x524D;&#x6240;&#x5F97;&#x5230;&#x7684;&#x8F6E;&#x5ED3;</p><p><font color="#7CCD7C">MatOfPoint2f approxCurve</font>&#xFF1A;&#x8868;&#x793A;&#x8F93;&#x51FA;&#x7684;&#x8F6E;&#x5ED3;&#x8FD1;&#x4F3C;contour approximation</p><p><font color="#7CCD7C">double epsilon</font>&#xFF1A;&#x4E3B;&#x8981;&#x8868;&#x793A;&#x8F93;&#x51FA;&#x7684;&#x7CBE;&#x5EA6;&#xFF0C;&#x5C31;&#x662F;&#x4E24;&#x4E2A;&#x8F6E;&#x5ED3;&#x70B9;&#x4E4B;&#x95F4;&#x6700;&#x5927;&#x8DDD;&#x79BB;&#x6570;&#xFF0C;&#x5E38;&#x7528;&#x503C;&#x901A;&#x5E38;&#x5728;&#x539F;&#x59CB;&#x8F6E;&#x5ED3;&#x5468;&#x957F;&#x7684;1-5&#xFF05;&#x8303;&#x56F4;&#x5185;&#x3002;</p><p><font color="#7CCD7C">boolean closed</font>&#xFF1A;&#x8868;&#x793A;&#x8F93;&#x51FA;&#x7684;&#x591A;&#x8FB9;&#x5F62;&#x662F;&#x5426;&#x5C01;&#x95ED;</p><p><b>ps:&#x60F3;&#x8981;&#x4E86;&#x89E3;&#x66F4;&#x591A;contour approximation&#xFF0C;&#x6211;&#x4E4B;&#x524D;&#x63D0;&#x5230;&#x7684;&#x5916;&#x56FD;&#x4F5C;&#x8005;Adrian&#x4E5F;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x94FE;&#x63A5;&#xFF1A;<a></a><a href="https://www.pyimagesearch.com/pyimagesearch-gurus/" target="_blank" rel="noopener">https://www.pyimagesearch.com/pyimagesearch-gurus/</a></b></p><p>&#x5F53;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x4E86;&#x8F6E;&#x5ED3;&#x7684;&#x8FD1;&#x4F3C;&#x66F2;&#x7EBF;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8F6E;&#x5ED3;&#x66F2;&#x7EBF;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x9876;&#x70B9;&#x6765;&#x5224;&#x65AD;&#x662F;&#x4EC0;&#x4E48;&#x5F62;&#x72B6;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x5982;&#x679C;&#x662F;&#x4E09;&#x89D2;&#x5F62;&#x5F62;&#x72B6;&#xFF0C;&#x5219;&#x6709;&#x4E09;&#x4E2A;&#x9876;&#x70B9;</span></span><br><span class="line"><span class="keyword">if</span> (approx.toList().size()==<span class="number">3</span>){</span><br><span class="line">    shape = <span class="string">&quot;triangle&quot;</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5982;&#x679C;&#x6709;&#x56DB;&#x4E2A;&#x9876;&#x70B9;&#xFF0C;&#x5219;&#x662F;&#x6B63;&#x65B9;&#x5F62;&#x6216;&#x8005;&#x957F;&#x65B9;&#x5F62;</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (approx.toList().size()==<span class="number">4</span>){</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x8BA1;&#x7B97;&#x8F6E;&#x5ED3;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x5E76;&#x4F7F;&#x7528;&#x8FB9;&#x754C;&#x6846;&#x6765;&#x8BA1;&#x7B97;&#x5BBD;&#x9AD8;&#x6BD4;</span></span><br><span class="line">    Rect rect = <span class="keyword">new</span> Rect();</span><br><span class="line">    rect = Imgproc.boundingRect(<span class="keyword">new</span> MatOfPoint(approx.toArray()));</span><br><span class="line">    <span class="keyword">float</span> ar = rect.width/(<span class="keyword">float</span>)rect.height;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x6B63;&#x65B9;&#x5F62;&#x7684;&#x5BBD;&#x9AD8;&#x6BD4;&#x63A5;&#x8FD1;&#x4E3A;1&#xFF0C;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#x5C31;&#x4E3A;&#x957F;&#x65B9;&#x5F62;</span></span><br><span class="line">    <span class="keyword">if</span> (ar&gt;=<span class="number">0.95</span> &amp;&amp; ar&lt;=<span class="number">1.05</span>){</span><br><span class="line">        shape = <span class="string">&quot;square&quot;</span>;</span><br><span class="line">    }<span class="keyword">else</span> {</span><br><span class="line">        shape = <span class="string">&quot;rectangle&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5982;&#x679C;&#x662F;&#x4E94;&#x89D2;&#x5F62;&#xFF0C;&#x5219;&#x6709;&#x4E94;&#x4E2A;&#x9876;&#x70B9;</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (approx.toList().size()==<span class="number">5</span>){</span><br><span class="line">    shape = <span class="string">&quot;pentagon&quot;</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x9664;&#x4E86;&#x4EE5;&#x4E0A;&#x60C5;&#x51B5;&#x4E4B;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x4E3A;&#x5706;&#x5F62;</span></span><br><span class="line"><span class="keyword">else</span> {</span><br><span class="line">    shape = <span class="string">&quot;circle&quot;</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD9;&#x91CC;&#x5FC5;&#x987B;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8F6E;&#x5ED3;&#x66F2;&#x7EBF;&#x662F;&#x7531;&#x9876;&#x70B9;&#x5217;&#x8868;&#x7EC4;&#x6210;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x624D;&#x53EF;&#x4EE5;&#x4EE5;&#x6B64;&#x6765;&#x5224;&#x65AD;&#x5F62;&#x72B6;&#x3002;&#x5982;&#x4E0A;&#x4EE3;&#x7801;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x8F6E;&#x5ED3;&#x6709;&#x4E09;&#x4E2A;&#x70B9;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8BF4;&#x660E;&#x8BE5;&#x5F62;&#x72B6;&#x6709;&#x4E09;&#x4E2A;&#x9876;&#x70B9;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x786E;&#x8BA4;&#x662F;&#x4E09;&#x89D2;&#x5F62;&#x3002;&#x800C;&#x5BF9;&#x4E8E;&#x56DB;&#x4E2A;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x5224;&#x65AD;&#x662F;&#x6B63;&#x65B9;&#x5F62;&#x8FD8;&#x662F;&#x957F;&#x65B9;&#x5F62;&#x3002;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#xFF0C;&#x6B63;&#x65B9;&#x5F62;&#x56DB;&#x6761;&#x8FB9;&#x4E00;&#x6837;&#x957F;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x56FE;&#x5F62;&#x7684;&#x5BBD;&#x9AD8;&#x6BD4;&#x6765;&#x505A;&#x8FDB;&#x4E00;&#x6B65;&#x786E;&#x8BA4;&#x3002;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;boundingRect()&#x662F;&#x6307;&#x7528;&#x4E00;&#x4E2A;&#x6700;&#x5C0F;&#x7684;&#x77E9;&#x5F62;&#xFF0C;&#x628A;&#x627E;&#x5230;&#x7684;&#x5F62;&#x72B6;&#x5305;&#x8D77;&#x6765;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x77E9;&#x5F62;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8BA1;&#x7B97;&#x5BBD;&#x9AD8;&#x6BD4;&#x3002;&#x4ECE;&#x4E00;&#x5F00;&#x59CB;&#x6240;&#x7ED9;&#x7684;&#x56FE;&#x7247;&#x4E2D;&#xFF0C;&#x5F53;&#x6392;&#x9664;&#x4E86;&#x6240;&#x6709;&#x7684;&#x6709;&#x89D2;&#x7684;&#x56FE;&#x5F62;&#x540E;&#xFF0C;&#x53EA;&#x5269;&#x4E0B;&#x5706;&#x5F62;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x7C97;&#x7565;&#x628A;&#x5176;&#x4ED6;&#x60C5;&#x51B5;&#x89C6;&#x4E3A;&#x5706;&#x5F62;&#x3002;<br><b>ps:&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x4E0D;&#x65AD;&#x8F6C;&#x6362;MatOfPoint2f&#x548C;MatOfPoint</b><br>&#x81F3;&#x6B64;&#xFF0C;&#x5F62;&#x72B6;&#x68C0;&#x6D4B;&#x7684;&#x51FD;&#x6570;&#x5B8C;&#x6210;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x5C31;&#x662F;&#x50CF;&#x4E4B;&#x524D;&#x4E00;&#x6837;&#xFF0C;&#x5BFB;&#x627E;&#x5404;&#x4E2A;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;&#x3002;&#x7531;&#x4E8E;&#x4E4B;&#x524D;&#x5DF2;&#x7ECF;&#x89E3;&#x91CA;&#x8FC7;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x518D;&#x89E3;&#x91CA;&#x4E0B;&#x9762;&#x5404;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x7528;&#x6CD5;&#x3002;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x8BFB;&#x5165;&#x56FE;&#x7247;</span></span><br><span class="line">Bitmap srcBitmap;</span><br><span class="line">srcBitmap = BitmapFactory.decodeResource(getResources(), id);</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5EFA;&#x7ACB;&#x51E0;&#x4E2A;Mat&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;</span></span><br><span class="line">Mat rgbMat = <span class="keyword">new</span> Mat();</span><br><span class="line">Mat grayMat = <span class="keyword">new</span> Mat();</span><br><span class="line">Mat blur1 = <span class="keyword">new</span> Mat();</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5C06;&#x539F;&#x59CB;&#x7684;bitmap&#x8F6C;&#x6362;&#x4E3A;mat&#x578B;.</span></span><br><span class="line">Utils.bitmapToMat(srcBitmap, rgbMat);</span><br><span class="line"><span class="comment">//&#x5C06;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x4E3A;&#x7070;&#x5EA6;</span></span><br><span class="line">Imgproc.cvtColor(rgbMat, grayMat, Imgproc.COLOR_BGR2GRAY);</span><br><span class="line"><span class="comment">//&#x4EE5;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x7CCA;&#x534A;&#x5F84;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x6A21;&#x7CCA;&#x5904;&#x7406;,&#x524D;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x662F;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x5E94;&#x7528;&#x6EE4;&#x6CE2;&#x5668;&#x65F6;&#x6240;&#x7528;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x6807;&#x51C6;&#x5DEE;&#x6570;&#x503C;</span></span><br><span class="line">Imgproc.GaussianBlur(grayMat, blur1, <span class="keyword">new</span> Size(<span class="number">5</span>, <span class="number">5</span>), <span class="number">0</span>);</span><br><span class="line"><span class="comment">//&#x56FE;&#x7247;&#x4E8C;&#x503C;&#x5316;</span></span><br><span class="line">Imgproc.threshold(blur1, blur1, <span class="number">60</span>, <span class="number">255</span>, Imgproc.THRESH_BINARY);</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5BFB;&#x627E;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;</span></span><br><span class="line">List&lt;MatOfPoint&gt; contours = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">Mat hierarchy = <span class="keyword">new</span> Mat();</span><br><span class="line">Imgproc.findContours(blur1, contours, hierarchy, Imgproc.RETR_EXTERNAL, Imgproc.CHAIN_APPROX_SIMPLE);</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5F53;&#x627E;&#x5230;&#x8F6E;&#x5ED3;&#x540E;&#xFF0C;&#x5C31;&#x8981;&#x5F00;&#x59CB;&#x753B;&#x8F6E;&#x5ED3;&#x5E76;&#x6807;&#x8BB0;&#x6240;&#x5C5E;&#x5F62;&#x72B6;&#x3002;&#x6807;&#x8BB0;&#x662F;&#x628A;&#x4E4B;&#x524D;&#x7684;&#x6587;&#x5B57;center&#x53D8;&#x6210;&#x4E86;&#x5F62;&#x72B6;&#x7684;&#x540D;&#x79F0;&#x3002;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x52A0;&#x8F7D;&#x5F62;&#x72B6;&#x68C0;&#x6D4B;&#x7684;&#x7C7B;</span></span><br><span class="line">ShapeDetector sd = <span class="keyword">new</span> ShapeDetector();</span><br><span class="line"><span class="keyword">for</span> (MatOfPoint c : contours) {</span><br><span class="line">    <span class="comment">//&#x8BA1;&#x7B97;&#x8F6E;&#x5ED3;&#x7684;&#x4E2D;&#x5FC3;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x4E2D;&#x5FC3;&#x786E;&#x5B9A;&#x5F62;&#x72B6;</span></span><br><span class="line">    Moments m = Imgproc.moments(c);</span><br><span class="line">    <span class="keyword">int</span> cx = (<span class="keyword">int</span>) (m.m10 / m.m00 );</span><br><span class="line">    <span class="keyword">int</span> cy = (<span class="keyword">int</span>) (m.m01 / m.m00 );</span><br><span class="line">    String shape = sd.detect(<span class="keyword">new</span> MatOfPoint2f(c.toArray()));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x753B;&#x8F6E;&#x5ED3;</span></span><br><span class="line">    Imgproc.drawContours(rgbMat, contours, -<span class="number">1</span>, <span class="keyword">new</span> Scalar(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>);</span><br><span class="line">    <span class="comment">//&#x5728;&#x4E2D;&#x5FC3;&#x663E;&#x793A;&#x6587;&#x5B57;</span></span><br><span class="line">    Imgproc.putText(rgbMat, shape, <span class="keyword">new</span> Point(cx , cy ), Core.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, <span class="keyword">new</span> Scalar(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">2</span>);</span><br><span class="line">    <span class="comment">//&#x5C06;Mat&#x8F6C;&#x6362;&#x4E3A;&#x4F4D;&#x56FE;</span></span><br><span class="line">    Bitmap grayBitmap= Bitmap.createBitmap(srcBitmap.getWidth(), srcBitmap.getHeight(), Bitmap.Config.RGB_565);</span><br><span class="line">    Utils.matToBitmap(rgbMat, grayBitmap);</span><br><span class="line">    img.setImageBitmap(grayBitmap);</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x6548;&#x679C;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="3.jpg" alt="&#x6548;&#x679C;&#x56FE;" title="">                </div>                <div class="image-caption">&#x6548;&#x679C;&#x56FE;</div>            </figure><br>&#x6700;&#x540E;&#x518D;&#x6B21;&#x9644;&#x4E0A;Adrian&#x7684;&#x6559;&#x7A0B;&#xFF1A;<a></a><a href="https://www.pyimagesearch.com/2016/02/08/opencv-shape-detection/" target="_blank" rel="noopener">https://www.pyimagesearch.com/2016/02/08/opencv-shape-detection/</a><p></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在上一篇文章中，写出了如何画出形状的轮廓。而这一次，则在上一次的基础上，通过对轮廓的特征来判断图形是什么形状。&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://secretlin.github.io/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>利用Android+OpenCV来绘制图形轮廓中心</title>
    <link href="https://secretlin.github.io/blog//posts/c76e505d/"/>
    <id>https://secretlin.github.io/blog//posts/c76e505d/</id>
    <published>2018-07-20T12:05:28.040Z</published>
    <updated>2018-07-20T08:47:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x5728;&#x4E4B;&#x524D;&#x7684;&#x6587;&#x7AE0;&#x5DF2;&#x7ECF;&#x63D0;&#x5230;&#x5982;&#x4F55;&#x5728;android&#x4E2D;&#x8FD0;&#x7528;OpenCV&#xFF0C;&#x8FD9;&#x6B21;&#x5C31;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;&#x5728;&#x4E00;&#x4E2A;&#x5916;&#x56FD;&#x535A;&#x4E3B;&#x770B;&#x5230;&#x7684;&#x51E0;&#x7BC7;OpenCV+Python&#x7684;&#x535A;&#x5BA2;&#x540E;&#xFF0C;&#x81EA;&#x5DF1;&#x518D;&#x7528;android&#x5199;&#x4E0B;&#x6765;&#x7684;&#x51E0;&#x4E2A;&#x5C0F;&#x6848;&#x4F8B;&#x3002;<br>&#x8FD9;&#x6B21;&#x8BB0;&#x5F55;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x4F55;&#x628A;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;&#x4E2D;&#x5FC3;&#x63CF;&#x7ED8;&#x51FA;&#x6765;&#x3002;<br><a id="more"></a><br>&#x4EE5;&#x4E0B;&#x56FE;&#x7247;&#x662F;&#x6B64;&#x6B21;&#x4F7F;&#x7528;&#x7684;&#x56FE;&#x7247;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="shapes_and_colors.png" alt="shapes_and_colors" title="">                </div>                <div class="image-caption">shapes_and_colors</div>            </figure><p></p><p>&#x4ECE;&#x6B64;&#x56FE;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x5F20;&#x6709;&#x591A;&#x4E2A;&#x4E0D;&#x540C;&#x5F62;&#x72B6;&#x7684;&#x56FE;&#xFF0C;&#x6B64;&#x6B21;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x662F;&#x628A;&#x56FE;&#x7247;&#x4E2D;&#x5404;&#x4E2A;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;&#x753B;&#x51FA;&#x6765;&#xFF0C;&#x5E76;&#x6807;&#x6CE8;&#x51FA;&#x5F62;&#x72B6;&#x7684;&#x4E2D;&#x5FC3;&#x3002;&#x800C;&#x8981;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x76EE;&#x6807;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5148;&#x505A;:<br>-&#x5C06;&#x56FE;&#x7247;&#x7070;&#x5EA6;&#x5316;<br>-&#x5C06;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x6A21;&#x7CCA;&#x964D;&#x566A;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x5F97;&#x8F6E;&#x5ED3;&#x7684;&#x63CF;&#x7ED8;&#x66F4;&#x52A0;&#x51C6;&#x786E;<br>-&#x5C06;&#x56FE;&#x7247;&#x4E8C;&#x503C;&#x5316;&#x3002;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x7528;&#x4E8E;&#x56FE;&#x7247;&#x4E8C;&#x503C;&#x5316;&#x7684;&#x662F;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x548C;&#x9608;&#x503C;&#x5904;&#x7406;&#xFF0C;&#x5728;&#x6B64;&#x6B21;&#x5C0F;&#x9879;&#x76EE;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x9608;&#x503C;&#x5904;&#x7406;</p><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x5148;&#x8BFB;&#x53D6;&#x56FE;&#x7247;&#xFF0C;&#x518D;&#x5BF9;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x5904;&#x7406;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x8BFB;&#x5165;&#x56FE;&#x7247;</span></span><br><span class="line">Bitmap srcBitmap;</span><br><span class="line">srcBitmap = BitmapFactory.decodeResource(getResources(), id);</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5EFA;&#x7ACB;&#x51E0;&#x4E2A;Mat&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;</span></span><br><span class="line">Mat rgbMat = <span class="keyword">new</span> Mat();</span><br><span class="line">Mat grayMat = <span class="keyword">new</span> Mat();</span><br><span class="line">Mat blur1 = <span class="keyword">new</span> Mat();</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x5C06;&#x539F;&#x59CB;&#x7684;bitmap&#x8F6C;&#x6362;&#x4E3A;mat&#x578B;.</span></span><br><span class="line">Utils.bitmapToMat(srcBitmap, rgbMat);</span><br><span class="line"><span class="comment">//&#x5C06;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x4E3A;&#x7070;&#x5EA6;</span></span><br><span class="line">Imgproc.cvtColor(rgbMat, grayMat, Imgproc.COLOR_BGR2GRAY);</span><br><span class="line"><span class="comment">//&#x4EE5;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x7CCA;&#x534A;&#x5F84;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x6A21;&#x7CCA;&#x5904;&#x7406;,&#x524D;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x662F;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x5E94;&#x7528;&#x6EE4;&#x6CE2;&#x5668;&#x65F6;&#x6240;&#x7528;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x6807;&#x51C6;&#x5DEE;&#x6570;&#x503C;</span></span><br><span class="line">Imgproc.GaussianBlur(grayMat, blur1, <span class="keyword">new</span> Size(<span class="number">5</span>, <span class="number">5</span>), <span class="number">0</span>);</span><br><span class="line"><span class="comment">//&#x56FE;&#x7247;&#x4E8C;&#x503C;&#x5316;</span></span><br><span class="line">Imgproc.threshold(blur1, blur1, <span class="number">60</span>, <span class="number">255</span>, Imgproc.THRESH_BINARY);</span><br><span class="line"><span class="comment">//&#x5C06;&#x5904;&#x7406;&#x540E;&#x7684;&#x56FE;&#x7247;&#x663E;&#x793A;&#x51FA;&#x6765;</span></span><br><span class="line">Bitmap grayBitmap;</span><br><span class="line">grayBitmap = Bitmap.createBitmap(srcBitmap.getWidth(), srcBitmap.getHeight(), Bitmap.Config.RGB_565);</span><br><span class="line">Utils.matToBitmap(blur1, grayBitmap);</span><br><span class="line">img.setImageBitmap(grayBitmap);</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x4EE3;&#x7801;1-2&#x884C;&#x4E3B;&#x8981;&#x662F;&#x901A;&#x8FC7;Bitmap&#x8BFB;&#x5165;&#x56FE;&#x7247;&#xFF0C;&#x6211;&#x662F;&#x628A;&#x56FE;&#x7247;&#x653E;&#x5728;&#x9879;&#x76EE;&#x7684;mipmap&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x6765;&#x76F4;&#x63A5;&#x8BFB;&#x53D6;&#x3002;<br>&#x4EE3;&#x7801;6-11&#x662F;&#x5229;&#x7528;mat&#x7C7B;&#x6765;&#x5B58;&#x50A8;&#x56FE;&#x7247;&#x4FE1;&#x606F;&#xFF0C;&#x5728;OpenCV&#x4E2D;&#xFF0C;&#x662F;&#x901A;&#x8FC7;mat&#x7C7B;&#x6765;&#x64CD;&#x4F5C;&#x56FE;&#x7247;&#x5185;&#x5BB9;&#x3002;&#x57FA;&#x672C;&#x4E0A;&#x8BB2; Mat &#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#xFF0C;&#x7531;&#x4E24;&#x4E2A;&#x6570;&#x636E;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#xFF1A;&#x77E9;&#x9635;&#x5934;&#xFF08;&#x5305;&#x542B;&#x77E9;&#x9635;&#x5C3A;&#x5BF8;&#xFF0C;&#x5B58;&#x50A8;&#x65B9;&#x6CD5;&#xFF0C;&#x5B58;&#x50A8;&#x5730;&#x5740;&#x7B49;&#x4FE1;&#x606F;&#xFF09;&#x548C;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x5B58;&#x50A8;&#x6240;&#x6709;&#x50CF;&#x7D20;&#x503C;&#x7684;&#x77E9;&#x9635;&#xFF08;&#x6839;&#x636E;&#x6240;&#x9009;&#x5B58;&#x50A8;&#x65B9;&#x6CD5;&#x7684;&#x4E0D;&#x540C;&#x77E9;&#x9635;&#x53EF;&#x4EE5;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x7EF4;&#x6570;&#xFF09;&#x7684;&#x6307;&#x9488;&#x3002;&#xFF08;&#x53C2;&#x8003;&#x81EA;&#x5B98;&#x7F51;&#x7684;&#x89E3;&#x91CA;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x7684;&#x53EF;&#x4EE5;&#x53BB;&#x5B98;&#x7F51;&#x770B;&#x4E0B;&#x3002;&#xFF09;&#x5728;OpenCV&#x4E2D;&#x7684;Utils&#x7C7B;&#x5C31;&#x6709;&#x4E00;&#x4E2A;&#x73B0;&#x6210;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x5C06;bitmap&#x8F6C;&#x6362;&#x6210;mat&#x3002;<br>&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x51E0;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x5219;&#x662F;&#x5B8C;&#x6210;&#x4E0A;&#x9762;&#x6240;&#x8BF4;&#x7684;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#x3002;<br>&#x9996;&#x5148;&#x662F;&#x7070;&#x5EA6;&#x5316;&#x56FE;&#x7247;&#xFF0C;&#x5C06;&#x56FE;&#x7247;&#x7070;&#x5EA6;&#x5316;&#x4F1A;&#x5927;&#x5927;&#x51CF;&#x5C0F;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x8BA1;&#x7B97;&#x91CF;&#x3002;<br>&#x5176;&#x6B21;&#x5728;&#x5BF9;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x964D;&#x566A;&#x65F6;&#xFF0C;&#x662F;&#x91C7;&#x7528;&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x6765;&#x8FDB;&#x884C;&#x964D;&#x566A;&#x3002;<br>&#x6700;&#x540E;&#x662F;&#x4E8C;&#x503C;&#x5316;&#x56FE;&#x7247;&#xFF0C;&#x6240;&#x8C13;&#x56FE;&#x50CF;&#x7684;&#x4E8C;&#x503C;&#x5316;&#x5C31;&#x662F;&#x5C06;&#x56FE;&#x50CF;&#x4E0A;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x8BBE;&#x7F6E;&#x4E3A;0&#x6216;255&#xFF0C;&#x8FD9;&#x6837;&#x5C06;&#x4F7F;&#x6574;&#x4E2A;&#x56FE;&#x50CF;&#x5448;&#x73B0;&#x51FA;&#x660E;&#x663E;&#x7684;&#x9ED1;&#x767D;&#x6548;&#x679C;&#x3002;&#x5728;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7684;&#x4E09;&#x884C;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x503C;&#x662F;&#x6E90;mat&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x503C;&#x624D;&#x662F;&#x7ECF;&#x8FC7;&#x5904;&#x7406;&#x540E;&#x5F97;&#x5230;&#x7684;&#x76EE;&#x6807;mat&#x3002;<br>&#x5728;&#x7ECF;&#x8FC7;&#x4EE5;&#x4E0A;&#x5904;&#x7406;&#x540E;&#x7684;&#x56FE;&#x7247;&#x5448;&#x73B0;&#x4E00;&#x4E0B;&#x5F62;&#x72B6;&#xFF0C;&#x5219;&#x662F;&#x4EE5;&#x524D;&#x666F;&#x4E3A;&#x767D;&#x8272;&#xFF0C;&#x80CC;&#x666F;&#x4E3A;&#x9ED1;&#x8272;&#x7684;&#x56FE;&#x7247;&#x3002;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="gray.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p></p><p>ok&#xFF0C;&#x7EE7;&#x7EED;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x5BFB;&#x627E;&#x8FD9;&#x4E9B;&#x767D;&#x8272;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x5BFB;&#x627E;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;</span></span><br><span class="line">List&lt;MatOfPoint&gt; contours = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">Mat hierarchy = <span class="keyword">new</span> Mat();</span><br><span class="line">Imgproc.findContours(blur1, contours, hierarchy, Imgproc.RETR_EXTERNAL, Imgproc.CHAIN_APPROX_SIMPLE);</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x8FD9;&#x51E0;&#x884C;&#x4EE3;&#x7801;&#x662F;&#x627E;&#x51FA;&#x767D;&#x8272;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;&#xFF0C;&#x8FD9;&#x91CC;&#x5927;&#x6982;&#x8BB2;&#x89E3;&#x4E00;&#x4E0B;findContours&#x7684;&#x51E0;&#x4E2A;&#x53C2;&#x6570;&#xFF1A;</p><p><font color="#00868B">public static void findContours(Mat image, List contours, Mat hierarchy, int mode, int method)</font></p><p><font color="#7AC5CD">-Mat image</font>:&#x8981;&#x627E;&#x8F6E;&#x5ED3;&#x7684;&#x56FE;&#x50CF;&#xFF0C;&#x662F;Mat&#x7C7B;</p><p><font color="#7AC5CD">-List contours</font>&#xFF1A;&#x627E;&#x5230;&#x7684;&#x8F6E;&#x5ED3;&#x7684;&#x96C6;&#x5408;</p><p><font color="#7AC5CD">-Mat hierarchy</font>&#xFF1A;hierarchy&#x662F;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x5411;&#x91CF;&#x5185;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4FDD;&#x5B58;&#x4E86;&#x4E00;&#x4E2A;&#x5305;&#x542B;4&#x4E2A;int&#x6574;&#x578B;&#x7684;&#x6570;&#x7EC4;&#x3002;&#x5411;&#x91CF;hiararchy&#x5185;&#x7684;&#x5143;&#x7D20;&#x548C;&#x8F6E;&#x5ED3;&#x5411;&#x91CF;contours&#x5185;&#x7684;&#x5143;&#x7D20;&#x662F;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x5411;&#x91CF;&#x7684;&#x5BB9;&#x91CF;&#x76F8;&#x540C;&#x3002;hierarchy&#x5411;&#x91CF;&#x5185;&#x6BCF;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;4&#x4E2A;int&#x578B;&#x53D8;&#x91CF;&#x2014;&#x2014;hierarchy[i][0] ~hierarchy[i][3]&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x7B2C;i&#x4E2A;&#x8F6E;&#x5ED3;&#x7684;&#x540E;&#x4E00;&#x4E2A;&#x8F6E;&#x5ED3;&#x3001;&#x524D;&#x4E00;&#x4E2A;&#x8F6E;&#x5ED3;&#x3001;&#x7236;&#x8F6E;&#x5ED3;&#x3001;&#x5185;&#x5D4C;&#x8F6E;&#x5ED3;&#x7684;&#x7D22;&#x5F15;&#x7F16;&#x53F7;&#x3002;&#x82E5;&#x5E76;&#x65E0;&#x524D;&#x540E;&#x8F6E;&#x5ED3;&#x8FD9;&#x4E9B;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5176;&#x503C;&#x4E3A;-1.</p><p><font color="#7AC5CD">-int mode</font>&#xFF1A;&#x5B9A;&#x4E49;&#x8F6E;&#x5ED3;&#x7684;&#x68C0;&#x7D22;&#x6A21;&#x5F0F;:<br>&#x2460;&#xFF1A;RETR_EXTERNAL&#x53EA;&#x68C0;&#x6D4B;&#x6700;&#x5916;&#x56F4;&#x8F6E;&#x5ED3;&#xFF0C;&#x5305;&#x542B;&#x5728;&#x5916;&#x56F4;&#x8F6E;&#x5ED3;&#x5185;&#x7684;&#x5185;&#x56F4;&#x8F6E;&#x5ED3;&#x88AB;&#x5FFD;&#x7565;<br>&#x2461;&#xFF1A;RETR_LIST &#x68C0;&#x6D4B;&#x6240;&#x6709;&#x7684;&#x8F6E;&#x5ED3;&#xFF0C;&#x5305;&#x62EC;&#x5185;&#x56F4;&#x3001;&#x5916;&#x56F4;&#x8F6E;&#x5ED3;&#xFF0C;&#x4F46;&#x662F;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x8F6E;&#x5ED3;&#x4E0D;&#x5EFA;&#x7ACB;&#x7B49;&#x7EA7;&#x5173;&#x7CFB;&#xFF0C;&#x5F7C;&#x6B64;&#x4E4B;&#x95F4;&#x72EC;&#x7ACB;&#xFF0C;&#x6CA1;&#x6709;&#x7B49;&#x7EA7;&#x5173;&#x7CFB;&#xFF0C;&#x8FD9;&#x5C31;&#x610F;&#x5473;&#x7740;&#x8FD9;&#x4E2A;&#x68C0;&#x7D22;&#x6A21;&#x5F0F;&#x4E0B;&#x4E0D;&#x5B58;&#x5728;&#x7236;&#x8F6E;&#x5ED3;&#x6216;&#x5185;&#x5D4C;&#x8F6E;&#x5ED3;&#xFF0C;&#x6240;&#x4EE5;hierarchy&#x5411;&#x91CF;&#x5185;&#x6240;&#x6709;&#x5143;&#x7D20;&#x7684;&#x7B2C;3&#x3001;&#x7B2C;4&#x4E2A;&#x5206;&#x91CF;&#x90FD;&#x4F1A;&#x88AB;&#x7F6E;&#x4E3A;-1&#xFF0C;&#x5177;&#x4F53;&#x4E0B;&#x6587;&#x4F1A;&#x8BB2;&#x5230;<br>&#x2462;&#xFF1A;RETR_CCOMP &#x68C0;&#x6D4B;&#x6240;&#x6709;&#x7684;&#x8F6E;&#x5ED3;&#xFF0C;&#x4F46;&#x6240;&#x6709;&#x8F6E;&#x5ED3;&#x53EA;&#x5EFA;&#x7ACB;&#x4E24;&#x4E2A;&#x7B49;&#x7EA7;&#x5173;&#x7CFB;&#xFF0C;&#x5916;&#x56F4;&#x4E3A;&#x9876;&#x5C42;&#xFF0C;&#x82E5;&#x5916;&#x56F4;&#x5185;&#x7684;&#x5185;&#x56F4;&#x8F6E;&#x5ED3;&#x8FD8;&#x5305;&#x542B;&#x4E86;&#x5176;&#x4ED6;&#x7684;&#x8F6E;&#x5ED3;&#x4FE1;&#x606F;&#xFF0C;&#x5219;&#x5185;&#x56F4;&#x5185;&#x7684;&#x6240;&#x6709;&#x8F6E;&#x5ED3;&#x5747;&#x5F52;&#x5C5E;&#x4E8E;&#x9876;&#x5C42;<br>&#x2463;&#xFF1A;RETR_TREE&#xFF0C; &#x68C0;&#x6D4B;&#x6240;&#x6709;&#x8F6E;&#x5ED3;&#xFF0C;&#x6240;&#x6709;&#x8F6E;&#x5ED3;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x7B49;&#x7EA7;&#x6811;&#x7ED3;&#x6784;&#x3002;&#x5916;&#x5C42;&#x8F6E;&#x5ED3;&#x5305;&#x542B;&#x5185;&#x5C42;&#x8F6E;&#x5ED3;&#xFF0C;&#x5185;&#x5C42;&#x8F6E;&#x5ED3;&#x8FD8;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x5305;&#x542B;&#x5185;&#x5D4C;&#x8F6E;&#x5ED3;&#x3002;</p><p><font color="#7AC5CD">-int method</font>:&#x5B9A;&#x4E49;&#x8F6E;&#x5ED3;&#x7684;&#x8FD1;&#x4F3C;&#x65B9;&#x6CD5;&#xFF1A;<br>&#x2460;&#xFF1A;CHAIN_APPROX_NONE &#x4FDD;&#x5B58;&#x7269;&#x4F53;&#x8FB9;&#x754C;&#x4E0A;&#x6240;&#x6709;&#x8FDE;&#x7EED;&#x7684;&#x8F6E;&#x5ED3;&#x70B9;&#x5230;contours&#x5411;&#x91CF;&#x5185;<br>&#x2461;&#xFF1A;CHAIN_APPROX_SIMPLE &#x4EC5;&#x4FDD;&#x5B58;&#x8F6E;&#x5ED3;&#x7684;&#x62D0;&#x70B9;&#x4FE1;&#x606F;&#xFF0C;&#x628A;&#x6240;&#x6709;&#x8F6E;&#x5ED3;&#x62D0;&#x70B9;&#x5904;&#x7684;&#x70B9;&#x4FDD;&#x5B58;&#x5165;contours&#x5411;&#x91CF;&#x5185;&#xFF0C;&#x62D0;&#x70B9;&#x4E0E;&#x62D0;&#x70B9;&#x4E4B;&#x95F4;&#x76F4;&#x7EBF;&#x6BB5;&#x4E0A;&#x7684;&#x4FE1;&#x606F;&#x70B9;&#x4E0D;&#x4E88;&#x4FDD;&#x7559;<br>&#x2462;&#xFF1A;CHAIN_APPROX_TC89_L1&#xFF0C;CHAIN_APPROX_TC89_KCOS&#x4F7F;&#x7528;teh-Chinl chain &#x8FD1;&#x4F3C;&#x7B97;&#x6CD5;<br>&#x627E;&#x5230;&#x8F6E;&#x5ED3;&#x540E;&#xFF0C;&#x662F;&#x65F6;&#x5019;&#x628A;&#x5404;&#x4E2A;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;&#x7ED9;&#x753B;&#x51FA;&#x6765;&#x4E86;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;</span></span><br><span class="line"><span class="keyword">for</span> (MatOfPoint c : contours) {</span><br><span class="line">    <span class="comment">//&#x8BA1;&#x7B97;&#x8F6E;&#x5ED3;&#x7684;&#x4E2D;&#x5FC3;</span></span><br><span class="line">    Moments m = Imgproc.moments(c);</span><br><span class="line">    <span class="keyword">int</span> cx = (<span class="keyword">int</span>) (m.m10 / m.m00);</span><br><span class="line">    <span class="keyword">int</span> cy = (<span class="keyword">int</span>) (m.m01 / m.m00);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x753B;&#x8F6E;&#x5ED3;</span></span><br><span class="line">    Imgproc.drawContours(rgbMat, contours, -<span class="number">1</span>, <span class="keyword">new</span> Scalar(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>);</span><br><span class="line">    <span class="comment">//&#x753B;&#x4E2D;&#x5FC3;&#x7684;&#x5706;&#x70B9;</span></span><br><span class="line">    Imgproc.circle(rgbMat, <span class="keyword">new</span> Point(cx, cy), <span class="number">7</span>, <span class="keyword">new</span> Scalar(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), -<span class="number">1</span>);</span><br><span class="line">    <span class="comment">//&#x5728;&#x5706;&#x70B9;&#x65C1;&#x8FB9;&#x663E;&#x793A;&#x6587;&#x5B57;center</span></span><br><span class="line">    Imgproc.putText(rgbMat, <span class="string">&quot;center&quot;</span>, <span class="keyword">new</span> Point(cx - <span class="number">20</span>, cy - <span class="number">20</span>), Core.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, <span class="keyword">new</span> Scalar(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">2</span>);</span><br><span class="line">    <span class="comment">//&#x518D;&#x628A;mat&#x8F6C;&#x6362;&#x4E3A;bitmap&#x663E;&#x793A;&#x51FA;&#x6765;</span></span><br><span class="line">    Bitmap grayBitmap;</span><br><span class="line">    grayBitmap = Bitmap.createBitmap(srcBitmap.getWidth(), srcBitmap.getHeight(), Bitmap.Config.RGB_565);</span><br><span class="line">    Utils.matToBitmap(rgbMat, grayBitmap);</span><br><span class="line">    img.setImageBitmap(grayBitmap);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5176;&#x4E2D;&#xFF0C;moments&#x4E3A;&#x56FE;&#x5F62;&#x7684;&#x4E09;&#x9636;&#x77E9;&#xFF0C;&#x800C;&#x6B64;&#x65F6;&#x4E3A;&#x4E86;&#x8BA1;&#x7B97;&#x51FA;&#x8F6E;&#x5ED3;&#x7684;&#x4E2D;&#x5FC3;&#xFF0C;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x4EE5;&#x4E0B;&#x516C;&#x5F0F;&#xFF1A;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>&#x63A5;&#x4E0B;&#x6765;&#x89E3;&#x91CA;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x503C;&#xFF1A;<p></p><p><font color="#00868B">&#x2460;drawContours(Mat image, List contours, int contourIdx, Scalar color, int thickness)</font>&#x7684;&#x5404;&#x4E2A;&#x53C2;&#x6570;&#x89E3;&#x91CA;&#x5982;&#x4E0B;&#xFF1A;</p><p><font color="#7AC5CD">Mat image</font>&#xFF1A;&#x8868;&#x793A;&#x76EE;&#x6807;&#x56FE;&#x50CF;</p><p><font color="#7AC5CD">List contours</font>&#xFF1A;&#x8868;&#x793A;&#x8F93;&#x5165;&#x7684;&#x8F6E;&#x5ED3;&#x7EC4;</p><p><font color="#7AC5CD">int contourIdx</font>&#xFF1A;&#x6307;&#x660E;&#x753B;&#x7B2C;&#x51E0;&#x4E2A;&#x8F6E;&#x5ED3;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x53C2;&#x6570;&#x4E3A;&#x8D1F;&#x503C;&#xFF0C;&#x5219;&#x753B;&#x5168;&#x90E8;&#x8F6E;&#x5ED3;&#x3002;&#x4E0A;&#x9762;&#x5F15;&#x7528;&#x65F6;&#x586B;&#x4E86;-1&#xFF0C;&#x4EE3;&#x8868;&#x753B;&#x51FA;&#x5168;&#x90E8;&#x8F6E;&#x5ED3;&#x3002;</p><p><font color="#7AC5CD">Scalar color</font>&#xFF1A;&#x4E3A;&#x8F6E;&#x5ED3;&#x7684;&#x989C;&#x8272;&#xFF0C;Scalar&#x8868;&#x793A;&#x4E86;&#x5177;&#x6709;4&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x7528;&#x6765;&#x8868;&#x793A;RGB&#x989C;&#x8272;&#x503C;&#xFF08;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#xFF09;&#x3002;Scalar( a, b, c )&#x5219;&#x4EE3;&#x8868;&#x7684;RGB&#x989C;&#x8272;&#x503C;&#x4E3A;&#xFF1A;Red = c, Green = b and Blue= a</p><p><font color="#7AC5CD">int thickness</font>&#xFF1A;&#x4E3A;&#x8F6E;&#x5ED3;&#x7684;&#x7EBF;&#x5BBD;&#xFF0C;&#x5982;&#x679C;&#x4E3A;&#x8D1F;&#x503C;&#x6216;CV_FILLED&#x8868;&#x793A;&#x586B;&#x5145;&#x8F6E;&#x5ED3;&#x5185;&#x90E8;&#x3002;</p><p><font color="#00868B">&#x2461;public static void circle(Mat img, Point center, int radius, Scalar color, int thickness)</font>&#x53C2;&#x6570;&#x89E3;&#x91CA;&#xFF1A;</p><p><font color="#7AC5CD">Mat img</font>&#xFF1A;&#x4E3A;&#x6E90;&#x56FE;&#x50CF;</p><p><font color="#7AC5CD">Point center</font>&#xFF1A;&#x4E3A;&#x753B;&#x5706;&#x7684;&#x5706;&#x5FC3;&#x5750;&#x6807;</p><p><font color="#7AC5CD">int radius</font>&#xFF1A;&#x4E3A;&#x5706;&#x7684;&#x534A;&#x5F84;</p><p><font color="#7AC5CD">Scalar color</font>&#xFF1A;&#x4E3A;&#x8BBE;&#x5B9A;&#x5706;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x89C4;&#x5219;&#x6839;&#x636E;B&#xFF08;&#x84DD;&#xFF09;G&#xFF08;&#x7EFF;&#xFF09;R&#xFF08;&#x7EA2;&#xFF09;</p><p><font color="#7AC5CD">int thickness</font>&#xFF1A;&#x5982;&#x679C;&#x662F;&#x6B63;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x7EC4;&#x6210;&#x5706;&#x7684;&#x7EBF;&#x6761;&#x7684;&#x7C97;&#x7EC6;&#x7A0B;&#x5EA6;&#x3002;&#x5426;&#x5219;&#xFF0C;&#x8868;&#x793A;&#x5706;&#x662F;&#x5426;&#x88AB;&#x586B;&#x5145;&#x3002;</p><p><font color="#00868B">&#x2462;public static void putText(Mat img, String text, Point org, int fontFace, double fontScale, Scalar color, int thickness)</font>&#x53C2;&#x6570;&#x89E3;&#x91CA;&#xFF1A;</p><p><font color="#7AC5CD">Mat img</font>&#xFF1A;&#x9700;&#x8981;&#x5199;&#x5B57;&#x7684;&#x539F;&#x56FE;&#x50CF;</p><p><font color="#7AC5CD">String text</font>&#xFF1A;&#x9700;&#x8981;&#x5199;&#x7684;&#x5185;&#x5BB9;</p><p><font color="#7AC5CD">Point org</font>&#xFF1A;&#x9700;&#x8981;&#x5199;&#x7684;&#x5185;&#x5BB9;&#x7684;&#x5DE6;&#x4E0B;&#x89D2;&#x7684;&#x5750;&#x6807;</p><p><font color="#7AC5CD">int fontFace</font>:&#x5B57;&#x4F53;&#x6837;&#x5F0F;&#xFF0C;&#x5176;&#x53D6;&#x503C;&#x5982;&#x4E0B;&#xFF1A;<br>-FONT_HERSHEY_SIMPLEX &#x2013; &#x6B63;&#x5E38;&#x5927;&#x5C0F;&#x65E0;&#x886C;&#x7EBF;&#x5B57;&#x4F53;&#x3002;<br>-FONT_HERSHEY_PLAIN &#x2013; &#x5C0F;&#x53F7;&#x65E0;&#x886C;&#x7EBF;&#x5B57;&#x4F53;&#x3002;<br>-FONT_HERSHEY_DUPLEX &#x2013; &#x6B63;&#x5E38;&#x5927;&#x5C0F;&#x65E0;&#x886C;&#x7EBF;&#x5B57;&#x4F53;&#x3002;( &#x6BD4;CV_FONT_HERSHEY_SIMPLEX&#x66F4;&#x590D;&#x6742;)<br>-FONT_HERSHEY_COMPLEX &#x2013; &#x6B63;&#x5E38;&#x5927;&#x5C0F;&#x6709;&#x886C;&#x7EBF;&#x5B57;&#x4F53;&#x3002;<br>-FONT_HERSHEY_TRIPLEX &#x2013; &#x6B63;&#x5E38;&#x5927;&#x5C0F;&#x6709;&#x886C;&#x7EBF;&#x5B57;&#x4F53; ( &#x6BD4;CV_FONT_HERSHEY_COMPLEX&#x66F4;&#x590D;&#x6742;)<br>-FONT_HERSHEY_COMPLEX_SMALL &#x2013; CV_FONT_HERSHEY_COMPLEX &#x7684;&#x5C0F;&#x8BD1;&#x672C;&#x3002;<br>-FONT_HERSHEY_SCRIPT_SIMPLEX &#x2013; &#x624B;&#x5199;&#x98CE;&#x683C;&#x5B57;&#x4F53;&#x3002;<br>-FONT_HERSHEY_SCRIPT_COMPLEX &#x2013; &#x6BD4;CV_FONT_HERSHEY_SCRIPT_SIMPLEX&#x66F4;&#x590D;&#x6742;&#x3002;</p><p><font color="#7AC5CD">double fontScale</font>&#xFF1A;&#x5B57;&#x4F53;&#x5927;&#x5C0F;</p><p><font color="#7AC5CD">Scalar color</font>&#xFF1A;&#x989C;&#x8272;</p><p><font color="#7AC5CD">int thickness</font>&#xFF1A;&#x5B57;&#x4F53;&#x7684;&#x539A;&#x5EA6;</p><p>ok&#xFF0C;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x6548;&#x679C;&#xFF1A;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2.jpg" alt="&#x6700;&#x7EC8;&#x6548;&#x679C;&#x56FE;" title="">                </div>                <div class="image-caption">&#x6700;&#x7EC8;&#x6548;&#x679C;&#x56FE;</div>            </figure><br>&#x81F3;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5B9E;&#x73B0;&#x4E86;&#x60F3;&#x8981;&#x7684;&#x6548;&#x679C;&#x3002;<br>&#x672C;&#x6587;&#x6240;&#x63D0;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x77E5;&#x8BC6;&#x6709;&#x4E9B;&#x662F;&#x6458;&#x53D6;&#x4E86;&#x522B;&#x4EBA;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x5982;&#x82E5;&#x4F5C;&#x8005;&#x89C9;&#x5F97;&#x4FB5;&#x6743;&#xFF0C;&#x8BF7;&#x8054;&#x7CFB;&#x6211;&#xFF0C;&#x6211;&#x9A6C;&#x4E0A;&#x5220;&#x9664;&#x3002;<br>&#x672C;&#x4EBA;&#x4E5F;&#x662F;&#x521A;&#x63A5;&#x89E6;OpenCV,&#x8FD8;&#x662F;&#x6709;&#x4E00;&#x5806;&#x77E5;&#x8BC6;&#x662F;&#x4E0D;&#x61C2;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x54EA;&#x91CC;&#x8BB2;&#x9519;&#x6B22;&#x8FCE;&#x5927;&#x5BB6;&#x591A;&#x591A;&#x6307;&#x6559;&#x3002;<p></p><p>ps:&#x672C;&#x4EE3;&#x7801;&#x662F;&#x4EE5;&#x767D;&#x8272;&#x524D;&#x666F;&#xFF0C;&#x9ED1;&#x8272;&#x80CC;&#x666F;&#x4F5C;&#x4E3A;&#x8BBE;&#x60F3;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x989C;&#x8272;&#x80CC;&#x666F;&#x7684;&#x56FE;&#x7247;&#x9700;&#x505A;&#x4E00;&#x5B9A;&#x7684;&#x5904;&#x7406;&#x624D;&#x6709;&#x6548;&#x3002;<br>&#x6700;&#x540E;&#x9644;&#x4E0A;&#x6211;&#x770B;&#x7684;&#x6559;&#x7A0B;&#xFF1A;<a href="https://www.pyimagesearch.com/2016/02/01/opencv-center-of-contour/" target="_blank" rel="noopener">https://www.pyimagesearch.com/2016/02/01/opencv-center-of-contour/</a><br>&#x8BE5;&#x535A;&#x4E3B;&#x5199;&#x4E86;&#x5F88;&#x591A;&#x535A;&#x6587;&#xFF0C;&#x800C;&#x4E14;&#x95EE;&#x7684;&#x95EE;&#x9898;&#x535A;&#x4E3B;&#x4E5F;&#x4F1A;&#x7ED9;&#x4F60;&#x89E3;&#x7B54;&#xFF0C;&#x552F;&#x4E00;&#x7F3A;&#x70B9;&#x5C31;&#x662F;&#x5168;&#x82F1;2333&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x5C0F;&#x4F19;&#x4F34;&#x53EF;&#x4EE5;&#x53BB;&#x77A7;&#x77A7;&#x3002;</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在之前的文章已经提到如何在android中运用OpenCV，这次就记录一下在一个外国博主看到的几篇OpenCV+Python的博客后，自己再用android写下来的几个小案例。&lt;br&gt;这次记录的是，如何把形状的轮廓中心描绘出来。&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://secretlin.github.io/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>如何在Android中使用OpenCV</title>
    <link href="https://secretlin.github.io/blog//posts/55a035ad/"/>
    <id>https://secretlin.github.io/blog//posts/55a035ad/</id>
    <published>2018-07-19T10:14:51.793Z</published>
    <updated>2018-07-19T10:12:22.757Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6D45;&#x6790;ViewModel&#x3001;LiveData&#x3001;DataBinding&#x539F;&#x7406;<br><a id="more"></a><br>1.&#x5148;&#x5728;&#x5B98;&#x7F51;&#x4E2D;&#x4E0B;&#x8F7D;OpenCV&#x7684;android&#x5305;&#xFF1A;<a href="https://opencv.org/releases.html" target="_blank" rel="noopener">https://opencv.org/releases.html</a></p><p>2.&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;Android&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x7136;&#x540E;File -&gt; New -&gt; Import Module&#xFF0C;&#x9009;&#x62E9;&#x521A;&#x521A;&#x4E0B;&#x8F7D;&#x7684;OpenCV&#x4E2D;&#x7684;sdk&#x7684;java&#xFF0C;&#x5047;&#x8BBE;&#x547D;&#x540D;&#x4E3A;OpenCVLibrary&#xFF0C;&#x5BFC;&#x5165;&#x3002;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="step1.png" alt="step1" title="">                </div>                <div class="image-caption">step1</div>            </figure><p></p><p>3.&#x628A;&#x5BFC;&#x5165;&#x7684;OpenCV&#x7684;build.gradle&#x7684;sdk&#x73AF;&#x5883;&#x6539;&#x6210;&#x8DDF;&#x73B0;&#x5728;&#x9879;&#x76EE;&#x7684;&#x4E00;&#x6837;&#x3002;<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="step2.png" alt="step2" title="">                </div>                <div class="image-caption">step2</div>            </figure><p></p><p>4.&#x53F3;&#x952E;&#x70B9;&#x51FB;app&#xFF0C;&#x9009;&#x62E9;Open Module Settings&#xFF0C;&#x9009;&#x62E9;Dependences&#x7684;Module dependency<br></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="step3.png" alt="step3" title="">                </div>                <div class="image-caption">step3</div>            </figure><p></p><p>&#x7136;&#x540E;&#x9009;&#x62E9;OpenCVLibrary<br>5.&#x628A;&#x4E0B;&#x8F7D;&#x7684;OpenCV&#x4E2D;&#x7684;sdk/native/libs&#x4E2D;&#x7684;&#x4E1C;&#x897F;&#x5168;&#x90E8;&#x653E;&#x5165;app&#x7684;libs&#x4E2D;<br>&#x5927;&#x529F;&#x544A;&#x6210;&#xFF5E;&#x53EF;&#x4EE5;&#x9009;&#x62E9;OpenCV&#x4E2D;&#x7684;sample&#x8BD5;&#x4E00;&#x4E0B;&#x662F;&#x4E0D;&#x662F;&#x53EF;&#x4EE5;&#x7528;~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;浅析ViewModel、LiveData、DataBinding原理&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://secretlin.github.io/blog/tags/Android/"/>
    
      <category term="Jetpack" scheme="https://secretlin.github.io/blog/tags/Jetpack/"/>
    
  </entry>
  
  <entry>
    <title>快速幂：快速进行幂运算</title>
    <link href="https://secretlin.github.io/blog//posts/79d4ba37/"/>
    <id>https://secretlin.github.io/blog//posts/79d4ba37/</id>
    <published>2018-02-21T10:09:12.453Z</published>
    <updated>2018-02-09T12:35:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x4E4B;&#x6240;&#x4EE5;&#x77E5;&#x9053;&#x6709;&#x5FEB;&#x901F;&#x5E42;&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x4E4B;&#x524D;&#x5728;&#x505A;&#x9898;&#x7684;&#x65F6;&#x5019;&#x521A;&#x597D;&#x78B0;&#x5230;&#x7684;&#x5927;&#x6570;&#x7684;&#x5E42;&#x8FD0;&#x7B97;&#x3002;&#x7B97;&#x6CD5;&#x8BB2;&#x7A76;&#x7684;&#x662F;&#x7528;&#x5C3D;&#x91CF;&#x5C0F;&#x7684;&#x5185;&#x5B58;&#x548C;&#x5C3D;&#x91CF;&#x77ED;&#x7684;&#x65F6;&#x95F4;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x53EA;&#x7528;&#x5E73;&#x5E38;&#x7684;&#x65B9;&#x6CD5;&#x8BA1;&#x7B97;&#xFF0C;&#x52BF;&#x5FC5;&#x4F1A;&#x8D85;&#x5185;&#x5B58;&#x548C;&#x8D85;&#x65F6;&#x3002;<br><a id="more"></a><br>&#x5B66;&#x4E86;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x51B3;&#x5B9A;&#x5F00;&#x59CB;&#x5199;&#x535A;&#x5BA2;&#x8BB0;&#x4E0B;&#x6765;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x6DF1;&#x81EA;&#x5DF1;&#x5BF9;&#x8BE5;&#x7B97;&#x6CD5;&#x7684;&#x7406;&#x89E3;&#x3002;<br>&#x5728;&#x8BB2;&#x5FEB;&#x901F;&#x5E42;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x5F15;&#x5165;&#x5E42;&#x8FD0;&#x7B97;&#x7684;&#x4E00;&#x4E2A;&#x516C;&#x5F0F;&#xFF1A;</p><p><font color="#FA8072">&#x540C;&#x5E95;&#x6570;&#x5E42;&#x76F8;&#x4E58;&#xFF0C;&#x5E95;&#x6570;&#x4E0D;&#x53D8;&#xFF0C;&#x6307;&#x6570;&#x76F8;&#x52A0;&#x3002;</font><br>&#x8FD9;&#x662F;&#x9AD8;&#x4E2D;or&#x521D;&#x4E2D;&#x5C31;&#x77E5;&#x9053;&#x7684;&#x4E00;&#x6761;&#x516C;&#x5F0F;&#xFF0C;&#x5728;&#x5FEB;&#x901F;&#x5E42;&#x4E2D;&#xFF0C;a&#x7684;b&#x6B21;&#x65B9;&#x53EF;&#x4EE5;&#x770B;&#x6210;a&#x7684;x&#x6B21;&#x65B9;&#x4E0E;a&#x7684;(b-x)&#x6B21;&#x65B9;&#x76F8;&#x4E58;&#xFF0C;&#x8FDB;&#x4E00;&#x6B65;&#x53C8;&#x53EF;&#x4EE5;&#x5C06;b&#x62C6;&#x5206;&#x6210;&#x591A;&#x4E2A;&#x6570;&#x76F8;&#x52A0;&#x7136;&#x540E;&#x518D;&#x8BA1;&#x7B97;&#x3002;</p><p>&#x6B64;&#x65F6;&#xFF0C;&#x53C8;&#x8981;&#x5F15;&#x5165;&#x4E00;&#x4E2A;&#x77E5;&#x8BC6;&#x70B9;&#xFF1A;&#x4E8C;&#x8FDB;&#x5236;<br>b&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#x7531;0&#x548C;1&#x6784;&#x6210;&#x7684;&#xFF0C;&#x5373;b=0&#xFF08;&#x6216;&#x8005;1&#xFF09;<em> &#xFF08;2^i&#xFF09;+&#x2026;.&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;x&#x5C31;&#x662F;2&#x7684;i&#x6B21;&#x65B9;&#x4E0E;0&#x6216;1&#x76F8;&#x4E58;&#xFF0C;&#x6240;&#x4EE5;&#x8BA1;&#x7B97;&#x7684;&#x65F6;&#x5019;&#x662F;&#x8981;&#x5BF9;b&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x4E0A;&#x5168;&#x90E8;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x904D;&#x5386;&#x3002;&#x6839;&#x636E;0&#x4E0E;&#x4EFB;&#x4F55;&#x6570;&#x76F8;&#x4E58;&#x90FD;&#x4E3A;0&#xFF0C;&#x800C;&#x4E14;&#x4EFB;&#x4F55;&#x6570;&#x7684;0&#x6B21;&#x65B9;&#x90FD;&#x4E3A;1&#xFF0C;&#x5728;&#x7D2F;&#x4E58;&#x60C5;&#x51B5;&#x4E0B;&#x662F;&#x6CA1;&#x6709;&#x5F71;&#x54CD;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5F53;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x7684;&#x6570;&#x4E3A;0&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x53BB;&#x8BA1;&#x7B97;&#xFF0C;&#x53EA;&#x5173;&#x6CE8;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x4E0A;&#x7684;&#x6570;&#x4E3A;1&#x65F6;&#x5C31;&#x53EF;&#x4EE5;&#x3002;<br>&#x5373; a^b = a ^ ( (2^i) </em> 1 + &#x2026;.. )<br>= a ^ ( (2^i) <em> 1 ) </em> a ^ ( (2^i1) <em> 1 ) </em> &#x2026;&#x2026;<br>= a ^ (2^i) \ a ^ (2^i1) \ &#x2026;&#x2026;</p><p>&#x73B0;&#x5728;&#x6765;&#x89E3;&#x51B3;2^i&#x2026;<br>&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;5&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4E3A;101&#xFF0C;&#x5373;5 = 2^2<em>1+ 2^1</em>0 + 2^0<em>1&#x3002;&#x5728;&#x4E0D;&#x53BB;&#x6389;0&#x7684;&#x60C5;&#x51B5;&#x4E0B;,&#x5047;&#x8BBE;bi&#x4EE3;&#x8868;&#x7684;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x4E0A;&#x7684;1&#x6216;0&#xFF0C;<br>a^b = a^((2^0)</em>b0) <em> a^((2^1)</em>b1) <em> a^((2^2)</em>b2)&#x2026;..<br>&#x5206;&#x79BB;&#x51FA;&#x6BCF;&#x4E2A;&#x4E58;&#x6570;&#xFF0C;&#x8BBE;A0=a^((2^0)<em>b0)&#xFF0C;A1=a^((2^1)</em>b1)&#xFF0C;A2=a^((2^2)<em>b2)&#xFF0C;&#x5148;&#x4E0D;&#x770B;bi&#xFF0C;&#x5373;A0=a^(2^0),A1=a^(2^1),A2=a^(2^2),&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;A1&#x662F;A0&#x7684;&#x5E73;&#x65B9;&#x500D;&#xFF0C;A2&#x662F;A1&#x7684;&#x5E73;&#x65B9;&#x500D;&#x3002;<br>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728;&#x904D;&#x5386;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x7684;&#x5168;&#x90E8;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;a = a</em>a&#xFF0C;&#x9010;&#x6B65;&#x9012;&#x63A8;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x8003;&#x8651;2^i&#xFF0C;&#x53EA;&#x662F;&#x5728;&#x8BA1;&#x7B97;&#x65F6;&#x8003;&#x8651;bi&#x662F;0&#x8FD8;&#x662F;1&#xFF0C;&#x8981;&#x4E0D;&#x8981;&#x628A;&#x8FD9;&#x4E2A;&#x6570;&#x7B97;&#x8FDB;&#x603B;&#x5F97;&#x6570;&#x800C;&#x5DF2;&#x3002;</p><p>&#x6700;&#x540E;&#xFF0C;&#x518D;&#x5F15;&#x8FDB;&#x4E00;&#x6761;&#x516C;&#x5F0F;&#xFF1A;</p><p><font color="#FA8072"> (a<em>b)%c=(a%c)</em>(b%c)%c </font><br>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;%C&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x505A;&#x53EF;&#x4EE5;&#x51CF;&#x5C0F;a&#x7684;&#x6570;&#xFF0C;&#x53D6;&#x6700;&#x540E;&#x5927;&#x6570;&#x4E2D;&#x7684;&#x540E;&#x9762;&#x51E0;&#x4E2A;&#x6570;&#x6765;&#x8BA1;&#x7B97;&#xFF0C;&#x4E0D;&#x81F3;&#x4E8E;&#x6570;&#x5B57;&#x8FC7;&#x5927;&#x800C;&#x8D85;&#x65F6;&#x8D85;&#x5185;&#x5B58;&#xFF0C;&#x800C;&#x4E14;&#x4E5F;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x7ED3;&#x679C;&#x3002;</p><p>&#x7EFC;&#x4E0A;&#xFF0C;&#x5199;&#x6210;JAVA&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//&#x6C42;a^b&#xFF0C;c&#x7528;&#x6765;&#x7F29;&#x5C0F;&#x8303;&#x56F4;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">quick</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">1</span>;<span class="comment">//&#x8BB0;&#x5F55;&#x6700;&#x7EC8;&#x5F97;&#x6570;</span></span><br><span class="line">    a = a%c;<span class="comment">//&#x53EA;&#x9700;&#x8981;&#x6700;&#x540E;&#x51E0;&#x4F4D;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;</span></span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>){</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((b&amp;<span class="number">1</span>)==<span class="number">1</span>){</span><br><span class="line">            <span class="comment">//&#x8BE5;&#x6570;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4F4D;&#x4E3A;1&#x65F6;&#x624D;&#x8BA1;&#x7B97;</span></span><br><span class="line">            sum = (sum*a)%c;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        b &gt;&gt;=<span class="number">1</span> ;<span class="comment">//&#x4E3B;&#x8981;&#x662F;&#x904D;&#x5386;b&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x7684;&#x5168;&#x90E8;&#x6570;&#x5B57;&#xFF0C;&#x8FD9;&#x6837;&#x662F;&#x5F80;&#x524D;&#x4E00;&#x4E2A;</span></span><br><span class="line">        a = (a * a)%c;<span class="comment">//&#x56E0;&#x4E3A;&#x540E;&#x4E00;&#x4E2A;&#x4E58;&#x79EF;&#x662F;&#x524D;&#x4E00;&#x4E2A;&#x7684;&#x5E73;&#x65B9;&#x500D;&#x3002;</span></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5B66;&#x5B8C;&#x77E5;&#x8BC6;&#x5C31;&#x5F00;&#x59CB;&#x8FD0;&#x7528;&#x5566;<br>hdu:2035 &#x4EBA;&#x89C1;&#x4EBA;&#x7231;A^B:<a>&#x201D;</a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2035&#x201C;" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=2035&#x201C;</a></p><p>&#x9644;&#x4E0A;&#x6211;&#x7684;ac&#x4EE3;&#x7801;<br></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line"></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>){</span><br><span class="line">            <span class="keyword">int</span> a = scanner.nextInt();</span><br><span class="line">            <span class="keyword">int</span> b = scanner.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (a!=<span class="number">0</span> &amp;&amp; b!=<span class="number">0</span>){</span><br><span class="line">                System.out.println(quick(a,b,<span class="number">1000</span>));</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x6C42;a^b&#xFF0C;c&#x7528;&#x6765;&#x7F29;&#x5C0F;&#x8303;&#x56F4;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">quick</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">1</span>;<span class="comment">//&#x8BB0;&#x5F55;&#x6700;&#x7EC8;&#x5F97;&#x6570;</span></span><br><span class="line">        a = a%c;<span class="comment">//&#x53EA;&#x9700;&#x8981;&#x6700;&#x540E;&#x51E0;&#x4F4D;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;</span></span><br><span class="line">        <span class="keyword">while</span> (b&gt;<span class="number">0</span>){</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ((b&amp;<span class="number">1</span>)==<span class="number">1</span>){</span><br><span class="line">                <span class="comment">//&#x8BE5;&#x6570;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4F4D;&#x4E3A;1&#x65F6;&#x624D;&#x8BA1;&#x7B97;</span></span><br><span class="line">                sum = (sum*a)%c;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            b &gt;&gt;=<span class="number">1</span> ;<span class="comment">//&#x4E3B;&#x8981;&#x662F;&#x904D;&#x5386;b&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x7684;&#x5168;&#x90E8;&#x6570;&#x5B57;&#xFF0C;&#x8FD9;&#x6837;&#x662F;&#x5F80;&#x524D;&#x4E00;&#x4E2A;</span></span><br><span class="line">            a = (a * a)%c;<span class="comment">//&#x56E0;&#x4E3A;&#x540E;&#x4E00;&#x4E2A;&#x4E58;&#x79EF;&#x662F;&#x524D;&#x4E00;&#x4E2A;&#x7684;&#x5E73;&#x65B9;&#x500D;&#x3002;</span></span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x5728;&#x5B66;&#x5FEB;&#x901F;&#x5E42;&#x7684;&#x65F6;&#x5019;&#x770B;&#x4E86;&#x5F88;&#x591A;&#x535A;&#x5BA2;&#xFF0C;&#x5BF9;&#x6211;&#x5E2E;&#x52A9;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x662F;&#xFF1A;<a></a><a href="http://blog.csdn.net/ltyqljhwcm/article/details/53043646" target="_blank" rel="noopener">http://blog.csdn.net/ltyqljhwcm/article/details/53043646</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之所以知道有快速幂这个东西，是因为之前在做题的时候刚好碰到的大数的幂运算。算法讲究的是用尽量小的内存和尽量短的时间解决问题，所以如果只用平常的方法计算，势必会超内存和超时。&lt;br&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://secretlin.github.io/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>vue.js的修饰符</title>
    <link href="https://secretlin.github.io/blog//posts/ddf887c5/"/>
    <id>https://secretlin.github.io/blog//posts/ddf887c5/</id>
    <published>2018-02-21T10:06:30.905Z</published>
    <updated>2018-03-22T03:17:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>vue.js&#x7684;&#x51E0;&#x4E2A;&#x4FEE;&#x9970;&#x7B26;&#x7406;&#x89E3;<br><a id="more"></a><br>Vue.js &#x4E3A; v-on &#x63D0;&#x4F9B;&#x4E86;&#x4E8B;&#x4EF6;&#x4FEE;&#x9970;&#x7B26;&#xFF0C;&#x65B9;&#x4FBF;&#x5BF9;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x8FDB;&#x884C;&#x8FC7;&#x6EE4;&#x5904;&#x7406;<br>&#x4E8B;&#x4EF6;&#x4FEE;&#x9970;&#x7B26;&#x5982;&#x4E0B;&#xFF1A;</p><p><font color="#FF6347">.stop<br>.prevent<br>.capture<br>.self<br>.once</font><br>&#x4E0B;&#x9762;&#x9010;&#x4E2A;&#x89E3;&#x91CA;&#xFF0C;&#x5E76;&#x7ED9;&#x51FA;&#x4F8B;&#x5B50;</p><p><font color="#FF7F24">a. .stop</font><br>&#x77E5;&#x8BC6;&#x70B9;&#xFF1A;js&#x7684;&#x4E8B;&#x4EF6;&#x5192;&#x6CE1;&#xFF1A;&#x5373;&#x7236;&#x5143;&#x7D20;&#x8DDF;&#x5B50;&#x5143;&#x7D20;&#x8C03;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x5F53;&#x70B9;&#x51FB;&#x5B50;&#x5143;&#x7D20;&#x4F1A;&#x6267;&#x884C;&#x4E24;&#x6B21;&#xFF0C;&#x5148;&#x6267;&#x884C;&#x5B50;&#x5143;&#x7D20;&#x7684;&#x4E8B;&#x4EF6;&#xFF0C;&#x518D;&#x6267;&#x884C;&#x7236;&#x5143;&#x7D20;&#x7684;&#x4E8B;&#x4EF6;&#x3002;&#x5982;&#xFF1A;<br></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;doThis($event,&apos;parent&apos;)&quot;</span>&gt;</span></span><br><span class="line">    &#x70B9;&#x51FB;&#x7236;&#x5143;&#x7D20;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doThis($event,&apos;child&apos;)&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x5B50;&#x5143;&#x7D20;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">new Vue({</span><br><span class="line">    el: &apos;#app-1&apos;,</span><br><span class="line">    methods: {</span><br><span class="line">        doThis: function (e,msg) {</span><br><span class="line">             if(e){</span><br><span class="line">                 alert(msg)</span><br><span class="line">              }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p></p><p>&#x7ED3;&#x679C;&#xFF1A;<br>&#x5148;&#x5F39;&#x51FA;parent<br>&#x518D;&#x5F39;&#x51FA;child</p><p><b>&#x4F46;&#x662F;!!&#x5982;&#x679C;&#x662F;v-on:click.stop&#x7684;&#x8BDD;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x70B9;&#x51FB;&#x5B50;&#x5143;&#x7D20;&#x8FD8;&#x662F;&#x4F1A;&#x5148;&#x6267;&#x884C;&#x4E24;&#x6B21;&#xFF0C;&#x518D;&#x6B21;&#x70B9;&#x51FB;&#x65F6;&#x5C31;&#x53EA;&#x4F1A;&#x51FA;&#x73B0;&#x6267;&#x884C;&#x5B50;&#x5143;&#x7D20;&#x7684;&#x51FD;&#x6570;&#x4E86;</b></p><p><font color="#FF7F24">b. .capture</font></p><pre><code class="html"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;parent&quot;</span> @<span class="attr">click.capture</span>=<span class="string">&quot;doThis($event,&apos;hh&apos;)&quot;</span>&gt;</span>   &#x70B9;&#x51FB;&#x7236;&#x5143;&#x7D20;   <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doThis($event,&apos;child&apos;)&quot;</span> <span class="attr">id</span>=<span class="string">&quot;child&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x5B50;&#x5143;&#x7D20;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></code></pre><p>&#x77E5;&#x8BC6;&#x70B9;&#xFF1A;event.preventDefault()&#xFF1A;&#x963B;&#x6B62;&#x5143;&#x7D20;&#x53D1;&#x751F;&#x9ED8;&#x8BA4;&#x7684;&#x884C;&#x4E3A;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x70B9;&#x51FB;a&#x6807;&#x7B7E;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x8DF3;&#x8F6C;&#xFF09;&#x3002;<br>.pervent&#x7684;&#x4F5C;&#x7528;&#x8DDF;event.preventDefault()&#x4E00;&#x6837;&#x3002;</p><p><b>PS&#xFF1A;&#x82E5;&#x8981;&#x963B;&#x6B62;&#x4E8B;&#x4EF6;&#x5192;&#x6CE1;&#xFF0C;&#x5219;&#x5E94;&#x8BE5;&#x4FEE;&#x6539;&#x5B50;&#x5143;&#x7D20;&#x7684;click.stop<br>&#x82E5;&#x8981;&#x6267;&#x884C;&#x4E8B;&#x4EF6;&#x6355;&#x83B7;&#xFF0C;&#x5219;&#x5E94;&#x8BE5;&#x4FEE;&#x6539;&#x7236;&#x5143;&#x7D20;&#x7684;click.capture</b></p><p><font color="#FF7F24">c. .prevent</font><br>&#x77E5;&#x8BC6;&#x70B9;&#xFF1A;event.preventDefault()&#xFF1A;&#x963B;&#x6B62;&#x5143;&#x7D20;&#x53D1;&#x751F;&#x9ED8;&#x8BA4;&#x7684;&#x884C;&#x4E3A;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x70B9;&#x51FB;a&#x6807;&#x7B7E;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x8DF3;&#x8F6C;&#xFF09;&#x3002;<br>.pervent&#x7684;&#x4F5C;&#x7528;&#x8DDF;event.preventDefault()&#x4E00;&#x6837;&#x3002;<br><b>PS&#xFF1A;&#x5982;&#x679C;&#x53EA;&#x662F;&#x5355;&#x7EAF;&#x7684;a&#x6807;&#x7B7E;&#x963B;&#x6B62;&#x8DF3;&#x8F6C;&#x7684;&#x8BDD;&#xFF0C;&#x8BB0;&#x5F97;&#x8981;new Vue&#x624D;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;.prevent&#x7684;&#x4F5C;&#x7528;</b></p><p><font color="#FF7F24">d. .self</font><br>.self&#x4E0D;&#x4F1A;&#x6267;&#x884C;&#x4E0D;&#x662F;&#x672C;&#x8EAB;&#x8C03;&#x7528;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#x4E8B;&#x4EF6;&#x5192;&#x6CE1;&#x4F1A;&#x8C03;&#x7528;&#x5B50;&#x5143;&#x7D20;&#x548C;&#x7236;&#x5143;&#x7D20;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4F46;&#x5F53;&#x7236;&#x5143;&#x7D20;&#x4F7F;&#x7528;&#x4E86;.self&#xFF0C;&#x5219;&#x70B9;&#x51FB;&#x5B50;&#x5143;&#x7D20;&#x65F6;&#x53EA;&#x4F1A;&#x8C03;&#x7528;&#x5B50;&#x5143;&#x7D20;&#x7684;&#x51FD;&#x6570;&#xFF1B;</p><p><font color="#FF7F24">e. .once</font><br>.once&#x5982;&#x5176;&#x540D;&#xFF0C;&#x53EA;&#x4F1A;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x800C;&#x5DF2;&#x3002;</p><p>&#x6309;&#x952E;&#x4FEE;&#x9970;&#x7B26;&#xFF1A;<br>&#x4F7F;&#x7528;@keyup.xx&#x6765;&#x8C03;&#x7528;&#x6309;&#x952E;&#x4E8B;&#x4EF6;&#xFF0C;&#x5E38;&#x89C1;&#x6309;&#x952E;&#x540D;&#x5982;&#x4E0B;&#xFF1A;</p><p><font color="#FF6347">.enter<br>.tab<br>.delete (&#x6355;&#x83B7;&#x201C;&#x5220;&#x9664;&#x201D;&#x548C;&#x201C;&#x9000;&#x683C;&#x201D;&#x952E;)<br>.esc<br>.spacecamelCase<br>.up<br>.down<br>.left<br>.right</font><br>&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;&#x4FEE;&#x9970;&#x7B26;&#x7684;&#x8BDD;&#xFF0C;&#x53D6;&#x540D;&#x5B57;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;camelCase&#x8FD9;&#x79CD;&#x5927;&#x5C0F;&#x5199;&#x5F62;&#x5F0F;&#xFF0C;&#x53EA;&#x80FD;&#x4F7F;&#x7528;kebab-case &#x4E14;&#x7528;&#x53CC;&#x5F15;&#x53F7;&#x62EC;&#x8D77;&#x6765;&#x3002;&#x5982;&#x679C;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;Vue.config.keyCodes.ent = 13&#x6765;&#x5B9A;&#x4E49;&#xFF0C;&#x5982;&#x679C;&#x540D;&#x5B57;&#x662F;&#x591A;&#x4E2A;&#x5355;&#x8BCD;&#x7EC4;&#x5408;&#xFF0C;&#x5219;&#x8981;&#x7528;&#xFF1A;</p><pre><code class="html">Vue.config.keyCodes = {&#x201C;media-play-pause&#x201D;: 179}</code></pre><p>//2.5.0 &#x65B0;&#x589E;<br>&#x53EF;&#x76F4;&#x63A5;&#x5C06; KeyboardEvent.key &#x66B4;&#x9732;&#x7684;&#x4EFB;&#x610F;&#x6709;&#x6548;&#x6309;&#x952E;&#x540D;&#x8F6C;&#x6362;&#x4E3A; kebab-case &#x6765;&#x4F5C;&#x4E3A;&#x4FEE;&#x9970;&#x7B26;&#xFF0C;&#x6BD4;&#x5982;CapsLock&#x952E;&#xFF1A;</p><pre><code class="html"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;20px&quot;</span></span><span class="tag">            @<span class="attr">keyup.caps-lock</span>=<span class="string">&quot;sendMsg(&apos;2333&apos;)&quot;</span>&gt;</span></code></pre><p>&#x5173;&#x4E8E;&#x5176;&#x4ED6;KeyValue&#x503C;&#x53EF;&#x770B;&#xFF1A;<a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values</a></p><p>&#x5176;&#x4ED6;&#x4FEE;&#x9970;&#x7B26;&#x53EF;&#x53C2;&#x8003;&#x5B98;&#x7F51;&#xFF1A;<a href="https://cn.vuejs.org/v2/guide/events.html#&#x4E8B;&#x4EF6;&#x4FEE;&#x9970;&#x7B26;" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/events.html#&#x4E8B;&#x4EF6;&#x4FEE;&#x9970;&#x7B26;</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vue.js的几个修饰符理解&lt;br&gt;
    
    </summary>
    
    
      <category term="前端" scheme="https://secretlin.github.io/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
