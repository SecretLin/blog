[{"title":"KMP算法","date":"2019-06-26T12:15:12.908Z","path":"/posts/2da0528d/","text":"&#x770B;&#x4E86;&#x597D;&#x4E45;&#x7684;kmp&#x7B97;&#x6CD5;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x61C2;&#x4E86;&#xFF0C;&#x611F;&#x52A8;&#x3002;&#x8BB2;&#x5230;&#x5B57;&#x7B26;&#x4E32;&#x5339;&#x914D;&#xFF0C;&#x6700;&#x50BB;&#x74DC;&#x7684;&#x505A;&#x6CD5;&#x5C31;&#x662F;&#x66B4;&#x529B;&#x7834;&#x89E3;&#x3002;&#x5927;&#x795E;&#x4EEC;&#x81EA;&#x7136;&#x662F;&#x4E0D;&#x5C51;&#x4E8E;&#x8FD9;&#x79CD;&#x505A;&#x6CD5;&#xFF0C;&#x4E8E;&#x662F;&#x521B;&#x9020;&#x51FA;&#x4E00;&#x4E2A;&#x53EB;&#x505A;KMP&#x7B97;&#x6CD5;&#x6765;&#x7B80;&#x5316;&#x539F;&#x672C;&#x7684;&#x66B4;&#x529B;&#x65B9;&#x6CD5;&#x3002;&#x5148;&#x9644;&#x4E0A;&#x4E24;&#x4E2A;&#x535A;&#x4E3B;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x6211;&#x662F;&#x770B;&#x4E86;&#x8FD9;&#x4E2A;&#x4E4B;&#x540E;&#x624D;&#x660E;&#x767D;next&#x6570;&#x7EC4;&#x662F;&#x5E72;&#x561B;&#x7684;&#xFF1A;https://blog.csdn.net/qq_37568658/article/details/79313639http://jakeboxer.com/blog/2009/12/13/the-knuth-morris-pratt-algorithm-in-my-own-words/1.&#x9996;&#x5148;&#x8981;&#x4E86;&#x89E3;&#x4E00;&#x4E2A;&#x4E1C;&#x897F;&#xFF1A;&#x524D;&#x7F00;&#x3001;&#x540E;&#x7F00;&#x3001;PMT&#xFF08; Partial Match Table &#x90E8;&#x5206;&#x5339;&#x914D;&#x8868;&#xFF0C;&#x5373;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x6700;&#x957F;&#x7684;&#x76F8;&#x540C;&#x7684;&#x524D;&#x540E;&#x7F00;&#x957F;&#x5EA6;&#xFF09;&#x524D;&#x7F00;&#xFF1A;&#x4ECE;&#x7B2C;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x5230;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x4E2A;&#x4F4D;&#x7F6E;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x6309;&#x987A;&#x5E8F;&#x7EC4;&#x5408;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x540E;&#x7F00;&#xFF1A;&#x4ECE;&#x7B2C;&#x4E8C;&#x4E2A;&#x4F4D;&#x7F6E;&#x5230;&#x5012;&#x6570;&#x7B2C;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x6309;&#x987A;&#x5E8F;&#x7EC4;&#x5408;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x6BD4;&#x5982;&#x6709;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;ABCDAB&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&#x4E3A;6&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x7684;index&#x4E3A;0-5&#x5373; &#x524D;&#x7F00;&#x8DDF;&#x540E;&#x7F00;&#x4F1A;&#x8DDF;&#x7740;&#x4F60;&#x5173;&#x6CE8;&#x7684;&#x5B57;&#x7B26;&#x957F;&#x5EA6;&#x800C;&#x6539;&#x53D8;&#x6BD4;&#x5982;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5173;&#x6CE8;&#x7684;&#x662F;0-4&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x6B64;&#x65F6;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x662F;ABCDA&#xFF0C;&#x5B83;&#x7684;&#x524D;&#x7F00;&#x662F;{A&#xFF0C;AB&#xFF0C;ABC&#xFF0C;ABCD}&#xFF0C;&#x540E;&#x7F00;&#x662F;{BCDA&#xFF0C;CDA&#xFF0C;DA&#xFF0C;A}&#xFF0C;&#x6B64;&#x65F6;&#x5728;&#x8FD9;&#x4E24;&#x4E2A;&#x96C6;&#x5408;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x627E;&#x5230;&#x5B83;&#x4EEC;&#x7684;&#x5171;&#x540C;&#x5B57;&#x7B26;&#x4E32;&#x201D;A&#x201D;&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x65F6;ABCDA&#x7684;PMT&#x4E3A;1&#x3002;&#x53C8;ABCDAB&#x7684;&#x524D;&#x7F00;{A&#xFF0C;AB&#xFF0C;ABC&#xFF0C;ABCD&#xFF0C;ABCDA}&#xFF0C;&#x540E;&#x7F00;{BCDAB&#xFF0C;CDAB&#xFF0C;DAB&#xFF0C;AB&#xFF0C;B}&#xFF0C;&#x5171;&#x540C;&#x5B57;&#x7B26;&#x4E32;&#x4E3A;&#x201D;AB&#x201D;&#xFF0C;&#x6B64;&#x65F6;PMT&#x4E3A;2 PS&#xFF1A;&#x6CE8;&#x610F;&#x524D;&#x7F00;&#x96C6;&#x5408;&#x662F;&#x4ECE;&#x7B2C;&#x4E00;&#x4E2A;&#x5F00;&#x59CB;&#xFF0C;&#x7136;&#x540E;&#x6162;&#x6162;&#x6DFB;&#x52A0;&#x540E;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x7EC4;&#x5408;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x540E;&#x7F00;&#x662F;&#x4ECE;&#x7B2C;&#x4E8C;&#x4E2A;&#x5230;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x7EC4;&#x5408;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x518D;&#x6162;&#x6162;&#x51CF;&#x6389;&#x524D;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x3002;&#x7814;&#x7A76;PMT&#x6709;&#x4EC0;&#x4E48;&#x610F;&#x4E49;&#x5462;&#xFF1F;&#x8FD8;&#x8BB0;&#x5F97;&#x5982;&#x679C;&#x662F;&#x66B4;&#x529B;&#x7834;&#x89E3;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x4EEC;&#x6BCF;&#x6B21;&#x6BD4;&#x8F83;&#x90FD;&#x662F;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x540E;&#x79FB;&#x6765;&#x6BD4;&#x8F83;&#xFF0C;&#x5982;&#x4E0B;&#x56FE; &#x4ECE;&#x5934;&#x5F00;&#x59CB;&#x6BD4;&#x8F83;&#x65F6;&#xFF0C;&#x53D1;&#x73B0;ptr&#x4E32;&#x4E2D;&#x7684;&#x2019;E&#x2019;&#x8DDF;&#x4E3B;&#x4E32;&#x4E2D;&#x7684;&#x2019;F&#x2019;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x6309;&#x7167;&#x4EE5;&#x5F80;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x628A;&#x6A21;&#x5F0F;&#x4E32;&#x5F80;&#x540E;&#x632A;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x5373;&#x8BA9;ptr&#x4ECE;str[1]&#x5F00;&#x59CB;&#x6BD4;&#x8F83;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x6B64;&#x65F6;&#x662F;&#x6BD4;&#x8F83;str[1]&#x548C;ptr[1] &#x4F46;&#x662F;&#x806A;&#x660E;&#x7684;&#x5927;&#x795E;&#x4EEC;&#x770B;&#x51FA;&#x4E86;&#x89C4;&#x5F8B;&#xFF0C;&#x8BF4;&#x65E2;&#x7136;&#x524D;&#x9762;&#x90FD;&#x5DF2;&#x7ECF;&#x6BD4;&#x8F83;&#x8FC7;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x4E00;&#x4E9B;&#x5E2E;&#x52A9;&#x3002;&#x6309;&#x7167;&#x8FD9;&#x4E2A;&#x601D;&#x8DEF;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E0B;ptr&#x4E2D;&#x7684;&#x201D;ABCABF&#x201D;&#x548C;str&#x4E2D;&#x7684;&#x201D;ABCABE&#x201D;&#xFF0C;&#x5176;&#x4E2D;&#x5B83;&#x4EEC;&#x7684;&#x91CD;&#x5408;&#x90E8;&#x5206;&#x662F;&#x201D;ABCAB&#x201D;&#x8FD0;&#x7528;&#x4E00;&#x4E0B;&#x521A;&#x521A;&#x7684;&#x524D;&#x540E;&#x7F00;&#x77E5;&#x8BC6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5199;&#x51FA;&#x201D;ABCAB&#x201D;&#x7684;PMT&#x5206;&#x522B;&#x662F;&#xFF1A;{0&#xFF0C;0&#xFF0C;0&#xFF0C;1&#xFF0C;2}&#xFF0C;&#x5BF9;&#x5E94;&#x4E86;&#x5B57;&#x7B26;&#x4E32;&#x201D;A&#x201D;,&#x201D;AB&#x201D;,&#x201D;ABC&#x201D;,&#x201D;ABCA&#x201D;,&#x201D;ABCAB&#x201D;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x628A;ptr&#x79FB;&#x5230;3&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF0C;&#x56E0;&#x4E3A;&#x201D;ABCAB&#x201D;&#x4E2D;&#x7684;&#x524D;&#x4E24;&#x4E2A;&#x8DDF;&#x540E;&#x4E24;&#x4E2A;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x800C;&#x540E;&#x4E24;&#x4E2A;&#x5728;&#x521A;&#x521A;&#x7684;&#x7B2C;&#x4E00;&#x6B21;&#x6BD4;&#x8F83;&#x4E2D;&#x662F;&#x80FD;&#x591F;&#x4E0E;str&#x5339;&#x914D;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5C31;&#x76F4;&#x63A5;&#x4ECE;&#x90A3;&#x4E2A;&#x4F4D;&#x7F6E;&#x518D;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x5339;&#x914D;&#x6BD4;&#x8F83; &#x7136;&#x540E;&#xFF0C;Jake Boxer&#x4F5C;&#x8005;&#x5C31;&#x76F4;&#x63A5;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x8BA1;&#x7B97;&#x516C;&#x5F0F;&#xFF1A;&#x8DF3;&#x8FC7;&#x957F;&#x5EA6;=&#x5339;&#x914D;&#x5230;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;-PMT&#xFF0C;&#x8FD0;&#x7528;&#x5230;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5C31;&#x662F;5&#xFF08;ABCAB&#x7684;&#x957F;&#x5EA6;&#xFF09;-2&#xFF08;ABCAB&#xFF09;=3&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x4ECE;index=0&#x8DF3;&#x5230;index&#x4E3A;0+3= 3 &#x53C8;&#x6BD4;&#x5982;&#x8FD9;&#x79CD;&#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x6CA1;&#x6709;&#x6700;&#x957F;&#x524D;&#x540E;&#x7F00; &#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x201D;ABCDE&#x201D;&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;5&#xFF0C;PMT&#x4E3A;0&#xFF0C;&#x5373;index = 0+(5-0)= 5 &#x800C;&#x8FD9;&#x4E2A;&#x6240;&#x8C13;&#x7684;PMT&#x5219;&#x662F;&#x7ECF;&#x5E38;&#x770B;&#x5230;&#x7684;next&#x6570;&#x7EC4;&#x5728;&#x201D;ABCDAB&#x201D;&#x4E2D;&#xFF0C;&#x5B83;&#x5BF9;&#x5E94;&#x7684;next&#x6570;&#x7EC4;&#x662F; 2.&#x7EC8;&#x4E8E;&#x5230;&#x4E86;&#x91CD;&#x70B9;&#xFF0C;&#x6C42;next&#x6570;&#x7EC4;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x6211;&#x4E00;&#x76F4;&#x90FD;&#x4E0D;&#x61C2;&#xFF0C;&#x7136;&#x540E;&#x53CD;&#x590D;&#x7684;&#x770B;&#x4EE3;&#x7801;&#x548C;&#x770B;&#x535A;&#x5BA2;&#xFF0C;&#x4E00;&#x6B65;&#x6B65;&#x60F3;&#x6E05;&#x695A;&#x540E;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x660E;&#x767D;&#x4E86;&#x4EE3;&#x7801;&#x662F;&#x600E;&#x4E48;&#x80A5;&#x4E8B;&#x4E86;&#xFF01;&#x9644;&#x4E0A;&#x6211;&#x770B;&#x5F97;&#x6BD4;&#x8F83;&#x61C2;&#x7684;&#x4EE3;&#x7801;&#x7684;&#x535A;&#x5BA2;&#xFF1A;https://blog.csdn.net/f1033774377/article/details/82556438&#x8FD9;&#x4E2A;&#x535A;&#x4E3B;&#x7684;&#x610F;&#x601D;&#x5C31;&#x662F;&#xFF0C;&#x5728;&#x6C42;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;PMT&#x65F6;&#xFF0C;&#x5148;&#x4ECE;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x4E2A;&#x7684;PMT&#x770B;&#x8D77;&#xFF0C;&#x770B;&#x770B;&#x5728;&#x4E4B;&#x524D;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x52A0;&#x4E0A;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x540E;&#xFF0C;&#x80FD;&#x4E0D;&#x80FD;&#x4E5F;&#x7EE7;&#x7EED;&#x5339;&#x914D;&#x4E0B;&#x53BB;&#xFF0C;&#x5982;&#x679C;&#x80FD;&#xFF0C;&#x90A3;&#x5C31;&#x662F;next[i] = next[i-1]+1&#xFF0C;&#x4E0D;&#x884C;&#x7684;&#x8BDD;&#x54A7;&#xFF0C;&#x90A3;&#x5C31;&#x518D;&#x770B;&#x770B;&#x5339;&#x914D;&#x4E86;&#x7684;&#x524D;&#x7F00;&#x4E2D;&#xFF0C;&#x4F1A;&#x4E0D;&#x4F1A;&#x526A;&#x77ED;&#x540E;&#xFF0C;&#x8DDF;&#x77ED;&#x4E00;&#x70B9;&#x7684;&#x540E;&#x7F00;&#x5339;&#x914D;&#x5462;&#xFF1F;ok&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x4EE3;&#x7801;&#x89E3;&#x91CA;&#xFF0C;&#x9644;&#x4E0A;&#x201D;abaabbabaab&#x201D;&#x7684;PMT &#x9996;&#x5148;&#x8981;&#x660E;&#x767D;&#x7684;&#x662F;F[i]&#x8868;&#x793A;&#x7684;&#x662F;&#xFF1A;0~i&#x4E2D;&#xFF0C;&#x6700;&#x957F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x4E2D;&#x7684;&#x524D;&#x7F00;&#x5B57;&#x7B26;&#x4E32;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x628A;F[i]+1&#x5C31;&#x662F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x7684;&#x957F;&#x5EA6;&#x4E86;&#x3002;&#x6BD4;&#x5982;&#x8BF4;&#x4E0A;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6700;&#x957F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x662F;abaab&#xFF0C;&#x6240;&#x4EE5;F[10] = 4&#xFF0C;&#x56E0;&#x4E3A;&#x201D;abaab&#x201D;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;b&#x5728;&#x5B57;&#x7B26;&#x4E32;string&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x662F;4&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x957F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x7684;&#x957F;&#x5EA6;&#x5C31;&#x662F;4+1=5&#x4E86;&#x3002;1234567891011121314String string = &quot;abaabbabaab&quot;;char[] B = string.toCharArray();int m= B.length;int[] F = new int[m];F[0] = -1;for (int i=1;i&lt;m;i++){ int j=F[i-1]; while ((B[j+1]!=B[i])&amp;&amp;(j&gt;=0)) j=F[j]; if (B[j+1]==B[i]) F[i]=j+1; else F[i]=-1;} ok&#xFF0C;&#x6240;&#x4EE5;&#x628A;F[0] = -1&#x7684;&#x610F;&#x601D;&#x4E5F;&#x6BD4;&#x8F83;&#x6E05;&#x695A;&#xFF0C;&#x5C31;&#x662F;&#x6CA1;&#x6709;&#x5339;&#x914D;&#x561B;&#x3002;&#x4ECE;for&#x5FAA;&#x73AF;&#x5F00;&#x59CB;&#xFF0C;&#x5F88;&#x660E;&#x663E;&#x8FD9;&#x662F;&#x8981;&#x904D;&#x5386;&#x6574;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x7136;&#x540E;&#x662F; int j = F[i-1]; &#x4E3A;&#x4EC0;&#x4E48;j&#x8981;=F[i-1]&#xFF0C;&#x56E0;&#x4E3A;&#x8981;&#x5728;&#x539F;&#x6765;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x770B;&#x770B;&#x80FD;&#x4E0D;&#x80FD;&#x7EE7;&#x7EED;&#x5339;&#x914D;&#x4E0B;&#x53BB;&#x3002;&#x5148;&#x770B;if&#x2026;&#x90A3;&#x91CC;&#xFF0C;&#x5047;&#x8BBE;&#x73B0;&#x5728;i = 10&#xFF08;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;b&#xFF09;&#xFF0C;&#x4ECE;&#x4E0A;&#x8868;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;F[9]&#x662F;3&#xFF0C;&#x6240;&#x4EE5;&#x8BF4;&#x73B0;&#x5728;j=3&#x3002;F[9]=3&#x7684;&#x610F;&#x601D;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x524D;0~9&#x4E2D;&#x7684;&#x6700;&#x957F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x6709;4&#x4E2A;&#xFF0C;&#x5373;&#x201D;abaa&#x201D;&#xFF0C;&#x800C;&#x201D;3&#x201D;&#x4EE3;&#x8868;&#x7684;&#x5C31;&#x662F;&#x524D;&#x7F00;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;index&#x662F;3&#x7684;&#x2019;a&#x2019;&#xFF0C;PMT=4&#x3002;&#x90A3;&#x4E48;&#x73B0;&#x5728;B[10]&#x4F1A;&#x4E0D;&#x4F1A;&#x8DDF;&#x524D;&#x7F00;&#x7684;&#x4E0B;&#x4E00;&#x4F4D;&#x5373;B[5]&#x4E5F;&#x76F8;&#x540C;&#x5462;&#xFF1F;&#x5982;&#x679C;&#x76F8;&#x540C;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x76F4;&#x63A5;+1&#xFF0C;&#x6240;&#x4EE5;B[10]=4&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x5728;&#x539F;&#x6765;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x7EE7;&#x7EED;&#x5339;&#x914D;&#x4E0B;&#x53BB;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x540C;&#x5462;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x5C31;&#x526A;&#x77ED;&#x524D;&#x7F00;&#x518D;&#x6765;&#x770B;&#x5457;&#x3002;&#x5565;&#x610F;&#x601D;&#x5462;&#xFF1F;&#x6765;&#x770B;&#x4E00;&#x4E0B;while&#x5230;else&#x90A3;&#x91CC;&#x3002;while&#x4E2D;&#x7684;&#x90A3;&#x53E5;j = F[j]&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x8FD9;&#x6837;&#x5462;&#xFF1F; &#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x770B;F[6]&#x662F;&#x600E;&#x4E48;&#x5F97;&#x5230;&#x7684;&#x3002;&#x6839;&#x636E;&#x4EE3;&#x7801;&#xFF0C;i&#x6B64;&#x65F6;&#x662F;6&#xFF0C;&#x90A3;&#x4E48;j = F[6-1] = F[5] = 1&#x3002;while&#x6BD4;&#x8F83;B[1+1] = B[2] = &#x2018;b&#x2019;,B[6] = &#x2018;a&#x2019;&#xFF0C;&#x4E0D;&#x76F8;&#x7B49;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x5728;&#x524D;&#x9762;&#x7684;&#x6700;&#x957F;&#x76F8;&#x540C;&#x524D;&#x540E;&#x7F00;&#x201D;aa&#x201D;&#x4E0A;&#x4E0D;&#x80FD;&#x518D;&#x7EE7;&#x7EED;&#x6DFB;&#x52A0;&#xFF0C;ok&#x90A3;&#x5C31;&#x526A;&#x77ED;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8FDB;&#x5165;while&#x91CC;&#x9762;&#x3002;j = F[1] = 0&#x3002;&#x518D;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x6BD4;&#x8F83;B[0+1]=B[1] = &#x2018;a&#x2019;&#xFF0C;B[6] = &#x2018;a&#x2019;&#xFF0C;&#x8DF3;&#x51FA;while&#x5FAA;&#x73AF;&#xFF0C;&#x76F4;&#x63A5;&#x6765;&#x5230;&#x4E86;if&#x8BED;&#x53E5;&#xFF0C;&#x5219;F[6] = 0+1=1&#xFF0C;&#x7ED3;&#x675F;&#x3002; &#x7EC8;&#x4E8E;&#x5168;&#x90E8;&#x8BB2;&#x5B8C;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x53BB;leetcode&#x5199;&#x4E00;&#x4E0B;&#x8FD9;&#x9053;&#x9898;&#x7684;&#x89E3;&#x6CD5;&#xFF0C;&#x6765;&#x9A8C;&#x8BC1;&#x81EA;&#x5DF1;&#x5199;&#x7684;KMP&#x7B97;&#x6CD5;&#x6709;&#x6CA1;&#x6709;&#x95EE;&#x9898;:https://leetcode-cn.com/problems/implement-strstr/ &#x4EE5;&#x4E0B;&#x662F;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#xFF1A;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869public class Main { public static void main(String[] args) { String str = &quot;hello&quot;; String ptr = &quot;lo&quot;; System.out.println(strStr(str, ptr)); } public static int KMP(String haystack, String needle) { if (needle.isEmpty()) { return 0; } char[] A = haystack.toCharArray(); char[] B = needle.toCharArray(); int i = 0, j=0; int index = -1; int s = 0; //&#x4FDD;&#x5B58;str&#x662F;&#x4ECE;&#x54EA;&#x4E2A;index&#x5F00;&#x59CB;&#x6BD4;&#x8F83;&#x7684; while (i&lt;A.length &amp;&amp; j&lt;B.length) { //&#x5F53;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x76F8;&#x540C;&#x65F6; if (A[i] == B[j]) { //&#x5224;&#x65AD;&#x662F;&#x4E0D;&#x662F;&#x8BB0;&#x5F55;&#x4E86;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E; if (index == -1) { index = i; } i++; j++; //&#x5224;&#x65AD;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x627E;&#x5230;&#x4E86;&#x5339;&#x914D;&#x4E32; if (j == B.length) { return index; } }else { //&#x5957;&#x7528;&#x516C;&#x5F0F;&#xFF1A;&#x8DF3;&#x8FC7;&#x957F;&#x5EA6;=&#x5339;&#x914D;&#x5230;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;-PMT //k&#x8868;&#x793A;&#x8DF3;&#x8FC7;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x5176;&#x4E2D;j&#x521A;&#x597D;&#x4EE3;&#x8868;&#x4E86;&#x5339;&#x914D;&#x4E86;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&#xFF0C;getNext()&#x8FD4;&#x56DE;&#x4E86;PMT int k = j - getNext(needle.substring(0, j)); if (k == 0) { k = 1; } i = s + k;//&#x4E4B;&#x524D;&#x6240;&#x8C13;&#x628A;ptr&#x79FB;&#x52A8;&#x4F4D;&#x7F6E;&#xFF0C;&#x5176;&#x5B9E;&#x53EA;&#x662F;&#x6539;&#x53D8;i&#x5C31;&#x884C; s = i;//&#x8BB0;&#x5F55;&#x662F;&#x4ECE;str&#x4E2D;&#x54EA;&#x4E2A;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x5339;&#x914D;&#x7684; j = 0;//&#x4ECE;&#x5934;&#x5F00;&#x59CB;&#x5339;&#x914D;ptr index = -1; } } //&#x627E;&#x4E0D;&#x5230;&#x5339;&#x914D;&#x7684; return -1; } public static int getNext(String str) { char[] B = str.toCharArray(); int m= B.length; if (m&lt;2) { return 0; } int[] F = new int[m]; F[0] = -1; for (int i=1;i&lt;m;i++) { int j=F[i-1]; while ((B[j+1]!=B[i])&amp;&amp;(j&gt;=0)) j=F[j]; if (B[j+1]==B[i]) F[i]=j+1; else F[i]=-1; } return F[m-1]+1; }} &#x554A;&#x60F3;&#x8D77;&#x9762;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x88AB;&#x95EE;&#x4E86;&#x8FD9;&#x9053;&#x9898;&#x6211;&#x61F5;&#x903C;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x867D;&#x7136;&#x4EE5;&#x524D;&#x770B;&#x8FC7;&#xFF0C;&#x4F46;&#x6BCF;&#x6B21;&#x90FD;&#x662F;&#x8349;&#x8349;&#x770B;&#x4E86;&#x4E00;&#x904D;&#x5C31;&#x8FC7;&#xFF0C;&#x73B0;&#x5728;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x5E94;&#x8BE5;&#x4F1A;&#x52A0;&#x6DF1;&#x5370;&#x8C61;&#x4E86;&#x55EF;&#xFF01; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"算法","slug":"算法","permalink":"https://secretlin.github.io/blog/tags/算法/"}]},{"title":"windows环境下搭建jenkins并构建apk","date":"2019-02-25T12:11:22.333Z","path":"/posts/2e566c7e/","text":"&#x642D;&#x5EFA;jenkins&#x5E76;&#x7B80;&#x5355;&#x6784;&#x5EFA;apk&#x7531;&#x4E8E;&#x6700;&#x8FD1;&#x540C;&#x4E8B;&#x63D0;&#x51FA;&#x8BF4;jenkins&#x4F1A;&#x65B9;&#x4FBF;&#x6D4B;&#x8BD5;&#x4EBA;&#x5458;&#x53BB;&#x4E0B;&#x8F7D;&#x6700;&#x65B0;&#x7248;&#x7684;apk&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x6211;&#x4EEC;&#x7F16;&#x8BD1;&#x7ED9;&#x4ED6;&#x4EEC;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x5C31;&#x7B80;&#x5355;&#x7684;&#x5165;&#x95E8;&#x4E00;&#x4E0B;jenkins&#x5E76;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x770B;&#x5230;&#x7F51;&#x4E0A;&#x5173;&#x4E8E;jenkins&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x5E94;&#x7528;&#xFF0C;&#x7B49;&#x4EE5;&#x540E;&#x6709;&#x65F6;&#x95F4;&#x4E86;&#x5C31;&#x518D;&#x7EE7;&#x7EED;&#x770B;&#x770B;&#x3002;&#x5148;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;&#x7B80;&#x5355;&#x7684;&#x4F7F;&#x7528;jenkins&#x6253;&#x5305;apk&#x3002; 1.&#x4E0B;&#x8F7D;&#x3002;&#x5728;&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;&#xFF1A;https://jenkins.io/download/&#x5B98;&#x7F51;&#x4E0A;&#x6709;&#x957F;&#x671F;&#x7A33;&#x5B9A;&#x7248;&#x548C;&#x4E00;&#x5468;&#x65B0;&#x9C9C;&#x7248;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x6240;&#x9700;&#x8981;&#x7684;&#x9009;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E00;&#x822C;&#x90FD;&#x662F;&#x9009;&#x62E9;&#x957F;&#x671F;&#x7A33;&#x5B9A;&#x3002;&#x7136;&#x540E;&#x5C31;&#x6839;&#x636E;&#x7CFB;&#x7EDF;&#x4E0B;&#x8F7D;&#x76F8;&#x5E94;&#x7684;&#x7248;&#x672C;&#x3002; step 1 2.&#x5B89;&#x88C5;&#x3002;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x5C31;&#x7701;&#x7565;&#x4E86;&#xFF08;&#x4F1A;&#x9009;&#x62E9;jenkins&#x7684;&#x4E00;&#x822C;&#x90FD;&#x662F;&#x88C5;&#x8FC7;&#x65E0;&#x6570;&#x8F6F;&#x4EF6;&#x7684;&#x4EBA;&#x4E86;&#xFF09; 3.&#x6253;&#x5F00;jenkins&#x5B89;&#x88C5;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x9009;&#x62E9;&#x53EF;&#x4EE5;&#x6253;&#x5F00;jenkins &#x2460;&#x5728;Tomcat&#x4E0B;&#x6253;&#x5F00;&#xFF1A;&#x628A;jenkins&#x6240;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x7684;jenkins.war&#x653E;&#x5230;Tomcat&#x7684;webapps&#x4E0B;&#xFF0C;&#x7136;&#x540E;&#x6253;&#x5F00;Tomcat&#x7136;&#x540E;&#x6839;&#x636E;Tomcat&#x7684;&#x7AEF;&#x53E3;&#xFF0C;&#x6BD4;&#x5982;8888&#xFF0C;&#x6240;&#x4EE5;&#x8BBF;&#x95EE;jenkins&#x7684;&#x7F51;&#x5740;&#x5C31;&#x662F; http://localhost:8888/jenkins &#x2461;&#x4F7F;&#x7528;&#x547D;&#x4EE4;&#x884C;&#x6253;&#x5F00;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x8F93;&#x5165;:java -jar jenkins.war&#x7531;&#x4E8E;jenkins&#x9ED8;&#x8BA4;&#x8BBE;&#x7F6E;&#x7684;&#x7AEF;&#x53E3;&#x6709;&#x65F6;&#x88AB;&#x5360;&#x7528;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x65B0;&#x7684;&#x7AEF;&#x53E3;&#xFF0C;&#x5047;&#x8BBE;&#x4F7F;&#x7528;1080&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x662F;:java -jar jenkins &#x2013;httpPort=1080&#x6240;&#x4EE5;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x8BBF;&#x95EE;&#x7684;&#x7F51;&#x5740;&#x5C31;&#x662F;http://localhost:1080 4.&#x8F93;&#x5165;&#x5BC6;&#x7801;&#x3002; step 4 &#x6839;&#x636E;&#x63D0;&#x793A;&#x7684;&#x8DEF;&#x5F84;&#x627E;&#x5230;&#x5BC6;&#x7801;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x5BC6;&#x7801;&#x8F93;&#x5165;(PS:&#x6709;&#x65F6;&#x4F1A;&#x5F88;&#x8BE1;&#x5F02;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x628A;&#x8DEF;&#x5F84;&#x590D;&#x5236;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x6587;&#x6863;&#x8DEF;&#x5F84;&#x7C98;&#x8D34;) 5.&#x51FA;&#x73B0;&#x4E86;&#x201C;&#x79BB;&#x7EBF;&#x201D;&#x9875;&#x9762;&#x3002; &#x79BB;&#x7EBF; &#x8F93;&#x5165;&#x5B8C;&#x5BC6;&#x7801;&#xFF0C;&#x4E5F;&#x8BB8;&#x4F1A;&#x5F88;&#x6210;&#x529F;&#x7684;&#x8FDB;&#x5165;&#x5230;&#x4E0B;&#x8F7D;&#x63D2;&#x4EF6;&#x7684;&#x754C;&#x9762;&#xFF0C;&#x4F46;&#x4E5F;&#x6709;&#x53EF;&#x80FD;&#x8DDF;&#x6211;&#x4E00;&#x6837;&#x4E0D;&#x5E78;&#x8FD0;&#xFF0C;&#x6765;&#x5230;&#x4E86;&#x201C;&#x79BB;&#x7EBF;&#x201D;&#x9875;&#x9762;&#xFF0C;&#x5982;&#x4E0A;&#x3002;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x987A;&#x5229;&#x4E0B;&#x8F7D;&#x63D2;&#x4EF6;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x5FFD;&#x7565;&#x8FD9;&#x4E00;&#x6B65;&#x5427;&#x3002; &#x4E0D;&#x8FC7;&#x6211;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x662F;&#x4EE5;&#x4E0B;&#x8FD9;&#x79CD;&#xFF1A;(&#x8F6C;&#x81EA;&#xFF1A;https://blog.csdn.net/u013905744/article/details/80434942)&#x5B89;&#x88C5;&#x63D2;&#x4EF6;&#x90A3;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x5C31;&#x662F;&#x63D0;&#x793A;&#x4F60;offline&#x7684;&#x90A3;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x4E0D;&#x8981;&#x52A8;&#x3002;&#x7136;&#x540E;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x65B0;&#x7684;tab&#xFF0C;&#x8F93;&#x5165;&#x7F51;&#x5740;http://192.168.211.103:8080/jenkins/pluginManager/advanced&#x3002; &#x8FD9;&#x91CC;&#x9762;&#x6700;&#x5E95;&#x4E0B;&#x6709;&#x4E2A;&#x3010;&#x5347;&#x7EA7;&#x7AD9;&#x70B9;&#x3011;&#xFF0C;&#x628A;&#x5176;&#x4E2D;&#x7684;&#x94FE;&#x63A5;&#x7531;https&#x6539;&#x6210;http&#x7684;&#x5C31;&#x597D;&#x4E86;&#xFF0C;http://updates.jenkins.io/update-center.json&#x3002; &#x7136;&#x540E;&#x5728;&#x670D;&#x52A1;&#x5217;&#x8868;&#x4E2D;&#x5173;&#x95ED;jenkins&#xFF0C;&#x518D;tomcat&#x91CD;&#x65B0;&#x542F;&#x52A8;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x80FD;&#x6B63;&#x5E38;&#x8054;&#x7F51;&#x4E86; &#x867D;&#x7136;&#x4E4B;&#x524D;&#x770B;&#x5230;&#x7684;&#x66F4;&#x591A;&#x662F;&#x8BF4;&#x6539;jenkins&#x76EE;&#x5F55;&#x4E0B;&#x7684;hudson.model.UpdateCenter.xml&#x4E2D;&#x7684;&#x90A3;&#x4E2A;url&#xFF0C;&#x628A;https&#x6539;&#x6210;http&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x6539;&#x4E86;&#x8FD8;&#x662F;&#x6CA1;&#x7528;&#x3002; 6.&#x4E0B;&#x8F7D;&#x63D2;&#x4EF6;&#x3002; step 6 ok&#x8FD9;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x6109;&#x5FEB;&#x7684;&#x6765;&#x4E0B;&#x8F7D;&#x63D2;&#x4EF6;&#x4E86;&#x3002;&#x4F46;&#x662F;&#x53C8;&#x8981;&#x8BA9;&#x4F60;&#x9009;&#x201C;&#x63A8;&#x8350;&#x201D;&#x7684;&#x8FD8;&#x662F;&#x201C;&#x81EA;&#x9009;&#x201D;&#xFF0C;&#x566B;&#x6211;&#x662F;&#x9009;&#x62E9;&#x4E86;&#x63A8;&#x8350;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x4E4B;&#x524D;&#x5728;&#x7F51;&#x4E0A;&#x770B;&#x5230;&#x6709;&#x4EBA;&#x81EA;&#x9009;&#x63D2;&#x4EF6;&#x7684;&#x6E05;&#x5355;&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x51E0;&#x4E2A;&#x6211;&#x6CA1;&#x6709;&#x770B;&#x5230;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x540E;&#x9009;&#x62E9;&#x4E86;&#x63A8;&#x8350;&#x7684;&#x3002;&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x559D;&#x676F;&#x8336;&#x9759;&#x5F85;&#x4E0B;&#x8F7D;&#x6210;&#x529F;&#x4E86;&#x3002;&#x4E0B;&#x8F7D;&#x6210;&#x529F;&#x540E;&#x5C31;&#x521B;&#x5EFA;&#x7528;&#x6237;&#x5566;&#xFF0C;&#x8FD9;&#x4E00;&#x6B65;&#x4E5F;&#x7701;&#x7565;&#x4E0D;&#x5199;&#x4E86;&#x3002; 7.&#x914D;&#x7F6E;&#x3002;&#x7EC8;&#x4E8E;&#x8FDB;&#x5165;&#x4E86;&#x6B63;&#x5F0F;&#x7684;&#x754C;&#x9762;&#x4E86;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x5C31;&#x662F;&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x7B49;&#x7B49;&#x4E86;&#x3002;&#x70B9;&#x51FB;&#x53F3;&#x4FA7;&#x7684;&#x201C;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x201D;&#xFF0C;&#x9009;&#x62E9;&#x201C;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x201D;&#xFF1A; step 7 &#x5728;Global properties&#x4E2D;&#x52FE;&#x9009;&#x201C;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x201D;&#xFF0C;&#x586B;&#x5199;SDK&#x548C;NDK(&#x5982;&#x679C;&#x6709;&#x9700;&#x8981;)&#x7684;&#x5730;&#x5740;&#xFF0C;&#x7136;&#x540E;&#x4FDD;&#x5B58; &#x73AF;&#x5883;&#x53D8;&#x91CF; &#x56DE;&#x9000;&#x5230;&#x201C;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x201D;&#xFF0C;&#x9009;&#x62E9;&#x201C;&#x5168;&#x5C40;&#x5DE5;&#x5177;&#x914D;&#x7F6E;&#x201D;&#xFF1A;&#x5728;JDK&#x3001;Git&#x548C;Gradle&#x90FD;&#x586B;&#x4E0A;&#xFF0C;&#x4E0D;&#x8981;&#x9009;&#x62E9;&#x201C;&#x81EA;&#x52A8;&#x4E0B;&#x8F7D;&#x201D;&#xFF0C;&#x542C;&#x8BF4;&#x4E0B;&#x8F7D;&#x5F88;&#x6162;emmm &#x5168;&#x5C40;&#x5DE5;&#x5177;&#x914D;&#x7F6E; Git&#x53EF;&#x586B;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7684;&#x662F;svn&#x7684;&#x8BDD;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5148;&#x5FFD;&#x7565;&#x6389;&#x586B;&#x5B8C;&#x4FDD;&#x5B58; 8.&#x5EFA;&#x4EFB;&#x52A1;&#x3002;&#x7531;&#x4E8E;&#x6211;&#x7684;&#x9879;&#x76EE;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x6784;&#x5EFA;&#x4E2A;apk&#xFF0C;&#x6240;&#x4EE5;&#x4E0B;&#x9762;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x586B;&#x5199;&#xFF0C;&#x5982;&#x6709;&#x5176;&#x5B83;&#x9700;&#x8981;&#x53EF;&#x81EA;&#x884C;&#x641C;&#x7D22;&#x5176;&#x5B83;&#x7684;&#x3002;&#x5728;&#x4E3B;&#x9875;&#x53F3;&#x4FA7;new&#x4E00;&#x4E2A;&#x4EFB;&#x52A1;&#xFF0C;&#x7136;&#x540E;&#x586B;&#x4EFB;&#x52A1;&#x540D;&#xFF0C;&#x9009;&#x62E9;&#x7B2C;&#x4E00;&#x4E2A; step 8 &#x7136;&#x540E;&#x76F4;&#x63A5;&#x6765;&#x5230;source code management&#xFF0C;&#x6839;&#x636E;&#x9700;&#x8981;&#x9009;&#x62E9;git&#x6216;svn&#xFF0C;&#x586B;&#x5199;url&#x548C;&#x8BC1;&#x4E66;&#xFF08;&#x5C31;&#x662F;&#x6DFB;&#x52A0;&#x4E2A;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#x6765;&#x767B;&#x5F55;&#x8FDB;&#x53BB;&#xFF09; source code management &#x8DF3;&#x5230;Build&#x8FD9;&#x91CC;&#xFF0C;&#x9009;&#x62E9;&#x7B2C;&#x4E8C;&#x4E2A;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x4E0B;&#x9762;&#x586B;&#x5199;&#xFF0C;&#x4FDD;&#x5B58;&#x3002; Build Build 9.&#x68C0;&#x67E5;&#x4EE3;&#x7801;&#x3002;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x8FD9;&#x4E00;&#x6B65;&#xFF0C;&#x6211;&#x7684;&#x6784;&#x5EFA;&#x4E00;&#x76F4;&#x5931;&#x8D25;&#xFF0C;&#x6240;&#x4EE5;&#x5199;&#x4E0B;&#x68C0;&#x67E5;&#x6B65;&#x9AA4;&#xFF1A; &#x2460;.&#x4FDD;&#x8BC1;&#x4EE3;&#x7801;&#x4E2D;&#x6CA1;&#x6709;local.properties&#x548C;app.externalNativeBuild(&#x8FD9;&#x4E00;&#x4E2A;&#x662F;&#x5728;&#x4F7F;&#x7528;ndk&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x751F;&#x6210;)&#x3002;local.properties&#x4E2D;&#x7684;&#x73AF;&#x5883;&#x53EF;&#x80FD;&#x8DDF;jenkins&#x7684;&#x914D;&#x7F6E;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;.externalNativeBuild&#x4E5F;&#x662F;&#x4E00;&#x6837;&#x7684;&#x9053;&#x7406;&#xFF0C;&#x4E0D;&#x540C;&#x8DEF;&#x5F84;&#x7684;ndk&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#x90FD;&#x4E0D;&#x80FD;&#x51FA;&#x73B0; &#x2461;.&#x7F16;&#x5199;&#x597D;build.gradle&#x6587;&#x4EF6;&#xFF1A;123456789101112131415161718192021222324252627282930signingConfigs { release { keyAlias KEYALIAS keyPassword KEYPASSWORD storeFile file(&apos;../apk.jks&apos;) storePassword STOREPASSWORD } } //&#x4E24;&#x4E2A;&#x7248;&#x672C;&#x540C;&#x65F6;&#x7528;&#x53D1;&#x5E03;&#x7248;&#x672C;&#x7684;&#x7B7E;&#x540D;&#x79D8;&#x94A5; buildTypes { //&#x53D1;&#x5E03;&#x7248;&#x672C; release { minifyEnabled false proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos; signingConfig signingConfigs.release } //&#x6D4B;&#x8BD5;&#x7248;&#x672C; debug { jniDebuggable true debuggable true signingConfig signingConfigs.release } } // &#x6253;&#x5305;&#x540E;&#x5E94;&#x7528;&#x540D;&#x79F0; applicationVariants.all { variant -&gt; variant.outputs.all { output -&gt; outputFileName = &quot;Test-${defaultConfig.versionName}.apk&quot; } } &#x5BF9;&#x4E8E;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x201D;signingConfigs&#x201D;&#xFF0C;&#x91CC;&#x9762;&#x7684;keyAlias&#x3001;keyPassword&#x548C;storePassword&#x90FD;&#x662F;&#x5199;&#x5728;&#x4E86;gradle.properties&#x4E0B;&#x3002;&#x800C;storeFile&#x5219;&#x662F;&#x5BF9;&#x5E94;&#x7684;.jks&#x7684;&#x8DEF;&#x5F84;&#x6240;&#x4EE5;&#x5728;&#x4E0A;&#x4F20;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x8BB0;&#x5F97;&#x4E0A;&#x4F20;.jks&#x6587;&#x4EF6;&#x3002; 10.&#x6784;&#x5EFA;&#x3002;&#x5728;&#x4EFB;&#x52A1;&#x5DE6;&#x4FA7;&#x70B9;&#x51FB;&#x201C;&#x7ACB;&#x5373;&#x6784;&#x5EFA;&#x201D;&#xFF0C;&#x5373;&#x53EF;&#x6210;&#x529F;&#x6784;&#x5EFA;&#x3002; &#x7531;&#x4E8E;&#x6211;&#x7684;&#x7ECF;&#x9A8C;&#x8FD8;&#x662F;&#x5F88;&#x6D45;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x70B9;&#x4E5F;&#x8BB8;&#x8BF4;&#x5F97;&#x4E0D;&#x592A;&#x597D;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x6709;&#x9519;&#x6216;&#x8005;&#x662F;&#x66F4;&#x597D;&#x7684;&#x5EFA;&#x8BAE;&#xFF0C;&#x6B22;&#x8FCE;&#x5927;&#x5BB6;&#x4E4B;&#x5904;&#xFF0C;&#x611F;&#x8C22;&#xFF5E; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"测试","slug":"测试","permalink":"https://secretlin.github.io/blog/tags/测试/"}]},{"title":"利用Android+OpenCV简单识别颜色","date":"2018-07-21T12:09:37.997Z","path":"/posts/949a6cdd/","text":"&#x8FD9;&#x662F;Adrain&#x5927;&#x795E;&#x7684;&#x5F62;&#x72B6;&#x8BC6;&#x522B;&#x7CFB;&#x5217;&#x6559;&#x7A0B;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#xFF0C;&#x5B8C;&#x7ED3;&#x6492;&#x82B1;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x6211;&#x5386;&#x5C3D;&#x5343;&#x8F9B;&#x4E07;&#x82E6;&#xFF0C;&#x7EC8;&#x4E8E;&#x5728;&#x67E5;&#x9605;&#x5404;&#x79CD;&#x8D44;&#x6599;&#x540E;&#x80FD;&#x591F;&#x6210;&#x529F;&#x8F6C;&#x6362;&#x6210;Android&#x4EE3;&#x7801;&#xFF0C;&#x5B9E;&#x5C5E;&#x4E0D;&#x6613;&#x554A;&#x3002;&#x4E0D;&#x8FC7;&#x4E5F;&#x786E;&#x5B9E;&#x662F;&#x56E0;&#x4E3A;&#x81EA;&#x5DF1;&#x5BF9;OpenCV&#x90FD;&#x4E0D;&#x600E;&#x4E48;&#x4E86;&#x89E3;&#xFF0C;&#x624D;&#x5BFC;&#x81F4;&#x4E86;&#x867D;&#x7136;&#x770B;&#x61C2;Adrain&#x5927;&#x795E;&#x7684;&#x535A;&#x5BA2;&#x540E;&#xFF0C;&#x4F46;&#x5199;&#x6210;Android&#x7248;&#x672C;&#x5374;&#x9891;&#x9891;&#x51FA;&#x73B0;bug&#x3002;&#x6700;&#x8FD1;&#x8FD9;&#x4E24;&#x5929;&#x4E5F;&#x5F00;&#x59CB;&#x770B;Adrain&#x5927;&#x795E;&#x7684;&#x6559;&#x7A0B;&#xFF0C;&#x4E5F;&#x5F00;&#x59CB;&#x4E86;&#x89E3;&#x4E86;OpenCV&#x7684;&#x4E00;&#x4E9B;&#x57FA;&#x7840;&#xFF0C;&#x5E0C;&#x671B;&#x4EE5;&#x540E;&#x80FD;&#x591F;&#x8D8A;&#x6765;&#x8D8A;&#x987A;&#x5229;&#x7684;&#x5728;Andoid&#x5229;&#x7528;OpenCV&#x3002; &#x8BDD;&#x4E0D;&#x591A;&#x8BF4;&#xFF0C;&#x5F00;&#x59CB;&#x8BB0;&#x5F55;&#x4E0B;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6559;&#x7A0B;&#x7684;&#x9879;&#x76EE;&#x3002;&#x4EE5;&#x4E0B;&#xFF0C;&#x662F;&#x672C;&#x6B21;&#x9879;&#x76EE;&#x8981;&#x7528;&#x5230;&#x7684;&#x56FE;&#x7247;&#x3002; &#x9996;&#x5148;&#xFF0C;&#x9700;&#x8981;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x7C7B;ColorLabeler&#x6765;&#x6807;&#x8BC6;&#x989C;&#x8272;&#x3002;&#x4EE5;&#x4E0B;&#x662F;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E9B;&#x6570;&#x636E;:1234567891011121314151617181920//&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x989C;&#x8272;&#x540D;&#x79F0;&#x6570;&#x7EC4;private String[] colorNames= {&quot;blue&quot;,&quot;green&quot;,&quot;red&quot;};//&#x7528;mat&#x5B58;&#x653E;rgb&#x548C;labprivate Mat[] rgbMat = new Mat[3];private Mat[] labMat = new Mat[3];public ColorLabeler(){ //&#x5BF9;&#x5E94;&#x989C;&#x8272;&#x6570;&#x7EC4;&#x7684;&#x84DD;&#x8272; rgbMat[0] = new Mat(1,1,CvType.CV_8UC3,new Scalar(0,0,255)); //&#x7EFF;&#x8272; rgbMat[1] = new Mat(1,1,CvType.CV_8UC3,new Scalar(0,255,0)); //&#x7EA2;&#x8272; rgbMat[2] = new Mat(1,1,CvType.CV_8UC3,new Scalar(255,0,0)); //&#x628A;rgb&#x8F6C;&#x6362;&#x6210;lab for (int i=0;i&lt;3;i++){ labMat[i] = new Mat(); Imgproc.cvtColor(rgbMat[i],labMat[i],Imgproc.COLOR_RGB2Lab); }} &#x5728;&#x4EE5;&#x4E0A;&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x4F1A;&#x53D1;&#x73B0;&#x6709;&#x4E00;&#x4E2A;&#x65B0;&#x4E1C;&#x897F;&#x2013;LAB&#x3002;&#x636E;Adrain&#x5927;&#x795E;&#x8BF4;&#xFF0C;&#x4ED6;&#x7684;&#x8FD9;&#x7BC7;&#x6559;&#x7A0B;&#x662F;&#x57FA;&#x4E8E;&#x8BA1;&#x7B97;&#x5DF2;&#x77E5;&#x989C;&#x8272;&#x548C;&#x6240;&#x7ED9;&#x56FE;&#x50CF;&#x533A;&#x57DF;&#x7684;&#x5E73;&#x5747;&#x503C;&#x7684;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#x6765;&#x8FDB;&#x884C;&#x6807;&#x8BC6;&#xFF0C;&#x800C;&#x4E4B;&#x6240;&#x4EE5;&#x9009;&#x62E9;LAB&#x800C;&#x4E0D;&#x662F;HSV&#x6216;RGB&#xFF0C;&#x662F;&#x56E0;&#x4E3A;LAB&#x5728;&#x6B27;&#x6C0F;&#x8DDD;&#x79BB;&#x4E2D;&#x6709;&#x610F;&#x4E49;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x628A;&#x5DF2;&#x77E5;&#x989C;&#x8272;&#x7684;RGB&#x8F6C;&#x6362;&#x6210;LAB&#x3002; &#x5728;&#x521B;&#x5EFA;rgbMat&#x7684;&#x65F6;&#x5019;&#x8017;&#x8D39;&#x6211;&#x5DE8;&#x591A;&#x65F6;&#x95F4;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4E00;&#x76F4;&#x90FD;&#x5BF9;RGB&#x5728;Mat&#x4E2D;&#x7684;&#x4FDD;&#x5B58;&#x6BEB;&#x4E0D;&#x6E05;&#x695A;&#xFF0C;&#x867D;&#x7136;&#x539F;&#x535A;&#x5BA2;&#x662F;&#x7528;&#x4E09;&#x4E2A;&#x4E00;&#x884C;&#x4E09;&#x5217;&#x7684;&#x6570;&#x7EC4;&#x53BB;&#x5B58;&#xFF0C;&#x4F46;&#x662F;&#x5728;JAVA&#x4E2D;&#x5374;&#x4E0D;&#x80FD;&#x3002;&#x9996;&#x5148;&#x9700;&#x8981;&#x518D;&#x4E86;&#x89E3;&#x4E00;&#x4E0B;Mat&#xFF0C;&#x4E0A;&#x6B21;&#x8BF4;&#x8FC7;Mat&#x662F;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#x6307;&#x9488;&#xFF0C;&#x4F46;&#x66F4;&#x91CD;&#x8981;&#x7684;&#x5B83;&#x7684;&#x7C7B;&#x578B;&#x3002;Mat&#x5177;&#x6709;&#x591A;&#x79CD;&#x6570;&#x636E;&#x6DF1;&#x5EA6;&#xFF0C;&#x5982;&#x4E0B;(&#x6458;&#x81EA;&#xFF1A;https://blog.csdn.net/yang_xian521/article/details/7107786&#xFF09; &#x2022; CV_8U - 8-bit unsigned integers ( 0..255 )&#x2022; CV_8S - 8-bit signed integers ( -128..127 )&#x2022; CV_16U - 16-bit unsigned integers ( 0..65535 )&#x2022; CV_16S - 16-bit signed integers ( -32768..32767 )&#x2022; CV_32S - 32-bit signed integers ( -2147483648..2147483647 )&#x2022; CV_32F - 32-bit &#xFB02;oating-point numbers ( -FLT_MAX..FLT_MAX, INF, NAN )&#x2022; CV_64F - 64-bit &#xFB02;oating-point numbers ( -DBL_MAX..DBL_MAX, INF, NAN ) &#x7136;&#x540E;&#xFF0C;Mat&#x66F4;&#x5389;&#x5BB3;&#x7684;&#x662F;&#xFF0C;&#x5B83;&#x8FD8;&#x6D89;&#x53CA;&#x4E00;&#x4E2A;&#x53EB;&#x505A;channel&#xFF0C;&#x5373;&#x901A;&#x9053;&#x3002;&#x4EE5;&#x524D;&#x6211;&#x4EEC;&#x63A5;&#x89E6;&#x7684;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#xFF0C;&#x90FD;&#x662F;&#x4E00;&#x884C;&#x4E00;&#x5217;&#x5B58;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x662F;&#x5728;Mat&#x4E2D;&#xFF0C;&#x6709;&#x51E0;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x4E00;&#x884C;&#x4E00;&#x5217;&#x4E2D;&#x5C31;&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x51E0;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x5982;&#x679C;&#x4F7F;&#x7528;Mat&#x6765;&#x5B58;RGB&#x660E;&#x663E;&#x662F;&#x9700;&#x8981;&#x4E09;&#x901A;&#x9053;&#x6765;&#x5B58;&#xFF0C;&#x4E14;&#x770B;&#x4EE5;&#x4E0B;&#x56FE;&#x7247;&#xFF08;&#x6458;&#x81EA;&#xFF1A;https://blog.csdn.net/xiahouzuoxin/article/details/38298165&#xFF09;&#xFF1A; &#x5355;&#x901A;&#x9053; RGB&#x4E09;&#x901A;&#x9053; &#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x9009;&#x62E9;&#x4E86;CV_8UC3&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x7684;Mat&#x6765;&#x5B58;&#x653E;RGB&#x3002; &#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5751;&#xFF0C;&#x6211;&#x770B;&#x5230;&#x7F51;&#x4E0A;&#x8BF4;Scarla&#x5B58;&#x653E;&#x7684;&#x987A;&#x5E8F;&#x5176;&#x5B9E;&#x662F;BGR&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4E00;&#x5F00;&#x59CB;&#x4E5F;&#x662F;&#x6309;&#x8FD9;&#x4E2A;&#x987A;&#x5E8F;&#x53BB;&#x5B9A;&#x989C;&#x8272;&#xFF0C;&#x7ED3;&#x679C;&#x5C45;&#x7136;&#x84DD;&#x8272;&#x7ED9;&#x6211;&#x8BF4;&#x6210;&#x4E86;&#x7EA2;&#x8272;&#xFF0C;&#x7EA2;&#x8272;&#x53C8;&#x8BF4;&#x662F;&#x84DD;&#x8272;&#x3002;&#x6211;&#x624D;&#x610F;&#x8BC6;&#x5230;&#xFF0C;&#x5728;JAVA&#x8FD9;&#x91CC;&#xFF0C;Scarla&#x8FD8;&#x662F;&#x6309;&#x7167;RGB&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x7B80;&#x76F4;&#x6B32;&#x54ED;&#x65E0;&#x6CEA;&#xFF5E; OK&#xFF0C;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x770B;&#x3002;123456789101112131415161718public String label(Mat image, MatOfPoint contour){//&#x4F20;&#x5165;&#x6BCF;&#x4E2A;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;//&#x7531;&#x4E8E;&#x753B;&#x8F6E;&#x5ED3;&#x7684;&#x65F6;&#x5019;&#x662F;&#x9700;&#x8981;&#x4E00;&#x4E2A;list&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;list&#x6765;&#x5B58;&#x653E;&#x6BCF;&#x4E00;&#x4E2A;&#x56FE;&#x5F62;&#x8F6E;&#x5ED3;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x753B;&#x51FA;&#x6765;List&lt;MatOfPoint&gt; contours = new ArrayList&lt;&gt;();contours.add(contour);String label = &quot;unknown&quot;;//&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x65B0;&#x7684;mat&#x6765;&#x4E3A;&#x56FE;&#x5F62;&#x589E;&#x6DFB;&#x8499;&#x7248;Mat mask = Mat.zeros(image.rows(),image.cols(),0);//&#x6839;&#x636E;&#x8499;&#x7248;&#x6765;&#x753B;&#x8F6E;&#x5ED3;Imgproc.drawContours(mask,contours,-1,new Scalar(255,255,255),-1);//&#x8150;&#x8680;&#x5316;&#x56FE;&#x50CF;&#x7684;&#x7ED3;&#x6784;&#x5143;&#x7D20;&#xFF0C;&#x9ED8;&#x8BA4;&#x91C7;&#x7528;3*3&#x7684;&#x6B63;&#x65B9;&#x5F62;Mat kernel = Imgproc.getStructuringElement(Imgproc.MORPH_RECT, new Size(3, 3));Imgproc.erode(mask,mask,kernel,new Point(-1,-1),2);//&#x8BA1;&#x7B97;lab&#x548C;&#x8499;&#x7248;&#x7684;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;scalar&#x5BF9;&#x8C61;Scalar scalar = Core.mean(image,mask);//&#x7531;&#x4E8E;&#x4E0B;&#x9762;&#x8981;&#x8BA1;&#x7B97;scalar&#x548C;lab&#x7684;&#x6B27;&#x6C0F;&#x8DDD;&#x79BB;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4E0E;lab&#x7684;&#x5927;&#x5C0F;&#x548C;&#x7C7B;&#x578B;&#x90FD;&#x4E00;&#x6837;&#x7684;matMat mean = new Mat(1,1,CvType.CV_8UC3,scalar); &#x5148;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x51FD;&#x6570;label&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8BC6;&#x522B;&#x56FE;&#x50CF;image&#x548C;&#x8F6E;&#x5ED3;contour&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x3002;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x89E3;&#x51B3;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x4F55;&#x8BA1;&#x7B97;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#x3002;&#x9996;&#x5148;&#x770B;&#x5230;drawContours&#x90A3;&#x91CC;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x6267;&#x884C;&#x5230;&#x90A3;&#x91CC;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x56FE;&#x4E0A;&#x7684;&#x4E00;&#x4E2A;&#x5F62;&#x72B6;&#x88AB;&#x753B;&#x51FA;&#x6765;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x662F;&#x5B9E;&#x5FC3;&#x767D;&#x8272;&#x7684;&#x3002;(PS:Adrain&#x5927;&#x795E;&#x7684;&#x4EE3;&#x7801;&#x57FA;&#x672C;&#x90FD;&#x662F;&#x628A;&#x524D;&#x666F;&#x53D8;&#x767D;&#x8272;&#xFF0C;&#x80CC;&#x666F;&#x4E3A;&#x9ED1;&#x8272;&#x6765;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x3002;)&#xFF0C;&#x753B;&#x51FA;&#x6765;&#x7684;&#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x8FD9;&#x6837;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x53EA;&#x8BA1;&#x7B97;&#x8499;&#x7248;&#x4E86;&#x7684;&#x5F62;&#x72B6;&#xFF0C;&#x5373;&#x767D;&#x8272;&#x5F62;&#x72B6;&#xFF0C;&#x7B80;&#x5316;&#x4E86;&#x8BA1;&#x7B97;&#x91CF;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x8FD8;&#x4F7F;&#x7528;&#x56FE;&#x50CF;&#x8150;&#x8680;&#xFF0C;&#x7528;&#x56FE;&#x50CF;&#x8150;&#x8680;&#xFF0C;&#x66F4;&#x6709;&#x5229;&#x4E8E;&#x5F62;&#x72B6;&#x7684;&#x5206;&#x5272;&#x3002;&#x5728;erode&#x7684;&#x65F6;&#x5019;&#x9047;&#x5230;&#x4E86;&#x95EE;&#x9898;&#xFF0C;&#x7531;&#x4E8E;&#x539F;&#x672C;&#x7684;python&#x4EE3;&#x7801;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;mask = cv2.erode(mask, None, iterations=2)&#xFF0C;&#x800C;JAVA&#x4EE3;&#x7801;&#x8981;&#x6C42;&#x7684;&#x53C2;&#x6570;&#x6BD4;&#x8F83;&#x591A;&#xFF0C;&#x662F;&#x8FD9;&#x6837;public static void erode(Mat src, Mat dst, Mat kernel, Point anchor, int iterations)&#x3002;&#x6700;&#x540E;&#x5728;opencv&#x7684;library&#x4E2D;&#x627E;&#x5230;&#x89E3;&#x91CA;&#xFF0C;&#x53D1;&#x73B0;kernel&#x548C;anchor&#x5176;&#x5B9E;&#x6709;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x53EA;&#x9700;&#x628A;&#x9ED8;&#x8BA4;&#x503C;&#x4EE3;&#x5165;&#x5C31;&#x884C;&#xFF1A;&#x2022; element &#x2013; structuring element used for erosion; if element=Mat() , a 3 x 3 rectangular structuring element is used.&#x2022; anchor &#x2013; position of the anchor within the element; default value (-1, -1) means that the anchor is at the element center. &#x63A5;&#x7740;&#x8981;&#x7B97;&#x56FE;&#x7247;&#x533A;&#x57DF;&#x7684;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;mean&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5F88;&#x5751;&#x3002;&#x4E00;&#x5F00;&#x59CB;&#x770B;&#x7740;&#x6559;&#x7A0B;&#x6211;&#x4F20;&#x5165;&#x4E86;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x4F46;&#x4E00;&#x76F4;&#x62A5;&#x9519;&#xFF0C;&#x8BF4;mask.empty()||mask.type==0&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4E00;&#x76F4;&#x4EE5;&#x4E3A;&#x662F;&#x6211;&#x4F20;&#x5165;&#x7684;mask&#x7684;&#x503C;&#x662F;&#x7A7A;&#x503C;&#x6240;&#x4EE5;&#x62A5;&#x9519;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x6D4B;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x6211;&#x4F20;&#x8FDB;&#x53BB;&#x7684;mask&#x4E0D;&#x4E3A;&#x7A7A;&#x554A;&#xFF0C;&#x800C;&#x4E14;&#x7C7B;&#x578B;&#x4E5F;&#x4E0D;&#x662F;0&#x3002;&#x5728;opencv&#x7684;library&#x4E2D;&#x6307;&#x51FA;&#xFF1A;C++: Scalar mean(InputArray src, InputArray mask=noArray())&#xFF0C;&#x4F46;&#x7531;&#x4E8E;&#x5B83;&#x540E;&#x9762;&#x5BF9;mask&#x7684;&#x89E3;&#x91CA;&#x662F;&#x201C;&#x53EF;&#x9009;&#x62E9;&#x201D;&#x5BF9;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4E00;&#x76F4;&#x5FFD;&#x7565;&#x4E86;mask=noArray()&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#xFF0C;&#x540E;&#x6765;&#x4E0D;&#x65AD;&#x67E5;&#x8D44;&#x6599;&#x6539;&#x4EE3;&#x7801;&#x540E;&#x624D;&#x53D1;&#x73B0;&#xFF0C;&#x4E4B;&#x524D;&#x62A5;&#x9519;&#x7684;&#x6240;&#x8BF4;&#x7684;&#x4E1C;&#x897F;&#x4E0D;&#x662F;&#x6307;&#x6211;&#x54EA;&#x91CC;&#x9519;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x63D0;&#x793A;&#x6211;mask&#x5E94;&#x8BE5;&#x662F;&#x8981;&#x6309;&#x7167;&#x63D0;&#x793A;&#x90A3;&#x6837;&#x7684;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x6700;&#x540E;&#x628A;mask&#x7684;&#x7C7B;&#x578B;&#x6539;&#x6210;0&#xFF0C;&#x624D;&#x7EC8;&#x4E8E;&#x6210;&#x529F;(&#x5F00;&#x5FC3;&#x5230;&#x6CEA;&#x6D41;&#x6EE1;&#x9762;&#x3112;o&#x3112;)&#x3002;&#x6FC0;&#x52A8;&#x5B8C;&#x6BD5;&#xFF0C;&#x7EE7;&#x7EED;&#xFF1A;123456789101112131415//&#x8BA1;&#x7B97;&#x5E73;&#x5747;&#x503C;&#x8DDF;&#x5404;&#x4E2A;&#x989C;&#x8272;&#x7684;lab&#x7684;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;double dis = Integer.MAX_VALUE;int min = 0;for (int i=0;i&lt;3;i++){ double d = Core.norm(labMat[i],mean); if (d&lt;dis){ dis = d; min = i; }}//&#x5F97;&#x5230;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;&#x7684;&#x989C;&#x8272;&#x5373;&#x4E3A;&#x8BE5;&#x5F62;&#x72B6;&#x7684;&#x989C;&#x8272;label = colorNames[min];return label; &#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x8BA1;&#x7B97;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#x5566;&#x3002;&#x628A;&#x4E4B;&#x524D;&#x7B97;&#x51FA;&#x6765;&#x7684;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x4E0E;&#x7EA2;&#x8272;&#x3001;&#x7EFF;&#x8272;&#x3001;&#x84DD;&#x8272;&#x7684;lab&#x503C;&#x505A;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#x8BA1;&#x7B97;&#xFF0C;&#x9009;&#x51FA;&#x8DDD;&#x79BB;&#x6700;&#x5C0F;&#x7684;&#x90A3;&#x4E2A;lab&#x4F5C;&#x4E3A;&#x8BE5;&#x5F62;&#x72B6;&#x7684;&#x989C;&#x8272;&#x3002;ok&#xFF0C;&#x989C;&#x8272;&#x6807;&#x8BC6;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x603B;&#x7B97;&#x662F;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#x8DDF;&#x4EE5;&#x524D;&#x4E00;&#x6837;&#x5566;&#x3002;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849//&#x8BFB;&#x5165;&#x56FE;&#x7247; Bitmap srcBitmap; srcBitmap = BitmapFactory.decodeResource(getResources(), id); //&#x5EFA;&#x7ACB;&#x51E0;&#x4E2A;Mat&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61; Mat rgbMat = new Mat(); Mat grayMat = new Mat(); Mat blur1 = new Mat(); //&#x5C06;&#x539F;&#x59CB;&#x7684;bitmap&#x8F6C;&#x6362;&#x4E3A;mat&#x578B;. Utils.bitmapToMat(srcBitmap, rgbMat); //&#x4EE5;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x7CCA;&#x534A;&#x5F84;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x6A21;&#x7CCA;&#x5904;&#x7406;,&#x524D;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x662F;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x5E94;&#x7528;&#x6EE4;&#x6CE2;&#x5668;&#x65F6;&#x6240;&#x7528;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x6807;&#x51C6;&#x5DEE;&#x6570;&#x503C; Imgproc.GaussianBlur(rgbMat, blur1, new Size(5, 5), 0); //&#x5C06;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x4E3A;&#x7070;&#x5EA6; Imgproc.cvtColor(blur1, grayMat, Imgproc.COLOR_BGR2GRAY); //&#x5C06;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x4E3A;lab Mat labMat = new Mat(blur1.size(),blur1.type()); Imgproc.cvtColor(blur1,labMat,Imgproc.COLOR_RGB2Lab); //&#x56FE;&#x7247;&#x4E8C;&#x503C;&#x5316; Imgproc.threshold(grayMat, grayMat, 60, 255, Imgproc.THRESH_BINARY); //&#x5BFB;&#x627E;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3; List&lt;MatOfPoint&gt; contours = new ArrayList&lt;&gt;(); Mat hierarchy = new Mat(); Imgproc.findContours(grayMat, contours, hierarchy, Imgproc.RETR_EXTERNAL, Imgproc.CHAIN_APPROX_SIMPLE); //&#x52A0;&#x8F7D;&#x989C;&#x8272;&#x6807;&#x7B7E;&#x7684;&#x7C7B; ColorLabeler cl = new ColorLabeler(); for (MatOfPoint c : contours) { //&#x8BA1;&#x7B97;&#x8F6E;&#x5ED3;&#x7684;&#x4E2D;&#x5FC3;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x4E2D;&#x5FC3;&#x786E;&#x5B9A;&#x5F62;&#x72B6; Moments m = Imgproc.moments(c); int cx = (int) (m.m10 / m.m00 ); int cy = (int) (m.m01 / m.m00 );//&#x4F20;&#x5165;&#x56FE;&#x7247;&#x548C;&#x6BCF;&#x4E2A;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3; String label = cl.label(labMat,c); //&#x753B;&#x8F6E;&#x5ED3; Imgproc.drawContours(rgbMat, contours, -1, new Scalar(0, 255, 0), 2); //&#x5728;&#x4E2D;&#x5FC3;&#x663E;&#x793A;&#x6587;&#x5B57; Imgproc.putText(rgbMat, label, new Point(cx , cy ), Core.FONT_HERSHEY_SIMPLEX, 0.5, new Scalar(255, 255, 255), 2); //&#x5C06;Mat&#x8F6C;&#x6362;&#x4E3A;&#x4F4D;&#x56FE; Bitmap grayBitmap= Bitmap.createBitmap(srcBitmap.getWidth(), srcBitmap.getHeight(), Bitmap.Config.RGB_565); Utils.matToBitmap(rgbMat, grayBitmap); img.setImageBitmap(grayBitmap); } &#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x4F20;&#x5165;&#x56FE;&#x7247;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x6BCF;&#x4E2A;&#x56FE;&#x5F62;&#x7684;&#x989C;&#x8272;&#x5199;&#x51FA;&#x6765;&#xFF0C;&#x5177;&#x4F53;&#x5C31;&#x4E0D;&#x518D;&#x89E3;&#x91CA;&#x5566;&#x3002;&#x6700;&#x7EC8;&#x6548;&#x679C;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; &#x8865;&#x4E0A;Adrain&#x5927;&#x795E;&#x7684;&#x6559;&#x7A0B;&#xFF1A;https://www.pyimagesearch.com/2016/02/15/determining-object-color-with-opencv/ &#x4E8E;&#x662F;&#x7EC8;&#x4E8E;&#xFF0C;&#x6211;&#x5B66;&#x5B8C;&#x4E86;Adrain&#x5927;&#x795E;&#x7684;&#x8FD9;&#x4E09;&#x4E2A;&#x6559;&#x7A0B;&#xFF0C;&#x7B80;&#x76F4;&#x611F;&#x52A8;&#x3002;Adrain&#x5927;&#x795E;&#x771F;&#x7684;&#x5F88;&#x597D;&#x4EBA;&#xFF0C;&#x4E0D;&#x4EC5;&#x63A8;&#x8350;&#x4E86;&#x4E66;&#x7C4D;&#xFF0C;&#x800C;&#x4E14;&#x4ED6;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;17&#x5929;&#x6559;&#x7A0B;&#xFF0C;&#x6240;&#x8C13;&#x6559;&#x7A0B;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4ED6;&#x628A;&#x4ED6;&#x5199;&#x8FC7;&#x7684;&#x6559;&#x7A0B;&#x6587;&#x7AE0;&#x6BCF;&#x5929;&#x7ED9;&#x6211;&#x63A8;&#x9001;&#x4E00;&#x7BC7;&#x3002;&#x867D;&#x7136;&#x5168;&#x82F1;&#x5F88;&#x75DB;&#x82E6;&#xFF0C;&#x4F46;&#x597D;&#x5728;&#x81EA;&#x5DF1;&#x6709;&#x90A3;&#x4E48;&#x4E00;&#x70B9;&#x5E95;&#x5B50;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x4E5F;&#x4E0D;&#x7B97;&#x5F88;&#x7D2F;&#xFF0C;&#x4E5F;&#x5E78;&#x597D;python&#x4EE3;&#x7801;&#x4E0D;&#x7B97;&#x5F88;&#x96BE;&#x770B;&#xFF0C;&#x6211;&#x4E5F;&#x624D;&#x80FD;&#x8FD0;&#x7528;&#x5728;Android&#x4E0A;&#x3002;&#x5E0C;&#x671B;&#x7ECF;&#x8FC7;17&#x5929;&#x540E;&#xFF0C;&#x6211;&#x80FD;&#x5927;&#x6982;&#x4E86;&#x89E3;OpenCV&#xFF0C;&#x4EE5;&#x53CA;&#x63D0;&#x5347;&#x82F1;&#x8BED;&#x80FD;&#x529B;2333&#x3002;&#x6700;&#x540E;&#x8865;&#x4E0A;&#x8FD9;&#x4E09;&#x4E2A;&#x6559;&#x7A0B;&#x6211;&#x5199;&#x7684;Android&#x5B8C;&#x6574;&#x4EE3;&#x7801;&#xFF1A;https://github.com/SecretLin/shape-detection-with-OpenCV/tree/master &#x4EE3;&#x7801;&#x53EF;&#x80FD;&#x5199;&#x5F97;&#x4E0D;&#x597D;&#xFF0C;&#x5E0C;&#x671B;&#x61C2;&#x884C;&#x7684;&#x5927;&#x4F6C;&#x591A;&#x591A;&#x6307;&#x6559;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"Android","slug":"Android","permalink":"https://secretlin.github.io/blog/tags/Android/"}]},{"title":"利用Android+OpenCV来识别形状","date":"2018-07-20T12:06:44.809Z","path":"/posts/b5e5a6bd/","text":"&#x5728;&#x4E0A;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x4E2D;&#xFF0C;&#x5199;&#x51FA;&#x4E86;&#x5982;&#x4F55;&#x753B;&#x51FA;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;&#x3002;&#x800C;&#x8FD9;&#x4E00;&#x6B21;&#xFF0C;&#x5219;&#x5728;&#x4E0A;&#x4E00;&#x6B21;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x901A;&#x8FC7;&#x5BF9;&#x8F6E;&#x5ED3;&#x7684;&#x7279;&#x5F81;&#x6765;&#x5224;&#x65AD;&#x56FE;&#x5F62;&#x662F;&#x4EC0;&#x4E48;&#x5F62;&#x72B6;&#x3002;&#x8FD9;&#x4E00;&#x6B21;&#x4F7F;&#x7528;&#x7684;&#x56FE;&#x8FD8;&#x662F;&#x4E0A;&#x4E00;&#x6B21;&#x7684;&#x90A3;&#x5F20;&#x56FE;&#x3002; &#x9996;&#x5148;&#xFF0C;&#x5148;&#x6765;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x7C7B;ShapeDetector&#xFF0C;&#x7136;&#x540E;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x51FD;&#x6570;detect(MatOfPoint2f c)&#x7528;&#x4E8E;&#x8BC6;&#x522B;&#x5F62;&#x72B6;&#x8BC6;&#x522B;&#x3002;123456String shape = &quot;unknown&quot;;//&#x8BA1;&#x7B97;&#x8F6E;&#x5ED3;&#x7684;&#x5468;&#x957F;double peri = Imgproc.arcLength(c,true);MatOfPoint2f approx = new MatOfPoint2f();//&#x5F97;&#x5230;&#x8F6E;&#x5ED3;&#x7684;&#x5927;&#x6982;Imgproc.approxPolyDP(c,approx,0.04 * peri,true); &#x8FD9;&#x91CC;&#x5F15;&#x5165;&#x4E86;contour approximation&#xFF0C;&#x8F6E;&#x5ED3;&#x8FD1;&#x4F3C;&#xFF0C;&#x7531;&#x4E8E;&#x6015;&#x7FFB;&#x8BD1;&#x5F97;&#x4E0D;&#x597D;&#xFF0C;&#x4E0B;&#x6587;&#x7EE7;&#x7EED;&#x91C7;&#x7528;contour approximation&#x3002;&#x8FD9;&#x79CD;&#x8FD1;&#x4F3C;&#x662F;&#x6E90;&#x4E8E;Ramer&#x2013;Douglas&#x2013;Peucker algorithm&#x7B97;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x7684;&#x5927;&#x6982;&#x610F;&#x601D;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5229;&#x7528;&#x7EBF;&#x6BB5;&#x6765;&#x8FD1;&#x4F3C;&#x63CF;&#x7ED8;&#x66F2;&#x7EBF;&#xFF0C;&#x4EE5;&#x51CF;&#x5C11;&#x6E90;&#x66F2;&#x7EBF;&#x7684;&#x70B9;&#x6570;&#x3002;&#xFF08;&#x60F3;&#x8981;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x7684;&#x5C0F;&#x4F19;&#x4F34;&#x53EF;&#x4EE5;&#x53BB;&#x767E;&#x5EA6;&#x4E86;&#x89E3;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x8BE6;&#x7EC6;&#x89E3;&#x91CA;&#x3002;&#xFF09;&#x5728;OpenCV&#x5E93;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;Imgproc.approxPolyDP()&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;contour approximation&#x3002;&#x800C;&#x4E3A;&#x4E86;&#x53D6;&#x5F97;contour approximation&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x5148;&#x5F97;&#x5230;&#x8F6E;&#x5ED3;&#x7684;&#x5468;&#x957F;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4EE5;&#x6B64;&#x6765;&#x5F97;&#x5230;&#x8FD1;&#x4F3C;&#x3002; public static void approxPolyDP(MatOfPoint2f curve, MatOfPoint2f approxCurve, double epsilon, boolean closed)&#x53C2;&#x6570;&#x8BE6;&#x89E3;&#x5982;&#x4E0B;&#xFF1A; MatOfPoint2f curve:&#x4E00;&#x822C;&#x662F;&#x7531;&#x56FE;&#x50CF;&#x7684;&#x8F6E;&#x5ED3;&#x70B9;&#x7EC4;&#x6210;&#x7684;&#x70B9;&#x96C6;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x662F;&#x4F7F;&#x7528;&#x4E4B;&#x524D;&#x6240;&#x5F97;&#x5230;&#x7684;&#x8F6E;&#x5ED3; MatOfPoint2f approxCurve&#xFF1A;&#x8868;&#x793A;&#x8F93;&#x51FA;&#x7684;&#x8F6E;&#x5ED3;&#x8FD1;&#x4F3C;contour approximation double epsilon&#xFF1A;&#x4E3B;&#x8981;&#x8868;&#x793A;&#x8F93;&#x51FA;&#x7684;&#x7CBE;&#x5EA6;&#xFF0C;&#x5C31;&#x662F;&#x4E24;&#x4E2A;&#x8F6E;&#x5ED3;&#x70B9;&#x4E4B;&#x95F4;&#x6700;&#x5927;&#x8DDD;&#x79BB;&#x6570;&#xFF0C;&#x5E38;&#x7528;&#x503C;&#x901A;&#x5E38;&#x5728;&#x539F;&#x59CB;&#x8F6E;&#x5ED3;&#x5468;&#x957F;&#x7684;1-5&#xFF05;&#x8303;&#x56F4;&#x5185;&#x3002; boolean closed&#xFF1A;&#x8868;&#x793A;&#x8F93;&#x51FA;&#x7684;&#x591A;&#x8FB9;&#x5F62;&#x662F;&#x5426;&#x5C01;&#x95ED; ps:&#x60F3;&#x8981;&#x4E86;&#x89E3;&#x66F4;&#x591A;contour approximation&#xFF0C;&#x6211;&#x4E4B;&#x524D;&#x63D0;&#x5230;&#x7684;&#x5916;&#x56FD;&#x4F5C;&#x8005;Adrian&#x4E5F;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x94FE;&#x63A5;&#xFF1A;https://www.pyimagesearch.com/pyimagesearch-gurus/ &#x5F53;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x4E86;&#x8F6E;&#x5ED3;&#x7684;&#x8FD1;&#x4F3C;&#x66F2;&#x7EBF;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8F6E;&#x5ED3;&#x66F2;&#x7EBF;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x9876;&#x70B9;&#x6765;&#x5224;&#x65AD;&#x662F;&#x4EC0;&#x4E48;&#x5F62;&#x72B6;&#xFF1A;123456789101112131415161718192021222324252627282930//&#x5982;&#x679C;&#x662F;&#x4E09;&#x89D2;&#x5F62;&#x5F62;&#x72B6;&#xFF0C;&#x5219;&#x6709;&#x4E09;&#x4E2A;&#x9876;&#x70B9;if (approx.toList().size()==3){ shape = &quot;triangle&quot;;}//&#x5982;&#x679C;&#x6709;&#x56DB;&#x4E2A;&#x9876;&#x70B9;&#xFF0C;&#x5219;&#x662F;&#x6B63;&#x65B9;&#x5F62;&#x6216;&#x8005;&#x957F;&#x65B9;&#x5F62;else if (approx.toList().size()==4){ //&#x8BA1;&#x7B97;&#x8F6E;&#x5ED3;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x5E76;&#x4F7F;&#x7528;&#x8FB9;&#x754C;&#x6846;&#x6765;&#x8BA1;&#x7B97;&#x5BBD;&#x9AD8;&#x6BD4; Rect rect = new Rect(); rect = Imgproc.boundingRect(new MatOfPoint(approx.toArray())); float ar = rect.width/(float)rect.height; //&#x6B63;&#x65B9;&#x5F62;&#x7684;&#x5BBD;&#x9AD8;&#x6BD4;&#x63A5;&#x8FD1;&#x4E3A;1&#xFF0C;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#x5C31;&#x4E3A;&#x957F;&#x65B9;&#x5F62; if (ar&gt;=0.95 &amp;&amp; ar&lt;=1.05){ shape = &quot;square&quot;; }else { shape = &quot;rectangle&quot;; }}//&#x5982;&#x679C;&#x662F;&#x4E94;&#x89D2;&#x5F62;&#xFF0C;&#x5219;&#x6709;&#x4E94;&#x4E2A;&#x9876;&#x70B9;else if (approx.toList().size()==5){ shape = &quot;pentagon&quot;;}//&#x9664;&#x4E86;&#x4EE5;&#x4E0A;&#x60C5;&#x51B5;&#x4E4B;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x4E3A;&#x5706;&#x5F62;else { shape = &quot;circle&quot;;} &#x8FD9;&#x91CC;&#x5FC5;&#x987B;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8F6E;&#x5ED3;&#x66F2;&#x7EBF;&#x662F;&#x7531;&#x9876;&#x70B9;&#x5217;&#x8868;&#x7EC4;&#x6210;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x624D;&#x53EF;&#x4EE5;&#x4EE5;&#x6B64;&#x6765;&#x5224;&#x65AD;&#x5F62;&#x72B6;&#x3002;&#x5982;&#x4E0A;&#x4EE3;&#x7801;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x8F6E;&#x5ED3;&#x6709;&#x4E09;&#x4E2A;&#x70B9;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8BF4;&#x660E;&#x8BE5;&#x5F62;&#x72B6;&#x6709;&#x4E09;&#x4E2A;&#x9876;&#x70B9;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x786E;&#x8BA4;&#x662F;&#x4E09;&#x89D2;&#x5F62;&#x3002;&#x800C;&#x5BF9;&#x4E8E;&#x56DB;&#x4E2A;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x5224;&#x65AD;&#x662F;&#x6B63;&#x65B9;&#x5F62;&#x8FD8;&#x662F;&#x957F;&#x65B9;&#x5F62;&#x3002;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#xFF0C;&#x6B63;&#x65B9;&#x5F62;&#x56DB;&#x6761;&#x8FB9;&#x4E00;&#x6837;&#x957F;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x56FE;&#x5F62;&#x7684;&#x5BBD;&#x9AD8;&#x6BD4;&#x6765;&#x505A;&#x8FDB;&#x4E00;&#x6B65;&#x786E;&#x8BA4;&#x3002;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;boundingRect()&#x662F;&#x6307;&#x7528;&#x4E00;&#x4E2A;&#x6700;&#x5C0F;&#x7684;&#x77E9;&#x5F62;&#xFF0C;&#x628A;&#x627E;&#x5230;&#x7684;&#x5F62;&#x72B6;&#x5305;&#x8D77;&#x6765;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x77E9;&#x5F62;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8BA1;&#x7B97;&#x5BBD;&#x9AD8;&#x6BD4;&#x3002;&#x4ECE;&#x4E00;&#x5F00;&#x59CB;&#x6240;&#x7ED9;&#x7684;&#x56FE;&#x7247;&#x4E2D;&#xFF0C;&#x5F53;&#x6392;&#x9664;&#x4E86;&#x6240;&#x6709;&#x7684;&#x6709;&#x89D2;&#x7684;&#x56FE;&#x5F62;&#x540E;&#xFF0C;&#x53EA;&#x5269;&#x4E0B;&#x5706;&#x5F62;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x7C97;&#x7565;&#x628A;&#x5176;&#x4ED6;&#x60C5;&#x51B5;&#x89C6;&#x4E3A;&#x5706;&#x5F62;&#x3002;ps:&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x4E0D;&#x65AD;&#x8F6C;&#x6362;MatOfPoint2f&#x548C;MatOfPoint&#x81F3;&#x6B64;&#xFF0C;&#x5F62;&#x72B6;&#x68C0;&#x6D4B;&#x7684;&#x51FD;&#x6570;&#x5B8C;&#x6210;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x5C31;&#x662F;&#x50CF;&#x4E4B;&#x524D;&#x4E00;&#x6837;&#xFF0C;&#x5BFB;&#x627E;&#x5404;&#x4E2A;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;&#x3002;&#x7531;&#x4E8E;&#x4E4B;&#x524D;&#x5DF2;&#x7ECF;&#x89E3;&#x91CA;&#x8FC7;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x518D;&#x89E3;&#x91CA;&#x4E0B;&#x9762;&#x5404;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x7528;&#x6CD5;&#x3002;12345678910111213141516171819202122//&#x8BFB;&#x5165;&#x56FE;&#x7247;Bitmap srcBitmap;srcBitmap = BitmapFactory.decodeResource(getResources(), id);//&#x5EFA;&#x7ACB;&#x51E0;&#x4E2A;Mat&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;Mat rgbMat = new Mat();Mat grayMat = new Mat();Mat blur1 = new Mat();//&#x5C06;&#x539F;&#x59CB;&#x7684;bitmap&#x8F6C;&#x6362;&#x4E3A;mat&#x578B;.Utils.bitmapToMat(srcBitmap, rgbMat);//&#x5C06;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x4E3A;&#x7070;&#x5EA6;Imgproc.cvtColor(rgbMat, grayMat, Imgproc.COLOR_BGR2GRAY);//&#x4EE5;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x7CCA;&#x534A;&#x5F84;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x6A21;&#x7CCA;&#x5904;&#x7406;,&#x524D;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x662F;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x5E94;&#x7528;&#x6EE4;&#x6CE2;&#x5668;&#x65F6;&#x6240;&#x7528;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x6807;&#x51C6;&#x5DEE;&#x6570;&#x503C;Imgproc.GaussianBlur(grayMat, blur1, new Size(5, 5), 0);//&#x56FE;&#x7247;&#x4E8C;&#x503C;&#x5316;Imgproc.threshold(blur1, blur1, 60, 255, Imgproc.THRESH_BINARY);//&#x5BFB;&#x627E;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;List&lt;MatOfPoint&gt; contours = new ArrayList&lt;&gt;();Mat hierarchy = new Mat();Imgproc.findContours(blur1, contours, hierarchy, Imgproc.RETR_EXTERNAL, Imgproc.CHAIN_APPROX_SIMPLE); &#x5F53;&#x627E;&#x5230;&#x8F6E;&#x5ED3;&#x540E;&#xFF0C;&#x5C31;&#x8981;&#x5F00;&#x59CB;&#x753B;&#x8F6E;&#x5ED3;&#x5E76;&#x6807;&#x8BB0;&#x6240;&#x5C5E;&#x5F62;&#x72B6;&#x3002;&#x6807;&#x8BB0;&#x662F;&#x628A;&#x4E4B;&#x524D;&#x7684;&#x6587;&#x5B57;center&#x53D8;&#x6210;&#x4E86;&#x5F62;&#x72B6;&#x7684;&#x540D;&#x79F0;&#x3002;12345678910111213141516171819//&#x52A0;&#x8F7D;&#x5F62;&#x72B6;&#x68C0;&#x6D4B;&#x7684;&#x7C7B;ShapeDetector sd = new ShapeDetector();for (MatOfPoint c : contours) { //&#x8BA1;&#x7B97;&#x8F6E;&#x5ED3;&#x7684;&#x4E2D;&#x5FC3;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x4E2D;&#x5FC3;&#x786E;&#x5B9A;&#x5F62;&#x72B6; Moments m = Imgproc.moments(c); int cx = (int) (m.m10 / m.m00 ); int cy = (int) (m.m01 / m.m00 ); String shape = sd.detect(new MatOfPoint2f(c.toArray())); //&#x753B;&#x8F6E;&#x5ED3; Imgproc.drawContours(rgbMat, contours, -1, new Scalar(0, 255, 0), 2); //&#x5728;&#x4E2D;&#x5FC3;&#x663E;&#x793A;&#x6587;&#x5B57; Imgproc.putText(rgbMat, shape, new Point(cx , cy ), Core.FONT_HERSHEY_SIMPLEX, 0.5, new Scalar(255, 255, 255), 2); //&#x5C06;Mat&#x8F6C;&#x6362;&#x4E3A;&#x4F4D;&#x56FE; Bitmap grayBitmap= Bitmap.createBitmap(srcBitmap.getWidth(), srcBitmap.getHeight(), Bitmap.Config.RGB_565); Utils.matToBitmap(rgbMat, grayBitmap); img.setImageBitmap(grayBitmap);} &#x6548;&#x679C;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; &#x6548;&#x679C;&#x56FE; &#x6700;&#x540E;&#x518D;&#x6B21;&#x9644;&#x4E0A;Adrian&#x7684;&#x6559;&#x7A0B;&#xFF1A;https://www.pyimagesearch.com/2016/02/08/opencv-shape-detection/ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"Android","slug":"Android","permalink":"https://secretlin.github.io/blog/tags/Android/"}]},{"title":"利用Android+OpenCV来绘制图形轮廓中心","date":"2018-07-20T12:05:28.040Z","path":"/posts/c76e505d/","text":"&#x5728;&#x4E4B;&#x524D;&#x7684;&#x6587;&#x7AE0;&#x5DF2;&#x7ECF;&#x63D0;&#x5230;&#x5982;&#x4F55;&#x5728;android&#x4E2D;&#x8FD0;&#x7528;OpenCV&#xFF0C;&#x8FD9;&#x6B21;&#x5C31;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;&#x5728;&#x4E00;&#x4E2A;&#x5916;&#x56FD;&#x535A;&#x4E3B;&#x770B;&#x5230;&#x7684;&#x51E0;&#x7BC7;OpenCV+Python&#x7684;&#x535A;&#x5BA2;&#x540E;&#xFF0C;&#x81EA;&#x5DF1;&#x518D;&#x7528;android&#x5199;&#x4E0B;&#x6765;&#x7684;&#x51E0;&#x4E2A;&#x5C0F;&#x6848;&#x4F8B;&#x3002;&#x8FD9;&#x6B21;&#x8BB0;&#x5F55;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x4F55;&#x628A;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;&#x4E2D;&#x5FC3;&#x63CF;&#x7ED8;&#x51FA;&#x6765;&#x3002;&#x4EE5;&#x4E0B;&#x56FE;&#x7247;&#x662F;&#x6B64;&#x6B21;&#x4F7F;&#x7528;&#x7684;&#x56FE;&#x7247; shapes_and_colors &#x4ECE;&#x6B64;&#x56FE;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x5F20;&#x6709;&#x591A;&#x4E2A;&#x4E0D;&#x540C;&#x5F62;&#x72B6;&#x7684;&#x56FE;&#xFF0C;&#x6B64;&#x6B21;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x662F;&#x628A;&#x56FE;&#x7247;&#x4E2D;&#x5404;&#x4E2A;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;&#x753B;&#x51FA;&#x6765;&#xFF0C;&#x5E76;&#x6807;&#x6CE8;&#x51FA;&#x5F62;&#x72B6;&#x7684;&#x4E2D;&#x5FC3;&#x3002;&#x800C;&#x8981;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x76EE;&#x6807;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5148;&#x505A;:-&#x5C06;&#x56FE;&#x7247;&#x7070;&#x5EA6;&#x5316;-&#x5C06;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x6A21;&#x7CCA;&#x964D;&#x566A;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x5F97;&#x8F6E;&#x5ED3;&#x7684;&#x63CF;&#x7ED8;&#x66F4;&#x52A0;&#x51C6;&#x786E;-&#x5C06;&#x56FE;&#x7247;&#x4E8C;&#x503C;&#x5316;&#x3002;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x7528;&#x4E8E;&#x56FE;&#x7247;&#x4E8C;&#x503C;&#x5316;&#x7684;&#x662F;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x548C;&#x9608;&#x503C;&#x5904;&#x7406;&#xFF0C;&#x5728;&#x6B64;&#x6B21;&#x5C0F;&#x9879;&#x76EE;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x9608;&#x503C;&#x5904;&#x7406; &#x9996;&#x5148;&#x6211;&#x4EEC;&#x5148;&#x8BFB;&#x53D6;&#x56FE;&#x7247;&#xFF0C;&#x518D;&#x5BF9;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x5904;&#x7406;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;12345678910111213141516171819202122//&#x8BFB;&#x5165;&#x56FE;&#x7247;Bitmap srcBitmap;srcBitmap = BitmapFactory.decodeResource(getResources(), id);//&#x5EFA;&#x7ACB;&#x51E0;&#x4E2A;Mat&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;Mat rgbMat = new Mat();Mat grayMat = new Mat();Mat blur1 = new Mat();//&#x5C06;&#x539F;&#x59CB;&#x7684;bitmap&#x8F6C;&#x6362;&#x4E3A;mat&#x578B;.Utils.bitmapToMat(srcBitmap, rgbMat);//&#x5C06;&#x56FE;&#x50CF;&#x8F6C;&#x6362;&#x4E3A;&#x7070;&#x5EA6;Imgproc.cvtColor(rgbMat, grayMat, Imgproc.COLOR_BGR2GRAY);//&#x4EE5;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x7CCA;&#x534A;&#x5F84;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x6A21;&#x7CCA;&#x5904;&#x7406;,&#x524D;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x662F;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x56FE;&#x50CF;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x5E94;&#x7528;&#x6EE4;&#x6CE2;&#x5668;&#x65F6;&#x6240;&#x7528;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x6807;&#x51C6;&#x5DEE;&#x6570;&#x503C;Imgproc.GaussianBlur(grayMat, blur1, new Size(5, 5), 0);//&#x56FE;&#x7247;&#x4E8C;&#x503C;&#x5316;Imgproc.threshold(blur1, blur1, 60, 255, Imgproc.THRESH_BINARY);//&#x5C06;&#x5904;&#x7406;&#x540E;&#x7684;&#x56FE;&#x7247;&#x663E;&#x793A;&#x51FA;&#x6765;Bitmap grayBitmap;grayBitmap = Bitmap.createBitmap(srcBitmap.getWidth(), srcBitmap.getHeight(), Bitmap.Config.RGB_565);Utils.matToBitmap(blur1, grayBitmap);img.setImageBitmap(grayBitmap); &#x4EE3;&#x7801;1-2&#x884C;&#x4E3B;&#x8981;&#x662F;&#x901A;&#x8FC7;Bitmap&#x8BFB;&#x5165;&#x56FE;&#x7247;&#xFF0C;&#x6211;&#x662F;&#x628A;&#x56FE;&#x7247;&#x653E;&#x5728;&#x9879;&#x76EE;&#x7684;mipmap&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x6765;&#x76F4;&#x63A5;&#x8BFB;&#x53D6;&#x3002;&#x4EE3;&#x7801;6-11&#x662F;&#x5229;&#x7528;mat&#x7C7B;&#x6765;&#x5B58;&#x50A8;&#x56FE;&#x7247;&#x4FE1;&#x606F;&#xFF0C;&#x5728;OpenCV&#x4E2D;&#xFF0C;&#x662F;&#x901A;&#x8FC7;mat&#x7C7B;&#x6765;&#x64CD;&#x4F5C;&#x56FE;&#x7247;&#x5185;&#x5BB9;&#x3002;&#x57FA;&#x672C;&#x4E0A;&#x8BB2; Mat &#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#xFF0C;&#x7531;&#x4E24;&#x4E2A;&#x6570;&#x636E;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#xFF1A;&#x77E9;&#x9635;&#x5934;&#xFF08;&#x5305;&#x542B;&#x77E9;&#x9635;&#x5C3A;&#x5BF8;&#xFF0C;&#x5B58;&#x50A8;&#x65B9;&#x6CD5;&#xFF0C;&#x5B58;&#x50A8;&#x5730;&#x5740;&#x7B49;&#x4FE1;&#x606F;&#xFF09;&#x548C;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x5B58;&#x50A8;&#x6240;&#x6709;&#x50CF;&#x7D20;&#x503C;&#x7684;&#x77E9;&#x9635;&#xFF08;&#x6839;&#x636E;&#x6240;&#x9009;&#x5B58;&#x50A8;&#x65B9;&#x6CD5;&#x7684;&#x4E0D;&#x540C;&#x77E9;&#x9635;&#x53EF;&#x4EE5;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x7EF4;&#x6570;&#xFF09;&#x7684;&#x6307;&#x9488;&#x3002;&#xFF08;&#x53C2;&#x8003;&#x81EA;&#x5B98;&#x7F51;&#x7684;&#x89E3;&#x91CA;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x7684;&#x53EF;&#x4EE5;&#x53BB;&#x5B98;&#x7F51;&#x770B;&#x4E0B;&#x3002;&#xFF09;&#x5728;OpenCV&#x4E2D;&#x7684;Utils&#x7C7B;&#x5C31;&#x6709;&#x4E00;&#x4E2A;&#x73B0;&#x6210;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x5C06;bitmap&#x8F6C;&#x6362;&#x6210;mat&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x51E0;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x5219;&#x662F;&#x5B8C;&#x6210;&#x4E0A;&#x9762;&#x6240;&#x8BF4;&#x7684;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#x3002;&#x9996;&#x5148;&#x662F;&#x7070;&#x5EA6;&#x5316;&#x56FE;&#x7247;&#xFF0C;&#x5C06;&#x56FE;&#x7247;&#x7070;&#x5EA6;&#x5316;&#x4F1A;&#x5927;&#x5927;&#x51CF;&#x5C0F;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x8BA1;&#x7B97;&#x91CF;&#x3002;&#x5176;&#x6B21;&#x5728;&#x5BF9;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x964D;&#x566A;&#x65F6;&#xFF0C;&#x662F;&#x91C7;&#x7528;&#x9AD8;&#x65AF;&#x6EE4;&#x6CE2;&#x6765;&#x8FDB;&#x884C;&#x964D;&#x566A;&#x3002;&#x6700;&#x540E;&#x662F;&#x4E8C;&#x503C;&#x5316;&#x56FE;&#x7247;&#xFF0C;&#x6240;&#x8C13;&#x56FE;&#x50CF;&#x7684;&#x4E8C;&#x503C;&#x5316;&#x5C31;&#x662F;&#x5C06;&#x56FE;&#x50CF;&#x4E0A;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x7070;&#x5EA6;&#x503C;&#x8BBE;&#x7F6E;&#x4E3A;0&#x6216;255&#xFF0C;&#x8FD9;&#x6837;&#x5C06;&#x4F7F;&#x6574;&#x4E2A;&#x56FE;&#x50CF;&#x5448;&#x73B0;&#x51FA;&#x660E;&#x663E;&#x7684;&#x9ED1;&#x767D;&#x6548;&#x679C;&#x3002;&#x5728;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x7684;&#x4E09;&#x884C;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x503C;&#x662F;&#x6E90;mat&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x503C;&#x624D;&#x662F;&#x7ECF;&#x8FC7;&#x5904;&#x7406;&#x540E;&#x5F97;&#x5230;&#x7684;&#x76EE;&#x6807;mat&#x3002;&#x5728;&#x7ECF;&#x8FC7;&#x4EE5;&#x4E0A;&#x5904;&#x7406;&#x540E;&#x7684;&#x56FE;&#x7247;&#x5448;&#x73B0;&#x4E00;&#x4E0B;&#x5F62;&#x72B6;&#xFF0C;&#x5219;&#x662F;&#x4EE5;&#x524D;&#x666F;&#x4E3A;&#x767D;&#x8272;&#xFF0C;&#x80CC;&#x666F;&#x4E3A;&#x9ED1;&#x8272;&#x7684;&#x56FE;&#x7247;&#x3002; ok&#xFF0C;&#x7EE7;&#x7EED;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x5BFB;&#x627E;&#x8FD9;&#x4E9B;&#x767D;&#x8272;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;1234//&#x5BFB;&#x627E;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;List&lt;MatOfPoint&gt; contours = new ArrayList&lt;&gt;();Mat hierarchy = new Mat();Imgproc.findContours(blur1, contours, hierarchy, Imgproc.RETR_EXTERNAL, Imgproc.CHAIN_APPROX_SIMPLE); &#x8FD9;&#x51E0;&#x884C;&#x4EE3;&#x7801;&#x662F;&#x627E;&#x51FA;&#x767D;&#x8272;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;&#xFF0C;&#x8FD9;&#x91CC;&#x5927;&#x6982;&#x8BB2;&#x89E3;&#x4E00;&#x4E0B;findContours&#x7684;&#x51E0;&#x4E2A;&#x53C2;&#x6570;&#xFF1A; public static void findContours(Mat image, List contours, Mat hierarchy, int mode, int method) -Mat image:&#x8981;&#x627E;&#x8F6E;&#x5ED3;&#x7684;&#x56FE;&#x50CF;&#xFF0C;&#x662F;Mat&#x7C7B; -List contours&#xFF1A;&#x627E;&#x5230;&#x7684;&#x8F6E;&#x5ED3;&#x7684;&#x96C6;&#x5408; -Mat hierarchy&#xFF1A;hierarchy&#x662F;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x5411;&#x91CF;&#x5185;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4FDD;&#x5B58;&#x4E86;&#x4E00;&#x4E2A;&#x5305;&#x542B;4&#x4E2A;int&#x6574;&#x578B;&#x7684;&#x6570;&#x7EC4;&#x3002;&#x5411;&#x91CF;hiararchy&#x5185;&#x7684;&#x5143;&#x7D20;&#x548C;&#x8F6E;&#x5ED3;&#x5411;&#x91CF;contours&#x5185;&#x7684;&#x5143;&#x7D20;&#x662F;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x5411;&#x91CF;&#x7684;&#x5BB9;&#x91CF;&#x76F8;&#x540C;&#x3002;hierarchy&#x5411;&#x91CF;&#x5185;&#x6BCF;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;4&#x4E2A;int&#x578B;&#x53D8;&#x91CF;&#x2014;&#x2014;hierarchy[i][0] ~hierarchy[i][3]&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x7B2C;i&#x4E2A;&#x8F6E;&#x5ED3;&#x7684;&#x540E;&#x4E00;&#x4E2A;&#x8F6E;&#x5ED3;&#x3001;&#x524D;&#x4E00;&#x4E2A;&#x8F6E;&#x5ED3;&#x3001;&#x7236;&#x8F6E;&#x5ED3;&#x3001;&#x5185;&#x5D4C;&#x8F6E;&#x5ED3;&#x7684;&#x7D22;&#x5F15;&#x7F16;&#x53F7;&#x3002;&#x82E5;&#x5E76;&#x65E0;&#x524D;&#x540E;&#x8F6E;&#x5ED3;&#x8FD9;&#x4E9B;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x5176;&#x503C;&#x4E3A;-1. -int mode&#xFF1A;&#x5B9A;&#x4E49;&#x8F6E;&#x5ED3;&#x7684;&#x68C0;&#x7D22;&#x6A21;&#x5F0F;:&#x2460;&#xFF1A;RETR_EXTERNAL&#x53EA;&#x68C0;&#x6D4B;&#x6700;&#x5916;&#x56F4;&#x8F6E;&#x5ED3;&#xFF0C;&#x5305;&#x542B;&#x5728;&#x5916;&#x56F4;&#x8F6E;&#x5ED3;&#x5185;&#x7684;&#x5185;&#x56F4;&#x8F6E;&#x5ED3;&#x88AB;&#x5FFD;&#x7565;&#x2461;&#xFF1A;RETR_LIST &#x68C0;&#x6D4B;&#x6240;&#x6709;&#x7684;&#x8F6E;&#x5ED3;&#xFF0C;&#x5305;&#x62EC;&#x5185;&#x56F4;&#x3001;&#x5916;&#x56F4;&#x8F6E;&#x5ED3;&#xFF0C;&#x4F46;&#x662F;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x8F6E;&#x5ED3;&#x4E0D;&#x5EFA;&#x7ACB;&#x7B49;&#x7EA7;&#x5173;&#x7CFB;&#xFF0C;&#x5F7C;&#x6B64;&#x4E4B;&#x95F4;&#x72EC;&#x7ACB;&#xFF0C;&#x6CA1;&#x6709;&#x7B49;&#x7EA7;&#x5173;&#x7CFB;&#xFF0C;&#x8FD9;&#x5C31;&#x610F;&#x5473;&#x7740;&#x8FD9;&#x4E2A;&#x68C0;&#x7D22;&#x6A21;&#x5F0F;&#x4E0B;&#x4E0D;&#x5B58;&#x5728;&#x7236;&#x8F6E;&#x5ED3;&#x6216;&#x5185;&#x5D4C;&#x8F6E;&#x5ED3;&#xFF0C;&#x6240;&#x4EE5;hierarchy&#x5411;&#x91CF;&#x5185;&#x6240;&#x6709;&#x5143;&#x7D20;&#x7684;&#x7B2C;3&#x3001;&#x7B2C;4&#x4E2A;&#x5206;&#x91CF;&#x90FD;&#x4F1A;&#x88AB;&#x7F6E;&#x4E3A;-1&#xFF0C;&#x5177;&#x4F53;&#x4E0B;&#x6587;&#x4F1A;&#x8BB2;&#x5230;&#x2462;&#xFF1A;RETR_CCOMP &#x68C0;&#x6D4B;&#x6240;&#x6709;&#x7684;&#x8F6E;&#x5ED3;&#xFF0C;&#x4F46;&#x6240;&#x6709;&#x8F6E;&#x5ED3;&#x53EA;&#x5EFA;&#x7ACB;&#x4E24;&#x4E2A;&#x7B49;&#x7EA7;&#x5173;&#x7CFB;&#xFF0C;&#x5916;&#x56F4;&#x4E3A;&#x9876;&#x5C42;&#xFF0C;&#x82E5;&#x5916;&#x56F4;&#x5185;&#x7684;&#x5185;&#x56F4;&#x8F6E;&#x5ED3;&#x8FD8;&#x5305;&#x542B;&#x4E86;&#x5176;&#x4ED6;&#x7684;&#x8F6E;&#x5ED3;&#x4FE1;&#x606F;&#xFF0C;&#x5219;&#x5185;&#x56F4;&#x5185;&#x7684;&#x6240;&#x6709;&#x8F6E;&#x5ED3;&#x5747;&#x5F52;&#x5C5E;&#x4E8E;&#x9876;&#x5C42;&#x2463;&#xFF1A;RETR_TREE&#xFF0C; &#x68C0;&#x6D4B;&#x6240;&#x6709;&#x8F6E;&#x5ED3;&#xFF0C;&#x6240;&#x6709;&#x8F6E;&#x5ED3;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x7B49;&#x7EA7;&#x6811;&#x7ED3;&#x6784;&#x3002;&#x5916;&#x5C42;&#x8F6E;&#x5ED3;&#x5305;&#x542B;&#x5185;&#x5C42;&#x8F6E;&#x5ED3;&#xFF0C;&#x5185;&#x5C42;&#x8F6E;&#x5ED3;&#x8FD8;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x5305;&#x542B;&#x5185;&#x5D4C;&#x8F6E;&#x5ED3;&#x3002; -int method:&#x5B9A;&#x4E49;&#x8F6E;&#x5ED3;&#x7684;&#x8FD1;&#x4F3C;&#x65B9;&#x6CD5;&#xFF1A;&#x2460;&#xFF1A;CHAIN_APPROX_NONE &#x4FDD;&#x5B58;&#x7269;&#x4F53;&#x8FB9;&#x754C;&#x4E0A;&#x6240;&#x6709;&#x8FDE;&#x7EED;&#x7684;&#x8F6E;&#x5ED3;&#x70B9;&#x5230;contours&#x5411;&#x91CF;&#x5185;&#x2461;&#xFF1A;CHAIN_APPROX_SIMPLE &#x4EC5;&#x4FDD;&#x5B58;&#x8F6E;&#x5ED3;&#x7684;&#x62D0;&#x70B9;&#x4FE1;&#x606F;&#xFF0C;&#x628A;&#x6240;&#x6709;&#x8F6E;&#x5ED3;&#x62D0;&#x70B9;&#x5904;&#x7684;&#x70B9;&#x4FDD;&#x5B58;&#x5165;contours&#x5411;&#x91CF;&#x5185;&#xFF0C;&#x62D0;&#x70B9;&#x4E0E;&#x62D0;&#x70B9;&#x4E4B;&#x95F4;&#x76F4;&#x7EBF;&#x6BB5;&#x4E0A;&#x7684;&#x4FE1;&#x606F;&#x70B9;&#x4E0D;&#x4E88;&#x4FDD;&#x7559;&#x2462;&#xFF1A;CHAIN_APPROX_TC89_L1&#xFF0C;CHAIN_APPROX_TC89_KCOS&#x4F7F;&#x7528;teh-Chinl chain &#x8FD1;&#x4F3C;&#x7B97;&#x6CD5;&#x627E;&#x5230;&#x8F6E;&#x5ED3;&#x540E;&#xFF0C;&#x662F;&#x65F6;&#x5019;&#x628A;&#x5404;&#x4E2A;&#x5F62;&#x72B6;&#x7684;&#x8F6E;&#x5ED3;&#x7ED9;&#x753B;&#x51FA;&#x6765;&#x4E86;12345678910111213141516171819//&#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x56FE;&#x5F62;&#x7684;&#x8F6E;&#x5ED3;for (MatOfPoint c : contours) { //&#x8BA1;&#x7B97;&#x8F6E;&#x5ED3;&#x7684;&#x4E2D;&#x5FC3; Moments m = Imgproc.moments(c); int cx = (int) (m.m10 / m.m00); int cy = (int) (m.m01 / m.m00); //&#x753B;&#x8F6E;&#x5ED3; Imgproc.drawContours(rgbMat, contours, -1, new Scalar(0, 255, 0), 2); //&#x753B;&#x4E2D;&#x5FC3;&#x7684;&#x5706;&#x70B9; Imgproc.circle(rgbMat, new Point(cx, cy), 7, new Scalar(255, 255, 255), -1); //&#x5728;&#x5706;&#x70B9;&#x65C1;&#x8FB9;&#x663E;&#x793A;&#x6587;&#x5B57;center Imgproc.putText(rgbMat, &quot;center&quot;, new Point(cx - 20, cy - 20), Core.FONT_HERSHEY_SIMPLEX, 0.5, new Scalar(255, 255, 255), 2); //&#x518D;&#x628A;mat&#x8F6C;&#x6362;&#x4E3A;bitmap&#x663E;&#x793A;&#x51FA;&#x6765; Bitmap grayBitmap; grayBitmap = Bitmap.createBitmap(srcBitmap.getWidth(), srcBitmap.getHeight(), Bitmap.Config.RGB_565); Utils.matToBitmap(rgbMat, grayBitmap); img.setImageBitmap(grayBitmap);} &#x5176;&#x4E2D;&#xFF0C;moments&#x4E3A;&#x56FE;&#x5F62;&#x7684;&#x4E09;&#x9636;&#x77E9;&#xFF0C;&#x800C;&#x6B64;&#x65F6;&#x4E3A;&#x4E86;&#x8BA1;&#x7B97;&#x51FA;&#x8F6E;&#x5ED3;&#x7684;&#x4E2D;&#x5FC3;&#xFF0C;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x4EE5;&#x4E0B;&#x516C;&#x5F0F;&#xFF1A; &#x63A5;&#x4E0B;&#x6765;&#x89E3;&#x91CA;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x503C;&#xFF1A; &#x2460;drawContours(Mat image, List contours, int contourIdx, Scalar color, int thickness)&#x7684;&#x5404;&#x4E2A;&#x53C2;&#x6570;&#x89E3;&#x91CA;&#x5982;&#x4E0B;&#xFF1A; Mat image&#xFF1A;&#x8868;&#x793A;&#x76EE;&#x6807;&#x56FE;&#x50CF; List contours&#xFF1A;&#x8868;&#x793A;&#x8F93;&#x5165;&#x7684;&#x8F6E;&#x5ED3;&#x7EC4; int contourIdx&#xFF1A;&#x6307;&#x660E;&#x753B;&#x7B2C;&#x51E0;&#x4E2A;&#x8F6E;&#x5ED3;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x53C2;&#x6570;&#x4E3A;&#x8D1F;&#x503C;&#xFF0C;&#x5219;&#x753B;&#x5168;&#x90E8;&#x8F6E;&#x5ED3;&#x3002;&#x4E0A;&#x9762;&#x5F15;&#x7528;&#x65F6;&#x586B;&#x4E86;-1&#xFF0C;&#x4EE3;&#x8868;&#x753B;&#x51FA;&#x5168;&#x90E8;&#x8F6E;&#x5ED3;&#x3002; Scalar color&#xFF1A;&#x4E3A;&#x8F6E;&#x5ED3;&#x7684;&#x989C;&#x8272;&#xFF0C;Scalar&#x8868;&#x793A;&#x4E86;&#x5177;&#x6709;4&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x7528;&#x6765;&#x8868;&#x793A;RGB&#x989C;&#x8272;&#x503C;&#xFF08;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#xFF09;&#x3002;Scalar( a, b, c )&#x5219;&#x4EE3;&#x8868;&#x7684;RGB&#x989C;&#x8272;&#x503C;&#x4E3A;&#xFF1A;Red = c, Green = b and Blue= a int thickness&#xFF1A;&#x4E3A;&#x8F6E;&#x5ED3;&#x7684;&#x7EBF;&#x5BBD;&#xFF0C;&#x5982;&#x679C;&#x4E3A;&#x8D1F;&#x503C;&#x6216;CV_FILLED&#x8868;&#x793A;&#x586B;&#x5145;&#x8F6E;&#x5ED3;&#x5185;&#x90E8;&#x3002; &#x2461;public static void circle(Mat img, Point center, int radius, Scalar color, int thickness)&#x53C2;&#x6570;&#x89E3;&#x91CA;&#xFF1A; Mat img&#xFF1A;&#x4E3A;&#x6E90;&#x56FE;&#x50CF; Point center&#xFF1A;&#x4E3A;&#x753B;&#x5706;&#x7684;&#x5706;&#x5FC3;&#x5750;&#x6807; int radius&#xFF1A;&#x4E3A;&#x5706;&#x7684;&#x534A;&#x5F84; Scalar color&#xFF1A;&#x4E3A;&#x8BBE;&#x5B9A;&#x5706;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x89C4;&#x5219;&#x6839;&#x636E;B&#xFF08;&#x84DD;&#xFF09;G&#xFF08;&#x7EFF;&#xFF09;R&#xFF08;&#x7EA2;&#xFF09; int thickness&#xFF1A;&#x5982;&#x679C;&#x662F;&#x6B63;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x7EC4;&#x6210;&#x5706;&#x7684;&#x7EBF;&#x6761;&#x7684;&#x7C97;&#x7EC6;&#x7A0B;&#x5EA6;&#x3002;&#x5426;&#x5219;&#xFF0C;&#x8868;&#x793A;&#x5706;&#x662F;&#x5426;&#x88AB;&#x586B;&#x5145;&#x3002; &#x2462;public static void putText(Mat img, String text, Point org, int fontFace, double fontScale, Scalar color, int thickness)&#x53C2;&#x6570;&#x89E3;&#x91CA;&#xFF1A; Mat img&#xFF1A;&#x9700;&#x8981;&#x5199;&#x5B57;&#x7684;&#x539F;&#x56FE;&#x50CF; String text&#xFF1A;&#x9700;&#x8981;&#x5199;&#x7684;&#x5185;&#x5BB9; Point org&#xFF1A;&#x9700;&#x8981;&#x5199;&#x7684;&#x5185;&#x5BB9;&#x7684;&#x5DE6;&#x4E0B;&#x89D2;&#x7684;&#x5750;&#x6807; int fontFace:&#x5B57;&#x4F53;&#x6837;&#x5F0F;&#xFF0C;&#x5176;&#x53D6;&#x503C;&#x5982;&#x4E0B;&#xFF1A;-FONT_HERSHEY_SIMPLEX &#x2013; &#x6B63;&#x5E38;&#x5927;&#x5C0F;&#x65E0;&#x886C;&#x7EBF;&#x5B57;&#x4F53;&#x3002;-FONT_HERSHEY_PLAIN &#x2013; &#x5C0F;&#x53F7;&#x65E0;&#x886C;&#x7EBF;&#x5B57;&#x4F53;&#x3002;-FONT_HERSHEY_DUPLEX &#x2013; &#x6B63;&#x5E38;&#x5927;&#x5C0F;&#x65E0;&#x886C;&#x7EBF;&#x5B57;&#x4F53;&#x3002;( &#x6BD4;CV_FONT_HERSHEY_SIMPLEX&#x66F4;&#x590D;&#x6742;)-FONT_HERSHEY_COMPLEX &#x2013; &#x6B63;&#x5E38;&#x5927;&#x5C0F;&#x6709;&#x886C;&#x7EBF;&#x5B57;&#x4F53;&#x3002;-FONT_HERSHEY_TRIPLEX &#x2013; &#x6B63;&#x5E38;&#x5927;&#x5C0F;&#x6709;&#x886C;&#x7EBF;&#x5B57;&#x4F53; ( &#x6BD4;CV_FONT_HERSHEY_COMPLEX&#x66F4;&#x590D;&#x6742;)-FONT_HERSHEY_COMPLEX_SMALL &#x2013; CV_FONT_HERSHEY_COMPLEX &#x7684;&#x5C0F;&#x8BD1;&#x672C;&#x3002;-FONT_HERSHEY_SCRIPT_SIMPLEX &#x2013; &#x624B;&#x5199;&#x98CE;&#x683C;&#x5B57;&#x4F53;&#x3002;-FONT_HERSHEY_SCRIPT_COMPLEX &#x2013; &#x6BD4;CV_FONT_HERSHEY_SCRIPT_SIMPLEX&#x66F4;&#x590D;&#x6742;&#x3002; double fontScale&#xFF1A;&#x5B57;&#x4F53;&#x5927;&#x5C0F; Scalar color&#xFF1A;&#x989C;&#x8272; int thickness&#xFF1A;&#x5B57;&#x4F53;&#x7684;&#x539A;&#x5EA6; ok&#xFF0C;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x6548;&#x679C;&#xFF1A; &#x6700;&#x7EC8;&#x6548;&#x679C;&#x56FE; &#x81F3;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5B9E;&#x73B0;&#x4E86;&#x60F3;&#x8981;&#x7684;&#x6548;&#x679C;&#x3002;&#x672C;&#x6587;&#x6240;&#x63D0;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x77E5;&#x8BC6;&#x6709;&#x4E9B;&#x662F;&#x6458;&#x53D6;&#x4E86;&#x522B;&#x4EBA;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x5982;&#x82E5;&#x4F5C;&#x8005;&#x89C9;&#x5F97;&#x4FB5;&#x6743;&#xFF0C;&#x8BF7;&#x8054;&#x7CFB;&#x6211;&#xFF0C;&#x6211;&#x9A6C;&#x4E0A;&#x5220;&#x9664;&#x3002;&#x672C;&#x4EBA;&#x4E5F;&#x662F;&#x521A;&#x63A5;&#x89E6;OpenCV,&#x8FD8;&#x662F;&#x6709;&#x4E00;&#x5806;&#x77E5;&#x8BC6;&#x662F;&#x4E0D;&#x61C2;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x54EA;&#x91CC;&#x8BB2;&#x9519;&#x6B22;&#x8FCE;&#x5927;&#x5BB6;&#x591A;&#x591A;&#x6307;&#x6559;&#x3002; ps:&#x672C;&#x4EE3;&#x7801;&#x662F;&#x4EE5;&#x767D;&#x8272;&#x524D;&#x666F;&#xFF0C;&#x9ED1;&#x8272;&#x80CC;&#x666F;&#x4F5C;&#x4E3A;&#x8BBE;&#x60F3;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x989C;&#x8272;&#x80CC;&#x666F;&#x7684;&#x56FE;&#x7247;&#x9700;&#x505A;&#x4E00;&#x5B9A;&#x7684;&#x5904;&#x7406;&#x624D;&#x6709;&#x6548;&#x3002;&#x6700;&#x540E;&#x9644;&#x4E0A;&#x6211;&#x770B;&#x7684;&#x6559;&#x7A0B;&#xFF1A;https://www.pyimagesearch.com/2016/02/01/opencv-center-of-contour/&#x8BE5;&#x535A;&#x4E3B;&#x5199;&#x4E86;&#x5F88;&#x591A;&#x535A;&#x6587;&#xFF0C;&#x800C;&#x4E14;&#x95EE;&#x7684;&#x95EE;&#x9898;&#x535A;&#x4E3B;&#x4E5F;&#x4F1A;&#x7ED9;&#x4F60;&#x89E3;&#x7B54;&#xFF0C;&#x552F;&#x4E00;&#x7F3A;&#x70B9;&#x5C31;&#x662F;&#x5168;&#x82F1;2333&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x5C0F;&#x4F19;&#x4F34;&#x53EF;&#x4EE5;&#x53BB;&#x77A7;&#x77A7;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"Android","slug":"Android","permalink":"https://secretlin.github.io/blog/tags/Android/"}]},{"title":"如何在Android中使用OpenCV","date":"2018-07-19T10:14:51.793Z","path":"/posts/55a035ad/","text":"&#x6D45;&#x6790;ViewModel&#x3001;LiveData&#x3001;DataBinding&#x539F;&#x7406;1.&#x5148;&#x5728;&#x5B98;&#x7F51;&#x4E2D;&#x4E0B;&#x8F7D;OpenCV&#x7684;android&#x5305;&#xFF1A;https://opencv.org/releases.html 2.&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;Android&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x7136;&#x540E;File -&gt; New -&gt; Import Module&#xFF0C;&#x9009;&#x62E9;&#x521A;&#x521A;&#x4E0B;&#x8F7D;&#x7684;OpenCV&#x4E2D;&#x7684;sdk&#x7684;java&#xFF0C;&#x5047;&#x8BBE;&#x547D;&#x540D;&#x4E3A;OpenCVLibrary&#xFF0C;&#x5BFC;&#x5165;&#x3002; step1 3.&#x628A;&#x5BFC;&#x5165;&#x7684;OpenCV&#x7684;build.gradle&#x7684;sdk&#x73AF;&#x5883;&#x6539;&#x6210;&#x8DDF;&#x73B0;&#x5728;&#x9879;&#x76EE;&#x7684;&#x4E00;&#x6837;&#x3002; step2 4.&#x53F3;&#x952E;&#x70B9;&#x51FB;app&#xFF0C;&#x9009;&#x62E9;Open Module Settings&#xFF0C;&#x9009;&#x62E9;Dependences&#x7684;Module dependency step3 &#x7136;&#x540E;&#x9009;&#x62E9;OpenCVLibrary5.&#x628A;&#x4E0B;&#x8F7D;&#x7684;OpenCV&#x4E2D;&#x7684;sdk/native/libs&#x4E2D;&#x7684;&#x4E1C;&#x897F;&#x5168;&#x90E8;&#x653E;&#x5165;app&#x7684;libs&#x4E2D;&#x5927;&#x529F;&#x544A;&#x6210;&#xFF5E;&#x53EF;&#x4EE5;&#x9009;&#x62E9;OpenCV&#x4E2D;&#x7684;sample&#x8BD5;&#x4E00;&#x4E0B;&#x662F;&#x4E0D;&#x662F;&#x53EF;&#x4EE5;&#x7528;~ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"Android","slug":"Android","permalink":"https://secretlin.github.io/blog/tags/Android/"},{"name":"Jetpack","slug":"Jetpack","permalink":"https://secretlin.github.io/blog/tags/Jetpack/"}]},{"title":"快速幂：快速进行幂运算","date":"2018-02-21T10:09:12.453Z","path":"/posts/79d4ba37/","text":"&#x4E4B;&#x6240;&#x4EE5;&#x77E5;&#x9053;&#x6709;&#x5FEB;&#x901F;&#x5E42;&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x4E4B;&#x524D;&#x5728;&#x505A;&#x9898;&#x7684;&#x65F6;&#x5019;&#x521A;&#x597D;&#x78B0;&#x5230;&#x7684;&#x5927;&#x6570;&#x7684;&#x5E42;&#x8FD0;&#x7B97;&#x3002;&#x7B97;&#x6CD5;&#x8BB2;&#x7A76;&#x7684;&#x662F;&#x7528;&#x5C3D;&#x91CF;&#x5C0F;&#x7684;&#x5185;&#x5B58;&#x548C;&#x5C3D;&#x91CF;&#x77ED;&#x7684;&#x65F6;&#x95F4;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x53EA;&#x7528;&#x5E73;&#x5E38;&#x7684;&#x65B9;&#x6CD5;&#x8BA1;&#x7B97;&#xFF0C;&#x52BF;&#x5FC5;&#x4F1A;&#x8D85;&#x5185;&#x5B58;&#x548C;&#x8D85;&#x65F6;&#x3002;&#x5B66;&#x4E86;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x51B3;&#x5B9A;&#x5F00;&#x59CB;&#x5199;&#x535A;&#x5BA2;&#x8BB0;&#x4E0B;&#x6765;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x6DF1;&#x81EA;&#x5DF1;&#x5BF9;&#x8BE5;&#x7B97;&#x6CD5;&#x7684;&#x7406;&#x89E3;&#x3002;&#x5728;&#x8BB2;&#x5FEB;&#x901F;&#x5E42;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x5F15;&#x5165;&#x5E42;&#x8FD0;&#x7B97;&#x7684;&#x4E00;&#x4E2A;&#x516C;&#x5F0F;&#xFF1A; &#x540C;&#x5E95;&#x6570;&#x5E42;&#x76F8;&#x4E58;&#xFF0C;&#x5E95;&#x6570;&#x4E0D;&#x53D8;&#xFF0C;&#x6307;&#x6570;&#x76F8;&#x52A0;&#x3002;&#x8FD9;&#x662F;&#x9AD8;&#x4E2D;or&#x521D;&#x4E2D;&#x5C31;&#x77E5;&#x9053;&#x7684;&#x4E00;&#x6761;&#x516C;&#x5F0F;&#xFF0C;&#x5728;&#x5FEB;&#x901F;&#x5E42;&#x4E2D;&#xFF0C;a&#x7684;b&#x6B21;&#x65B9;&#x53EF;&#x4EE5;&#x770B;&#x6210;a&#x7684;x&#x6B21;&#x65B9;&#x4E0E;a&#x7684;(b-x)&#x6B21;&#x65B9;&#x76F8;&#x4E58;&#xFF0C;&#x8FDB;&#x4E00;&#x6B65;&#x53C8;&#x53EF;&#x4EE5;&#x5C06;b&#x62C6;&#x5206;&#x6210;&#x591A;&#x4E2A;&#x6570;&#x76F8;&#x52A0;&#x7136;&#x540E;&#x518D;&#x8BA1;&#x7B97;&#x3002; &#x6B64;&#x65F6;&#xFF0C;&#x53C8;&#x8981;&#x5F15;&#x5165;&#x4E00;&#x4E2A;&#x77E5;&#x8BC6;&#x70B9;&#xFF1A;&#x4E8C;&#x8FDB;&#x5236;b&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#x7531;0&#x548C;1&#x6784;&#x6210;&#x7684;&#xFF0C;&#x5373;b=0&#xFF08;&#x6216;&#x8005;1&#xFF09; &#xFF08;2^i&#xFF09;+&#x2026;.&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;x&#x5C31;&#x662F;2&#x7684;i&#x6B21;&#x65B9;&#x4E0E;0&#x6216;1&#x76F8;&#x4E58;&#xFF0C;&#x6240;&#x4EE5;&#x8BA1;&#x7B97;&#x7684;&#x65F6;&#x5019;&#x662F;&#x8981;&#x5BF9;b&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x4E0A;&#x5168;&#x90E8;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x904D;&#x5386;&#x3002;&#x6839;&#x636E;0&#x4E0E;&#x4EFB;&#x4F55;&#x6570;&#x76F8;&#x4E58;&#x90FD;&#x4E3A;0&#xFF0C;&#x800C;&#x4E14;&#x4EFB;&#x4F55;&#x6570;&#x7684;0&#x6B21;&#x65B9;&#x90FD;&#x4E3A;1&#xFF0C;&#x5728;&#x7D2F;&#x4E58;&#x60C5;&#x51B5;&#x4E0B;&#x662F;&#x6CA1;&#x6709;&#x5F71;&#x54CD;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5F53;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x7684;&#x6570;&#x4E3A;0&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x53BB;&#x8BA1;&#x7B97;&#xFF0C;&#x53EA;&#x5173;&#x6CE8;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x4E0A;&#x7684;&#x6570;&#x4E3A;1&#x65F6;&#x5C31;&#x53EF;&#x4EE5;&#x3002;&#x5373; a^b = a ^ ( (2^i) 1 + &#x2026;.. )= a ^ ( (2^i) 1 ) a ^ ( (2^i1) 1 ) &#x2026;&#x2026;= a ^ (2^i) \\ a ^ (2^i1) \\ &#x2026;&#x2026; &#x73B0;&#x5728;&#x6765;&#x89E3;&#x51B3;2^i&#x2026;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;5&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4E3A;101&#xFF0C;&#x5373;5 = 2^21+ 2^10 + 2^01&#x3002;&#x5728;&#x4E0D;&#x53BB;&#x6389;0&#x7684;&#x60C5;&#x51B5;&#x4E0B;,&#x5047;&#x8BBE;bi&#x4EE3;&#x8868;&#x7684;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x4E0A;&#x7684;1&#x6216;0&#xFF0C;a^b = a^((2^0)b0) a^((2^1)b1) a^((2^2)b2)&#x2026;..&#x5206;&#x79BB;&#x51FA;&#x6BCF;&#x4E2A;&#x4E58;&#x6570;&#xFF0C;&#x8BBE;A0=a^((2^0)b0)&#xFF0C;A1=a^((2^1)b1)&#xFF0C;A2=a^((2^2)b2)&#xFF0C;&#x5148;&#x4E0D;&#x770B;bi&#xFF0C;&#x5373;A0=a^(2^0),A1=a^(2^1),A2=a^(2^2),&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;A1&#x662F;A0&#x7684;&#x5E73;&#x65B9;&#x500D;&#xFF0C;A2&#x662F;A1&#x7684;&#x5E73;&#x65B9;&#x500D;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728;&#x904D;&#x5386;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x7684;&#x5168;&#x90E8;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;a = aa&#xFF0C;&#x9010;&#x6B65;&#x9012;&#x63A8;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x8003;&#x8651;2^i&#xFF0C;&#x53EA;&#x662F;&#x5728;&#x8BA1;&#x7B97;&#x65F6;&#x8003;&#x8651;bi&#x662F;0&#x8FD8;&#x662F;1&#xFF0C;&#x8981;&#x4E0D;&#x8981;&#x628A;&#x8FD9;&#x4E2A;&#x6570;&#x7B97;&#x8FDB;&#x603B;&#x5F97;&#x6570;&#x800C;&#x5DF2;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x518D;&#x5F15;&#x8FDB;&#x4E00;&#x6761;&#x516C;&#x5F0F;&#xFF1A; (ab)%c=(a%c)(b%c)%c &#x4E3A;&#x4EC0;&#x4E48;&#x8981;%C&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x505A;&#x53EF;&#x4EE5;&#x51CF;&#x5C0F;a&#x7684;&#x6570;&#xFF0C;&#x53D6;&#x6700;&#x540E;&#x5927;&#x6570;&#x4E2D;&#x7684;&#x540E;&#x9762;&#x51E0;&#x4E2A;&#x6570;&#x6765;&#x8BA1;&#x7B97;&#xFF0C;&#x4E0D;&#x81F3;&#x4E8E;&#x6570;&#x5B57;&#x8FC7;&#x5927;&#x800C;&#x8D85;&#x65F6;&#x8D85;&#x5185;&#x5B58;&#xFF0C;&#x800C;&#x4E14;&#x4E5F;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x7ED3;&#x679C;&#x3002; &#x7EFC;&#x4E0A;&#xFF0C;&#x5199;&#x6210;JAVA&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;12345678910111213141516171819 //&#x6C42;a^b&#xFF0C;c&#x7528;&#x6765;&#x7F29;&#x5C0F;&#x8303;&#x56F4;public static int quick(int a,int b,int c){ int sum = 1;//&#x8BB0;&#x5F55;&#x6700;&#x7EC8;&#x5F97;&#x6570; a = a%c;//&#x53EA;&#x9700;&#x8981;&#x6700;&#x540E;&#x51E0;&#x4F4D;&#x5C31;&#x53EF;&#x4EE5;&#x4E86; while (b&gt;0){ if ((b&amp;1)==1){ //&#x8BE5;&#x6570;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4F4D;&#x4E3A;1&#x65F6;&#x624D;&#x8BA1;&#x7B97; sum = (sum*a)%c; } b &gt;&gt;=1 ;//&#x4E3B;&#x8981;&#x662F;&#x904D;&#x5386;b&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x7684;&#x5168;&#x90E8;&#x6570;&#x5B57;&#xFF0C;&#x8FD9;&#x6837;&#x662F;&#x5F80;&#x524D;&#x4E00;&#x4E2A; a = (a * a)%c;//&#x56E0;&#x4E3A;&#x540E;&#x4E00;&#x4E2A;&#x4E58;&#x79EF;&#x662F;&#x524D;&#x4E00;&#x4E2A;&#x7684;&#x5E73;&#x65B9;&#x500D;&#x3002; } return sum;} &#x5B66;&#x5B8C;&#x77E5;&#x8BC6;&#x5C31;&#x5F00;&#x59CB;&#x8FD0;&#x7528;&#x5566;hdu:2035 &#x4EBA;&#x89C1;&#x4EBA;&#x7231;A^B:&#x201D;http://acm.hdu.edu.cn/showproblem.php?pid=2035&#x201C; &#x9644;&#x4E0A;&#x6211;&#x7684;ac&#x4EE3;&#x7801;123456789101112131415161718192021222324252627282930313233343536373839import java.util.*;public class Main { public static void main(String[] args) throws IOException { Scanner scanner = new Scanner(System.in); while (true){ int a = scanner.nextInt(); int b = scanner.nextInt(); if (a!=0 &amp;&amp; b!=0){ System.out.println(quick(a,b,1000)); } else { return; } } } //&#x6C42;a^b&#xFF0C;c&#x7528;&#x6765;&#x7F29;&#x5C0F;&#x8303;&#x56F4; public static int quick(int a,int b,int c){ int sum = 1;//&#x8BB0;&#x5F55;&#x6700;&#x7EC8;&#x5F97;&#x6570; a = a%c;//&#x53EA;&#x9700;&#x8981;&#x6700;&#x540E;&#x51E0;&#x4F4D;&#x5C31;&#x53EF;&#x4EE5;&#x4E86; while (b&gt;0){ if ((b&amp;1)==1){ //&#x8BE5;&#x6570;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4F4D;&#x4E3A;1&#x65F6;&#x624D;&#x8BA1;&#x7B97; sum = (sum*a)%c; } b &gt;&gt;=1 ;//&#x4E3B;&#x8981;&#x662F;&#x904D;&#x5386;b&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;&#x7684;&#x5168;&#x90E8;&#x6570;&#x5B57;&#xFF0C;&#x8FD9;&#x6837;&#x662F;&#x5F80;&#x524D;&#x4E00;&#x4E2A; a = (a * a)%c;//&#x56E0;&#x4E3A;&#x540E;&#x4E00;&#x4E2A;&#x4E58;&#x79EF;&#x662F;&#x524D;&#x4E00;&#x4E2A;&#x7684;&#x5E73;&#x65B9;&#x500D;&#x3002; } return sum; }} &#x5728;&#x5B66;&#x5FEB;&#x901F;&#x5E42;&#x7684;&#x65F6;&#x5019;&#x770B;&#x4E86;&#x5F88;&#x591A;&#x535A;&#x5BA2;&#xFF0C;&#x5BF9;&#x6211;&#x5E2E;&#x52A9;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x662F;&#xFF1A;http://blog.csdn.net/ltyqljhwcm/article/details/53043646 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"算法","slug":"算法","permalink":"https://secretlin.github.io/blog/tags/算法/"}]},{"title":"vue.js的修饰符","date":"2018-02-21T10:06:30.905Z","path":"/posts/ddf887c5/","text":"vue.js&#x7684;&#x51E0;&#x4E2A;&#x4FEE;&#x9970;&#x7B26;&#x7406;&#x89E3;Vue.js &#x4E3A; v-on &#x63D0;&#x4F9B;&#x4E86;&#x4E8B;&#x4EF6;&#x4FEE;&#x9970;&#x7B26;&#xFF0C;&#x65B9;&#x4FBF;&#x5BF9;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x8FDB;&#x884C;&#x8FC7;&#x6EE4;&#x5904;&#x7406;&#x4E8B;&#x4EF6;&#x4FEE;&#x9970;&#x7B26;&#x5982;&#x4E0B;&#xFF1A; .stop.prevent.capture.self.once&#x4E0B;&#x9762;&#x9010;&#x4E2A;&#x89E3;&#x91CA;&#xFF0C;&#x5E76;&#x7ED9;&#x51FA;&#x4F8B;&#x5B50; a. .stop&#x77E5;&#x8BC6;&#x70B9;&#xFF1A;js&#x7684;&#x4E8B;&#x4EF6;&#x5192;&#x6CE1;&#xFF1A;&#x5373;&#x7236;&#x5143;&#x7D20;&#x8DDF;&#x5B50;&#x5143;&#x7D20;&#x8C03;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x5F53;&#x70B9;&#x51FB;&#x5B50;&#x5143;&#x7D20;&#x4F1A;&#x6267;&#x884C;&#x4E24;&#x6B21;&#xFF0C;&#x5148;&#x6267;&#x884C;&#x5B50;&#x5143;&#x7D20;&#x7684;&#x4E8B;&#x4EF6;&#xFF0C;&#x518D;&#x6267;&#x884C;&#x7236;&#x5143;&#x7D20;&#x7684;&#x4E8B;&#x4EF6;&#x3002;&#x5982;&#xFF1A;1234567891011121314&lt;div id=&quot;app-1&quot; @click=&quot;doThis($event,&apos;parent&apos;)&quot;&gt; &#x70B9;&#x51FB;&#x7236;&#x5143;&#x7D20; &lt;a v-on:click=&quot;doThis($event,&apos;child&apos;)&quot;&gt;&#x70B9;&#x51FB;&#x5B50;&#x5143;&#x7D20;&lt;/a&gt;&lt;/div&gt;new Vue({ el: &apos;#app-1&apos;, methods: { doThis: function (e,msg) { if(e){ alert(msg) } } }}) &#x7ED3;&#x679C;&#xFF1A;&#x5148;&#x5F39;&#x51FA;parent&#x518D;&#x5F39;&#x51FA;child &#x4F46;&#x662F;!!&#x5982;&#x679C;&#x662F;v-on:click.stop&#x7684;&#x8BDD;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x70B9;&#x51FB;&#x5B50;&#x5143;&#x7D20;&#x8FD8;&#x662F;&#x4F1A;&#x5148;&#x6267;&#x884C;&#x4E24;&#x6B21;&#xFF0C;&#x518D;&#x6B21;&#x70B9;&#x51FB;&#x65F6;&#x5C31;&#x53EA;&#x4F1A;&#x51FA;&#x73B0;&#x6267;&#x884C;&#x5B50;&#x5143;&#x7D20;&#x7684;&#x51FD;&#x6570;&#x4E86; b. .capture &lt;div id=&quot;parent&quot; @click.capture=&quot;doThis($event,&apos;hh&apos;)&quot;&gt; &#x70B9;&#x51FB;&#x7236;&#x5143;&#x7D20; &lt;a v-on:click=&quot;doThis($event,&apos;child&apos;)&quot; id=&quot;child&quot;&gt;&#x70B9;&#x51FB;&#x5B50;&#x5143;&#x7D20;&lt;/a&gt; &lt;/div&gt; &#x77E5;&#x8BC6;&#x70B9;&#xFF1A;event.preventDefault()&#xFF1A;&#x963B;&#x6B62;&#x5143;&#x7D20;&#x53D1;&#x751F;&#x9ED8;&#x8BA4;&#x7684;&#x884C;&#x4E3A;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x70B9;&#x51FB;a&#x6807;&#x7B7E;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x8DF3;&#x8F6C;&#xFF09;&#x3002;.pervent&#x7684;&#x4F5C;&#x7528;&#x8DDF;event.preventDefault()&#x4E00;&#x6837;&#x3002; PS&#xFF1A;&#x82E5;&#x8981;&#x963B;&#x6B62;&#x4E8B;&#x4EF6;&#x5192;&#x6CE1;&#xFF0C;&#x5219;&#x5E94;&#x8BE5;&#x4FEE;&#x6539;&#x5B50;&#x5143;&#x7D20;&#x7684;click.stop&#x82E5;&#x8981;&#x6267;&#x884C;&#x4E8B;&#x4EF6;&#x6355;&#x83B7;&#xFF0C;&#x5219;&#x5E94;&#x8BE5;&#x4FEE;&#x6539;&#x7236;&#x5143;&#x7D20;&#x7684;click.capture c. .prevent&#x77E5;&#x8BC6;&#x70B9;&#xFF1A;event.preventDefault()&#xFF1A;&#x963B;&#x6B62;&#x5143;&#x7D20;&#x53D1;&#x751F;&#x9ED8;&#x8BA4;&#x7684;&#x884C;&#x4E3A;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x70B9;&#x51FB;a&#x6807;&#x7B7E;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x8DF3;&#x8F6C;&#xFF09;&#x3002;.pervent&#x7684;&#x4F5C;&#x7528;&#x8DDF;event.preventDefault()&#x4E00;&#x6837;&#x3002;PS&#xFF1A;&#x5982;&#x679C;&#x53EA;&#x662F;&#x5355;&#x7EAF;&#x7684;a&#x6807;&#x7B7E;&#x963B;&#x6B62;&#x8DF3;&#x8F6C;&#x7684;&#x8BDD;&#xFF0C;&#x8BB0;&#x5F97;&#x8981;new Vue&#x624D;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;.prevent&#x7684;&#x4F5C;&#x7528; d. .self.self&#x4E0D;&#x4F1A;&#x6267;&#x884C;&#x4E0D;&#x662F;&#x672C;&#x8EAB;&#x8C03;&#x7528;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#x4E8B;&#x4EF6;&#x5192;&#x6CE1;&#x4F1A;&#x8C03;&#x7528;&#x5B50;&#x5143;&#x7D20;&#x548C;&#x7236;&#x5143;&#x7D20;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4F46;&#x5F53;&#x7236;&#x5143;&#x7D20;&#x4F7F;&#x7528;&#x4E86;.self&#xFF0C;&#x5219;&#x70B9;&#x51FB;&#x5B50;&#x5143;&#x7D20;&#x65F6;&#x53EA;&#x4F1A;&#x8C03;&#x7528;&#x5B50;&#x5143;&#x7D20;&#x7684;&#x51FD;&#x6570;&#xFF1B; e. .once.once&#x5982;&#x5176;&#x540D;&#xFF0C;&#x53EA;&#x4F1A;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x800C;&#x5DF2;&#x3002; &#x6309;&#x952E;&#x4FEE;&#x9970;&#x7B26;&#xFF1A;&#x4F7F;&#x7528;@keyup.xx&#x6765;&#x8C03;&#x7528;&#x6309;&#x952E;&#x4E8B;&#x4EF6;&#xFF0C;&#x5E38;&#x89C1;&#x6309;&#x952E;&#x540D;&#x5982;&#x4E0B;&#xFF1A; .enter.tab.delete (&#x6355;&#x83B7;&#x201C;&#x5220;&#x9664;&#x201D;&#x548C;&#x201C;&#x9000;&#x683C;&#x201D;&#x952E;).esc.spacecamelCase.up.down.left.right&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;&#x4FEE;&#x9970;&#x7B26;&#x7684;&#x8BDD;&#xFF0C;&#x53D6;&#x540D;&#x5B57;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;camelCase&#x8FD9;&#x79CD;&#x5927;&#x5C0F;&#x5199;&#x5F62;&#x5F0F;&#xFF0C;&#x53EA;&#x80FD;&#x4F7F;&#x7528;kebab-case &#x4E14;&#x7528;&#x53CC;&#x5F15;&#x53F7;&#x62EC;&#x8D77;&#x6765;&#x3002;&#x5982;&#x679C;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;Vue.config.keyCodes.ent = 13&#x6765;&#x5B9A;&#x4E49;&#xFF0C;&#x5982;&#x679C;&#x540D;&#x5B57;&#x662F;&#x591A;&#x4E2A;&#x5355;&#x8BCD;&#x7EC4;&#x5408;&#xFF0C;&#x5219;&#x8981;&#x7528;&#xFF1A; Vue.config.keyCodes = { &#x201C;media-play-pause&#x201D;: 179 } //2.5.0 &#x65B0;&#x589E;&#x53EF;&#x76F4;&#x63A5;&#x5C06; KeyboardEvent.key &#x66B4;&#x9732;&#x7684;&#x4EFB;&#x610F;&#x6709;&#x6548;&#x6309;&#x952E;&#x540D;&#x8F6C;&#x6362;&#x4E3A; kebab-case &#x6765;&#x4F5C;&#x4E3A;&#x4FEE;&#x9970;&#x7B26;&#xFF0C;&#x6BD4;&#x5982;CapsLock&#x952E;&#xFF1A; &lt;input type=&quot;text&quot; width=&quot;50px&quot; height=&quot;20px&quot; @keyup.caps-lock=&quot;sendMsg(&apos;2333&apos;)&quot;&gt; &#x5173;&#x4E8E;&#x5176;&#x4ED6;KeyValue&#x503C;&#x53EF;&#x770B;&#xFF1A;https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values &#x5176;&#x4ED6;&#x4FEE;&#x9970;&#x7B26;&#x53EF;&#x53C2;&#x8003;&#x5B98;&#x7F51;&#xFF1A;https://cn.vuejs.org/v2/guide/events.html#&#x4E8B;&#x4EF6;&#x4FEE;&#x9970;&#x7B26; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"前端","slug":"前端","permalink":"https://secretlin.github.io/blog/tags/前端/"}]}]